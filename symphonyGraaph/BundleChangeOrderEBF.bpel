<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Jan 21 16:25:28 EET 2019
  Author:  omur.yildirim
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="BundleChangeOrderEBF" targetNamespace="http://xmlns.ttnet.com.tr/services/BundleChangeOrderEBF/BundleChangeOrderEBF" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:client="http://xmlns.ttnet.com.tr/services/BundleChangeOrderEBF/BundleChangeOrderEBF" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ns1="http://xmlns.ttnet.com.tr/Service/BundleChangeOrderEBF/BundleChangeOrderEBF" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:ns2="http://xmlns.ttnet.com.tr/Service/FaultHandlerABCS/FaultHandlerABCS" xmlns:ns3="http://xmlns.ttnet.com.tr/Service/ProductFCBSProvABCS/ProductFCBSProvABCS" xmlns:ns4="http://xmlns.ttnet.com.tr/Services/ProcessGeneralProductCharacteristicSMPProvABCS/ProcessGeneralProductCharacteristicSMPProvABCS" xmlns:ns5="http://xmlns.ttnet.com.tr/Services/AknPassedEBF/AknPassedEBF" xmlns:ns6="http://xmlns.ttnet.com.tr/Services/ChangeAdslNoBundleChangeOrderNETDISKProvABCS/ChangeAdslNoBundleChangeOrderNETDISKProvABCS" xmlns:ns7="http://xmlns.ttnet.com.tr/Services/DiscountPenaltyBillEBF/DiscountPenaltyBillEBF" xmlns:ns8="http://xmlns.ttnet.com.tr/Services/AdjustBillAsyncFCBSProvABCS/AdjustBillAsyncFCBSProvABCS" xmlns:ns9="http://xmlns.ttnet.com.tr/Service/ShipmentOrderToMTSProvEBF/ShipmentOrderToMTSProvEBF" xmlns:ns10="http://xmlns.ttnet.com.tr/Services/ShipmentFaultOrderToMTSProvEBF/ShipmentFaultOrderToMTSProvEBF" xmlns:ns11="http://xmlns.ttnet.com.tr/Service/BundleChangeToResourceEBF/BundleChangeToResourceEBF" xmlns:ns12="http://xmlns.oracle.com/Service/BundleChangeToProvisionEBF/BundleChangeToProvisionEBF" xmlns:ns13="http://xmlns.ttnet.com.tr/Service/BundleChangeToInstallationEBF/BundleChangeToInstallationEBF" xmlns:ns14="http://xmlns.ttnet.com.tr/Service/BundleChangeToVasEBF/BundleChangeToVasEBF" xmlns:ns15="http://xmlns.ttnet.com.tr/Services/BundleChangeToCaptivePortalEBF/BundleChangeToCaptivePortalEBF" xmlns:ns16="http://xmlns.ttnet.com.tr/Service/BundleChangeBillingFCBSProvEBF/BundleChangeBillingFCBSProvEBF" xmlns:ns17="http://xmlns.ttnet.com.tr/Service/UpdateBundleChangeProductMTSProvABCS/UpdateBundleChangeProductMTSProvABCS" xmlns:ns18="http://xmlns.ttnet.com.tr/Service/ProcessClaimsBPMProvABCS/ProcessClaimsBPMProvABCS" xmlns:ns19="http://xmlns.ttnet.com.tr/Service/NotificationEBF/NotificationEBF" xmlns:ns20="http://xmlns.ttnet.com.tr/Services/ProcessOrderToDASESTSProvEBF/ProcessOrderToDASESTSProvEBF" xmlns:ns21="http://xmlns.ttnet.com.tr/Service/SendSMSSMMProvEBF/SendSMSSMMProvEBF" xmlns:ns22="http://xmlns.ttnet.com.tr/Services/UpdateParentProductAsynchFCBSProvABCS/UpdateParentProductAsynchFCBSProvABCS" xmlns:ns23="http://xmlns.ttnet.com.tr/Services/InquireBridgeStatusMTSProvABCS/InquireBridgeStatusMTSProvABCS" xmlns:ns24="http://xmlns.ttnet.com.tr/Service/ProcessBillingFCBSProvEBF/ProcessBillingFCBSProvEBF" xmlns:ns25="http://xmlns.ttnet.com.tr/Services/ManageProductTTOProvEBF/ManageProductTTOProvEBF" xmlns:ns26="http://xmlns.ttnet.com.tr/Services/DeactivatePostpaidCampaignAVEAProvABCS/DeactivatePostpaidCampaignAVEAProvABCS" xmlns:ns27="http://xmlns.ttnet.com.tr/Service/CreateEntitlementsCAProvABCS/CreateEntitlementsCAProvABCS" xmlns:ns28="http://xmlns.ttnet.com.tr/Service/DeleteAllEntitlementsCAProvABCS/DeleteAllEntitlementsCAProvABCS" xmlns:ns29="http://xmlns.ttnet.com.tr/Services/InquireProductMTSProvABCS/InquireProductMTSProvABCS" xmlns:ns30="http://xmlns.ttnet.com.tr/Services/CancelFeatureTTOProvABCS/CancelFeatureTTOProvABCS" xmlns:ns31="http://xmlns.ttnet.com.tr/Services/InsertCrmMessageSMMProvEBF/InsertCrmMessageSMMProvEBF" xmlns:ns32="http://xmlns.ttnet.com.tr/Services/CancelCampaignAVEAProvABCS/CancelCampaignAVEAProvABCS" xmlns:ns33="http://xmlns.ttnet.com.tr/Services/ConvertAdslAVEAProvABCS/ConvertAdslAVEAProvABCS" xmlns:ns34="http://xmlns.ttnet.com.tr/Services/SaveTurkTelekomOrderDIGIProvABCS/SaveTurkTelekomOrderDIGIProvABCS" xmlns:ns35="http://xmlns.ttnet.com.tr/Services/CreateInvoiceTTOProvABCS/CreateInvoiceTTOProvABCS" xmlns:ns36="http://xmlns.ttnet.com.tr/Services/InquireAndPayInvoiceTTOProvABCS/InquireAndPayInvoiceTTOProvABCS" xmlns:ns37="http://xmlns.ttnet.com.tr/Services/AdjustInvoiceTTOProvABCS/AdjustInvoiceTTOProvABCS" xmlns:ns38="http://xmlns.ttnet.com.tr/Services/ProcessWithTokenPGWProvABCS/ProcessWithTokenPGWProvABCS" xmlns:ns39="http://xmlns.ttnet.com.tr/Services/CancelOrNotifyPaymentDTHEBF/CancelOrNotifyPaymentDTHEBF" xmlns:ns40="http://xmlns.ttnet.com.tr/Services/InsertCrmMessageAsyncSMMProvEBF/InsertCrmMessageAsyncSMMProvEBF" xmlns:ns41="http://xmlns.ttnet.com.tr/Services/CreateUserForUniquePasswordAsyncByGsmNoSSOProvEBF/CreateUserForUniquePasswordAsyncByGsmNoSSOProvEBF" xmlns:ns42="http://xmlns.ttnet.com.tr/Service/BundleChangeOrdeToSSOProvABCS/BundleChangeOrdeToSSOProvABCS" xmlns:ns43="http://xmlns.ttnet.com.tr/Services/ProcessNumberTransferTTNETSISProvEBF/ProcessNumberTransferTTNETSISProvEBF" xmlns:ns44="http://xmlns.ttnet.com.tr/Services/CampaignOperationsEBF/CampaignOperationsEBF" xmlns:ns45="http://xmlns.ttnet.com.tr/Services/ManageCustomerAccountATSviaTTOProvABCS/ManageCustomerAccountATSviaTTOProvABCS" xmlns:ns46="http://xmlns.ttnet.com.tr/Services/ManageProductATSviaTTOProvEBF/ManageProductATSviaTTOProvEBF" xmlns:ns47="http://xmlns.ttnet.com.tr/services/InquireAccountTTOProvABCS/InquireAccountTTOProvABCS" xmlns:ns48="http://xmlns.ttnet.com.tr/Services/PrepaidCampaignOperationsEBF/PrepaidCampaignOperationsEBF" xmlns:ns49="http://xmlns.ttnet.com.tr/Services/ExtPackageUpdateSKAPProvABCS/ExtPackageUpdateSKAPProvABCS" xmlns:ns50="http://xmlns.ttnet.com.tr/Services/ProcessExternalCustomerOperationsEBF/ProcessExternalCustomerOperationsEBF" xmlns:ns51="http://xmlns.ttnet.com.tr/Services/ExtPackageAddSKAPProvABCS/ExtPackageAddSKAPProvABCS" xmlns:ns52="http://xmlns.ttnet.com.tr/Services/ExtPackageDeleteSKAPProvABCS/ExtPackageDeleteSKAPProvABCS" xmlns:ns53="http://xmlns.ttnet.com.tr/Services/NotifyCampaignOrderStatusCBOXEBF/NotifyCampaignOrderStatusCBOXEBF" xmlns:ns54="http://xmlns.ttnet.com.tr/Services/TransactionCallbackCHATBOTProvABCS/TransactionCallbackCHATBOTProvABCS" xmlns:ns55="http://xmlns.ttnet.com.tr/Services/ChangeXdslNoDIGITALDEPOProvABCS/ChangeXdslNoDIGITALDEPOProvABCS" xmlns:ns56="http://xmlns.ttnet.com.tr/Services/ChangePackageDIGITALDEPOProvABCS/ChangePackageDIGITALDEPOProvABCS" xmlns:ns57="http://xmlns.ttnet.com.tr/Services/UpdateProductStatusMTSProvABCS/UpdateProductStatusMTSProvABCS" xmlns:ns58="http://xmlns.ttnet.com.tr/Services/ManageCustomerAccountTTOProvABCS/ManageCustomerAccountTTOProvABCS" xmlns:ns59="http://xmlns.ttnet.com.tr/Services/UpsellInsertPAYFLEXProvABCS/UpsellInsertPAYFLEXProvABCS" xmlns:ns60="http://xmlns.ttnet.com.tr/Services/ChangePacketNETDISKProvABCS/ChangePacketNETDISKProvABCS" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:ess="http://xmlns.oracle.com/scheduler" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns63="http://xmlns.ttnet.com.tr/CDM/EBM/Order" xmlns:ns61="http://xmlns.ttnet.com.tr/CDM/EBM/Billing" xmlns:ns62="http://xmlns.ttnet.com.tr/CDM/EBO/Common" xmlns:ns77="http://xmlns.ttnet.com.tr/CDM/EBO/Campaign" xmlns:ns67="http://xmlns.ttnet.com.tr/CDM/EBO/Individual" xmlns:ns71="http://xmlns.ttnet.com.tr/CDM/EBO/Util" xmlns:ns70="http://xmlns.ttnet.com.tr/CDM/EBO/Community" xmlns:ns82="http://xmlns.ttnet.com.tr/CDM/EBO/ResourceSpecification" xmlns:ns69="http://xmlns.ttnet.com.tr/CDM/EBO/Contact" xmlns:ns74="http://xmlns.ttnet.com.tr/CDM/EBO/Service" xmlns:ns81="http://xmlns.ttnet.com.tr/CDM/EBO/User" xmlns:ns72="http://xmlns.ttnet.com.tr/CDM/EBO/Segment" xmlns:ns75="http://xmlns.ttnet.com.tr/CDM/EBO/Billing" xmlns:ns66="http://xmlns.ttnet.com.tr/CDM/EBO/Corporate" xmlns:ns79="http://xmlns.ttnet.com.tr/CDM/EBO/Document" xmlns:ns83="http://xmlns.ttnet.com.tr/CDM/EBO/CustomerAccount" xmlns:ns76="http://xmlns.ttnet.com.tr/CDM/EBO/Payment" xmlns:ns78="http://xmlns.ttnet.com.tr/CDM/EBO/ProductOffer" xmlns:ns65="http://xmlns.ttnet.com.tr/CDM/EBO/Customer" xmlns:ns80="http://xmlns.ttnet.com.tr/CDM/EBO/WorkOrganization" xmlns:ns73="http://xmlns.ttnet.com.tr/CDM/EBO/Product" xmlns:ns68="http://xmlns.ttnet.com.tr/CDM/EBO/Address" xmlns:ns64="http://xmlns.ttnet.com.tr/CDM/EBO/Order" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns84="http://xmlns.ttnet.com.tr/CDM/EBM/Product" xmlns:ns85="http://xmlns.ttnet.com.tr/Services/AdslNoChangeEventEBF/AdslNoChangeEventEBF" xmlns:ns86="http://xmlns.ttnet.com.tr/CDM/EBM/User" xmlns:ns87="http://xmlns.ttnet.com.tr/CDM/EBM/Service" xmlns:ns89="http://xmlns.ttnet.com.tr/CDM/EBO/Invoice" xmlns:ns88="http://xmlns.ttnet.com.tr/CDM/EBM/Invoice" xmlns:ns90="http://xmlns.ttnet.com.tr/CDM/EBM/Util" xmlns:ns91="http://xmlns.ttnet.com.tr/Digi" xmlns:ns92="http://xmlns.ttnet.com.tr/Service/DocumentSubscriptionEBF/DocumentSubscriptionEBF" xmlns:ns93="http://xmlns.ttnet.com.tr/Services/ManageAccountEBF/ManageAccountEBF" xmlns:ns94="http://xmlns.ttnet.com/services/ManageCustomerOrderATTIPProvABCS/ManageCustomerOrderATTIPProvABCS" xmlns:ns96="http://xmlns.ttnet.com/services/SubscriptionDeactivationApiDOCOMOProvABCS/SubscriptionDeactivationApiDOCOMOProvABCS" xmlns:ns95="http://xmlns.ttnet.com.tr/Services/MetroEthernetCampaignOLOProvEBF/MetroEthernetCampaignOLOProvEBF" xmlns:ns97="http://xmlns.ttnet.com.tr/Services/UpdateSimplifiedProductCharMTSProvABCS/UpdateSimplifiedProductCharMTSProvABCS" xmlns:ns98="http://xmlns.ttnet.com.tr/Services/CWOperationsEBF/CWOperationsEBF" xmlns:ns99="http://xmlns.ttnet.com.tr/Service/OverwriteEntitlementsCAProvABCS/OverwriteEntitlementsCAProvABCS">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://xmlns.ttnet.com.tr/CDM/EBM/Order" location="oramds:/apps/datamodel/EnterpriseObjectLibrary/EBO/Order/OrderEBM.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
  <import namespace="http://xmlns.ttnet.com.tr/Service/BundleChangeOrderEBF/BundleChangeOrderEBF" location="oramds:/apps/datamodel/EnterpriseBusinessFlowLibrary/BundleChangeOrderEBF.wsdl" importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="BundleChangeOrderEBF" partnerLinkType="ns1:BundleChangeOrderEBF" myRole="BundleChangeOrderEBFProvider"/>
    <partnerLink name="FaultHandlerABCS" partnerLinkType="ns2:FaultHandlerABCS" partnerRole="FaultHandlerABCSProvider"/>
    <partnerLink name="ProductFCBSProvABCS" partnerLinkType="ns3:ProductFCBSProvABCS" partnerRole="ProductFCBSProvABCSProvider"/>
    <partnerLink name="ProcessGeneralProductCharacteristicSMPProvABCS" partnerLinkType="ns4:ProcessGeneralProductCharacteristicSMPProvABCS" partnerRole="ProcessGeneralProductCharacteristicSMPProvABCSProvider"/>
    <partnerLink name="AknPassedEBF" partnerLinkType="ns5:AknPassedEBF" partnerRole="AknPassedEBFProvider" myRole="AknPassedEBFRequester"/>
    <partnerLink name="ChangeAdslNoBundleChangeOrderNETDISKProvABCS" partnerLinkType="ns6:ChangeAdslNoBundleChangeOrderNETDISKProvABCS" partnerRole="ChangeAdslNoBundleChangeOrderNETDISKProvABCSProvider"/>
    <partnerLink name="DiscountPenaltyBillEBF" partnerLinkType="ns7:DiscountPenaltyBillEBF" partnerRole="DiscountPenaltyBillEBFProvider" myRole="DiscountPenaltyBillEBFRequester"/>
    <partnerLink name="AdjustBillAsyncFCBSProvABCS" partnerLinkType="ns8:AdjustBillAsyncFCBSProvABCS" partnerRole="AdjustBillAsyncFCBSProvABCSProvider"/>
    <partnerLink name="ShipmentOrderToMTSProvEBF" partnerLinkType="ns9:ShipmentOrderToMTSProvEBF" partnerRole="ShipmentOrderToMTSProvEBFProvider" myRole="ShipmentOrderToMTSProvEBFRequester"/>
    <partnerLink name="ShipmentFaultOrderToMTSProvEBF" partnerLinkType="ns10:ShipmentFaultOrderToMTSProvEBF" partnerRole="ShipmentFaultOrderToMTSProvEBFProvider" myRole="ShipmentFaultOrderToMTSProvEBFRequester"/>
    <partnerLink name="BundleChangeToResourceEBF" partnerLinkType="ns11:BundleChangeToResourceEBF" partnerRole="BundleChangeToResourceEBFProvider" myRole="BundleChangeToResourceEBFRequester"/>
    <partnerLink name="BundleChangeToProvisionEBF" partnerLinkType="ns12:BundleChangeToProvisionEBF" partnerRole="BundleChangeToProvisionEBFProvider" myRole="BundleChangeToProvisionEBFRequester"/>
    <partnerLink name="BundleChangeToInstallationEBF" partnerLinkType="ns13:BundleChangeToInstallationEBF" partnerRole="BundleChangeToInstallationEBFProvider" myRole="BundleChangeToInstallationEBFRequester"/>
    <partnerLink name="BundleChangeToVasEBF" partnerLinkType="ns14:BundleChangeToVasEBF" partnerRole="BundleChangeToVasEBFProvider" myRole="BundleChangeToVasEBFRequester"/>
    <partnerLink name="BundleChangeToCaptivePortalEBF" partnerLinkType="ns15:BundleChangeToCaptivePortalEBF" partnerRole="BundleChangeToCaptivePortalEBFProvider"/>
    <partnerLink name="BundleChangeBillingFCBSProvEBF" partnerLinkType="ns16:BundleChangeBillingFCBSProvEBF" partnerRole="BundleChangeBillingFCBSProvEBFProvider" myRole="BundleChangeBillingFCBSProvEBFRequester"/>
    <partnerLink name="UpdateBundleChangeProductMTSProvABCS" partnerLinkType="ns17:UpdateBundleChangeProductMTSProvABCS" partnerRole="UpdateBundleChangeProductMTSProvABCSProvider"/>
    <partnerLink name="ProcessClaimsBPMProvABCS" partnerLinkType="ns18:ProcessClaimsBPMProvABCS" partnerRole="ProcessClaimsBPMProvABCSProvider"/>
    <partnerLink name="NotificationEBF" partnerLinkType="ns19:NotificationEBF" partnerRole="NotificationEBFProvider"/>
    <partnerLink name="ProcessOrderToDASESTSProvEBF" partnerLinkType="ns20:ProcessOrderToDASESTSProvEBF" partnerRole="ProcessOrderToDASESTSProvEBFProvider"/>
    <partnerLink name="SendSMSSMMProvEBF" partnerLinkType="ns21:SendSMSSMMProvEBF" partnerRole="SmsSMMProvABCSProvider"/>
    <partnerLink name="UpdateParentProductAsynchFCBSProvABCS" partnerLinkType="ns22:UpdateParentProductAsynchFCBSProvABCS" partnerRole="UpdateParentProductAsynchFCBSProvABCSProvider"/>
    <partnerLink name="InquireBridgeStatusMTSProvABCS" partnerLinkType="ns23:InquireBridgeStatusMTSProvABCS" partnerRole="InquireBridgeStatusMTSProvABCSProvider"/>
    <partnerLink name="ProcessBillingFCBSProvEBF" partnerLinkType="ns24:ProcessBillingFCBSProvEBF" partnerRole="ProcessBillingFCBSProvEBFProvider" myRole="ProcessBillingFCBSProvEBFRequester"/>
    <partnerLink name="ManageProductTTOProvEBF" partnerLinkType="ns25:ManageProductTTOProvEBF" partnerRole="ManageProductTTOProvEBFProvider"/>
    <partnerLink name="DeactivatePostpaidCampaignAVEAProvABCS" partnerLinkType="ns26:DeactivatePostpaidCampaignAVEAProvABCS" partnerRole="DeactivatePostpaidCampaignAVEAProvABCSProvider"/>
    <partnerLink name="CreateEntitlementsCAProvABCS" partnerLinkType="ns27:CreateEntitlementsCAProvABCS" partnerRole="CreateEntitlementsCAProvABCSProvider"/>
    <partnerLink name="DeleteAllEntitlementsCAProvABCS" partnerLinkType="ns28:DeleteAllEntitlementsCAProvABCS" partnerRole="DeleteAllEntitlementsCAProvABCSProvider"/>
    <partnerLink name="InquireProductMTSProvABCS" partnerLinkType="ns29:InquireProductMTSProvABCS" partnerRole="InquireProductMTSProvABCSProvider"/>
    <partnerLink name="CancelFeatureTTOProvABCS" partnerLinkType="ns30:CancelFeatureTTOProvABCS" partnerRole="CancelFeatureTTOProvABCSProvider"/>
    <partnerLink name="InsertCrmMessageSMMProvEBF" partnerLinkType="ns31:InsertCrmMessageSMMProvEBF" partnerRole="InsertCrmMessageSMMProvEBFProvider"/>
    <partnerLink name="CancelCampaignAVEAProvABCS" partnerLinkType="ns32:CancelCampaignAVEAProvABCS" partnerRole="CancelCampaignAVEAProvABCSProvider"/>
    <partnerLink name="ConvertAdslAVEAProvABCS" partnerLinkType="ns33:ConvertAdslAVEAProvABCS" partnerRole="ConvertAdslAVEAProvABCSProvider"/>
    <partnerLink name="SaveTurkTelekomOrderDIGIProvABCS" partnerLinkType="ns34:SaveTurkTelekomOrderDIGIProvABCS" partnerRole="SaveTurkTelekomOrderDIGIProvABCSProvider"/>
    <partnerLink name="CreateInvoiceTTOProvABCS" partnerLinkType="ns35:CreateInvoiceTTOProvABCS" partnerRole="CreateInvoiceTTOProvABCSProvider"/>
    <partnerLink name="InquireAndPayInvoiceTTOProvABCS" partnerLinkType="ns36:InquireAndPayInvoiceTTOProvABCS" partnerRole="InquireAndPayInvoiceTTOProvABCSProvider"/>
    <partnerLink name="AdjustInvoiceTTOProvABCS" partnerLinkType="ns37:AdjustInvoiceTTOProvABCS" partnerRole="AdjustInvoiceTTOProvABCSProvider"/>
    <partnerLink name="ProcessWithTokenPGWProvABCS" partnerLinkType="ns38:ProcessWithTokenPGWProvABCS" partnerRole="ProcessWithTokenPGWProvABCSProvider"/>
    <partnerLink name="CancelOrNotifyPaymentDTHEBF" partnerLinkType="ns39:CancelOrNotifyPaymentDTHEBF" partnerRole="CancelOrNotifyPaymentDTHEBFProvider" myRole="CancelOrNotifyPaymentDTHEBFRequester"/>
    <partnerLink name="InsertCrmMessageAsyncSMMProvEBF" partnerLinkType="ns40:InsertCrmMessageAsyncSMMProvEBF" partnerRole="InsertCrmMessageAsyncSMMProvEBFProvider"/>
    <partnerLink name="CreateUserForUniquePasswordAsyncByGsmNoSSOProvEBF" partnerLinkType="ns41:CreateUserForUniquePasswordAsyncByGsmNoSSOProvEBF" partnerRole="CreateUserForUniquePasswordAsyncByGsmNoSSOProvEBFProvider" myRole="CreateUserForUniquePasswordAsyncByGsmNoSSOProvEBFRequester"/>
    <partnerLink name="BundleChangeOrdeToSSOProvABCS" partnerLinkType="ns42:BundleChangeOrdeToSSOProvABCS" partnerRole="BundleChangeOrdeToSSOProvABCSProvider"/>
    <partnerLink name="ProcessNumberTransferTTNETSISProvEBF" partnerLinkType="ns43:ProcessNumberTransferTTNETSISProvEBF" partnerRole="ProcessNumberTransferTTNETSISProvEBFProvider" myRole="ProcessNumberTransferTTNETSISProvEBFRequester"/>
    <partnerLink name="CampaignOperationsEBF" partnerLinkType="ns44:CampaignOperationsEBF" partnerRole="CampaignOperationsEBFProvider" myRole="CampaignOperationsEBFRequester"/>
    <partnerLink name="ManageCustomerAccountATSviaTTOProvABCS" partnerLinkType="ns45:ManageCustomerAccountATSviaTTOProvABCS" partnerRole="ManageCustomerAccountATSviaTTOProvABCSProvider"/>
    <partnerLink name="ManageProductATSviaTTOProvEBF" partnerLinkType="ns46:ManageProductATSviaTTOProvEBF" partnerRole="ManageProductATSviaTTOProvEBFProvider"/>
    <partnerLink name="InquireAccountTTOProvABCS" partnerLinkType="ns47:InquireAccountTTOProvABCS" partnerRole="InquireAccountTTOProvABCSProvider"/>
    <partnerLink name="PrepaidCampaignOperationsEBF" partnerLinkType="ns48:PrepaidCampaignOperationsEBF" partnerRole="PrepaidCampaignOperationsEBFProvider" myRole="PrepaidCampaignOperationsEBFRequester"/>
    <partnerLink name="ExtPackageUpdateSKAPProvABCS" partnerLinkType="ns49:ExtPackageUpdateSKAPProvABCS" partnerRole="ExtPackageUpdateSKAPProvABCSProvider"/>
    <partnerLink name="ProcessExternalCustomerOperationsEBF" partnerLinkType="ns50:ProcessExternalCustomerOperationsEBF" partnerRole="ProcessExternalCustomerOperationsEBFProvider"/>
    <partnerLink name="ExtPackageAddSKAPProvABCS" partnerLinkType="ns51:ExtPackageAddSKAPProvABCS" partnerRole="ExtPackageAddSKAPProvABCSProvider"/>
    <partnerLink name="ExtPackageDeleteSKAPProvABCS" partnerLinkType="ns52:ExtPackageDeleteSKAPProvABCS" partnerRole="ExtPackageDeleteSKAPProvABCSProvider"/>
    <partnerLink name="NotifyCampaignOrderStatusCBOXEBF" partnerLinkType="ns53:NotifyCampaignOrderStatusCBOXEBF" partnerRole="NotifyCampaignOrderStatusCBOXEBFProvider" myRole="NotifyCampaignOrderStatusCBOXEBFRequester"/>
    <partnerLink name="TransactionCallbackCHATBOTProvABCS" partnerLinkType="ns54:TransactionCallbackCHATBOTProvABCS" partnerRole="TransactionCallbackCHATBOTProvABCSProvider"/>
    <partnerLink name="ChangeXdslNoDIGITALDEPOProvABCS" partnerLinkType="ns55:ChangeXdslNoDIGITALDEPOProvABCS" partnerRole="ChangeXdslNoDIGITALDEPOProvABCSProvider"/>
    <partnerLink name="ChangePackageDIGITALDEPOProvABCS" partnerLinkType="ns56:ChangePackageDIGITALDEPOProvABCS" partnerRole="ChangePackageDIGITALDEPOProvABCSProvider"/>
    <partnerLink name="UpdateProductStatusMTSProvABCS" partnerLinkType="ns57:UpdateProductStatusMTSProvABCS" partnerRole="UpdateProductStatusMTSProvABCSProvider"/>
    <partnerLink name="ManageCustomerAccountTTOProvABCS" partnerLinkType="ns58:ManageCustomerAccountTTOProvABCS" partnerRole="ManageCustomerAccountTTOProvABCSProvider"/>
    <partnerLink name="UpsellInsertPAYFLEXProvABCS" partnerLinkType="ns59:UpsellInsertPAYFLEXProvABCS" partnerRole="UpsellInsertPAYFLEXProvABCSProvider"/>
    <partnerLink name="ChangePacketNETDISKProvABCS" partnerLinkType="ns60:ChangePacketNETDISKProvABCS" partnerRole="ChangePacketNETDISKProvABCSProvider"/>
    <partnerLink name="AdslNoChangeEventEBF" partnerLinkType="ns85:AdslNoChangeEventEBF" partnerRole="AdslNoChangeEventEBFProvider"/>
    <partnerLink name="DocumentSubscriptionEBF" partnerLinkType="ns92:DocumentSubscriptionEBF" partnerRole="DocumentSubscriptionEBFProvider"/>
    <partnerLink name="ManageAccountEBF" partnerLinkType="ns93:ManageAccountEBF" partnerRole="ManageAccountEBFProvider" myRole="ManageAccountEBFRequester"/>
    <partnerLink name="ManageCustomerOrderATTIPProvABCS" partnerLinkType="ns94:ManageCustomerOrderATTIPProvABCS" partnerRole="ManageCustomerOrderATTIPProvABCSProvider"/>
    <partnerLink name="SubscriptionDeactivationApiDOCOMOProvABCS" partnerLinkType="ns96:SubscriptionDeactivationApiDOCOMOProvABCS" partnerRole="SubscriptionDeactivationApiDOCOMOProvABCSProvider"/>
    <partnerLink name="UpdateSimplifiedProductCharMTSProvABCS" partnerLinkType="ns97:UpdateSimplifiedProductCharMTSProvABCS" partnerRole="UpdateSimplifiedProductCharMTSProvABCSProvider"/>
    <partnerLink name="CWOperationsEBF" partnerLinkType="ns98:CWOperationsEBF" partnerRole="CWOperationsEBFProvider" myRole="CWOperationsEBFRequester"/>
    <partnerLink name="OverwriteEntitlementsCAProvABCS" partnerLinkType="ns99:OverwriteEntitlementsCAProvABCS" partnerRole="OverwriteEntitlementsCAProvABCSProvider"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:BundleChangeOrderEBFRequestMessage"/>
    <variable name="isContinue" type="xsd:boolean"/>
    <variable name="prodId" type="xsd:string"/>
    <variable name="provisionServiceCode" type="xsd:string"/>
    <variable name="actionDateVar" type="xsd:string"/>
    <variable name="cr2625variable" type="xsd:int"/>
    <variable name="password" type="xsd:string"/>
    <variable name="TempTargetEndpointLocation" type="xsd:string"/>
    <variable name="TargetEndpointLocation" type="xsd:string"/>
    <variable name="MainScope" type="xsd:boolean"/>
    <variable name="TivibuTicariTimeout" type="xsd:boolean"/>
    <variable name="InquireAccountTtoInputVariable" messageType="ns47:InquireAccountTTOProvABCSRequestMessage"/>
    <variable name="InquireAccountTtoOutputVariable" messageType="ns47:InquireAccountTTOProvABCSResponseMessage"/>
    <variable name="HandleFaultInputVariable" messageType="ns2:FaultHandlerABCSRequestMessage"/>
    <variable name="HandleFaultOutputVariable" messageType="ns2:FaultHandlerABCSResponseMessage"/>
    <variable name="InvokeManageCustomerAccountAsyncInputVariable" messageType="ns58:ManageCustomerAccountTTOProvABCSRequestMessage"/>
    <variable name="InvokeManageCustomerAccountAsyncOutputVariable" messageType="ns58:ManageCustomerAccountTTOProvABCSResponseMessage"/>
    <variable name="InvokeManageCustomerAccountInputVariable" messageType="ns45:ManageCustomerAccountATSviaTTOProvABCSRequestMessage"/>
    <variable name="InvokeManageCustomerAccountOutputVariable" messageType="ns45:ManageCustomerAccountATSviaTTOProvABCSResponseMessage"/>
    <variable name="InvokeCreateInvoiceInputVariable" messageType="ns35:CreateInvoiceTTOProvABCSRequestMessage"/>
    <variable name="InvokeCreateInvoiceOutputVariable" messageType="ns35:CreateInvoiceTTOProvABCSResponseMessage"/>
    <variable name="InvokeInquireAndPayInvoiceInputVariable" messageType="ns36:InquireAndPayInvoiceTTOProvABCSRequestMessage"/>
    <variable name="InvokeInquireAndPayInvoiceOutputVariable" messageType="ns36:InquireAndPayInvoiceTTOProvABCSResponseMessage"/>
    <variable name="InvokeInsertCrmMessageAsyncInputVariable" messageType="ns40:InsertCrmMessageAsyncSMMProvEBFRequestMessage"/>
    <variable name="InvokeCancelOrNotifyPaymentDTHInputVariable" messageType="ns39:CancelOrNotifyPaymentDTHEBFRequestMessage"/>
    <variable name="ReceiveCancelOrNotifyPaymentDTHInputVariable" messageType="ns39:CancelOrNotifyPaymentDTHEBFResponseMessage"/>
    <variable name="InvokeUpdateProductStatusFCBSInputVariable" messageType="ns3:UpdateProductStatusRequestMessage"/>
    <variable name="InvokeUpdateProductStatusFCBSOutputVariable" messageType="ns3:UpdateProductStatusResponseMessage"/>
    <variable name="InvokeUpdateProductStatusMTSInputVariable" messageType="ns57:UpdateProductStatusMTSProvABCSRequestMessage"/>
    <variable name="InvokeUpdateProductStatusMTSOutputVariable" messageType="ns57:UpdateProductStatusMTSProvABCSResponseMessage"/>
    <variable name="InvokeInquireBridgeStatusInputVariable" messageType="ns23:InquireBridgeStatusMTSProvABCSRequestMessage"/>
    <variable name="InvokeInquireBridgeStatusOutputVariable" messageType="ns23:InquireBridgeStatusMTSProvABCSResponseMessage"/>
    <variable name="InvokeShipmentOrderEBS_Shipment_InputVariable" messageType="ns9:BundleChangeShipmentRequestMessage"/>
    <variable name="ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable" messageType="ns9:BundleChangeShipmentCallbackMessage"/>
    <variable name="InvokeFulfillmentEBS_Resource_InputVariable" messageType="ns11:BundleChangeToResourceEBFRequestMessage"/>
    <variable name="ReceiveFulfillmentEBS_ResourceCallback_InputVariable" messageType="ns11:BundleChangeToResourceEBFResponseMessage"/>
    <variable name="InvokeFulfillmentEBS_Provision_InputVariable" messageType="ns12:BundleChangeToProvisionEBFRequestMessage"/>
    <variable name="ReceiveFulfillmentEBS_ProvisionCallback_InputVariable" messageType="ns12:BundleChangeToProvisionEBFResponseMessage"/>
    <variable name="InvokeManageProductInputVariable" messageType="ns25:ManageProductTTOProvEBFRequestMessage"/>
    <variable name="InvokeManageProductATSviaTTOInputVariable" messageType="ns46:ManageProductATSviaTTOProvEBFRequestMessage"/>
    <variable name="InvokeDasetsInputVariable" messageType="ns20:ProcessOrderToDASESTSProvEBFRequestMessage"/>
    <variable name="InvokeCaptivePortalInputVariable" messageType="ns15:BundleChangeToCaptivePortalEBFRequestMessage"/>
    <variable name="InvokeFulfillmentEBS_Installation_InputVariable" messageType="ns13:BundleChangeToInstallationEBFRequestMessage"/>
    <variable name="ReceiveFulfillmentEBS_InstallationCallback_InputVariable" messageType="ns13:BundleChangeToInstallationEBFResponseMessage"/>
    <variable name="InvokeFulfillmentEBS_VAS_InputVariable" messageType="ns14:BundleChangeToVasEBFRequestMessage"/>
    <variable name="ReceiveFulfillmentEBS_VASCallback_InputVariable" messageType="ns14:BundleChangeToVasEBFResponseMessage"/>
    <variable name="InvokeAdslNoChangeEventInputVariable" messageType="ns85:AdslNoChangeEventEBFRequestMessage"/>
    <variable name="InvokeAknPassed_process_InputVariable" messageType="ns5:AknPassedEBFRequestMessage"/>
    <variable name="InvokeCreateUserForUniquePasswordByGsmInputVariable" messageType="ns41:CreateUserForUniquePasswordAsyncByGsmNoSSOProvEBFRequestMessage"/>
    <variable name="InvokeNotificationEBSProcessChangeOrderInputVariable" messageType="ns19:NotificationEBFChangeOrderRequestMessage"/>
    <variable name="InvokeChangeAdslNoBundleChangeOrderInputVariable" messageType="ns6:ChangeAdslNoBundleChangeOrderNETDISKProvABCSRequestMessage"/>
    <variable name="InvokeChangeAdslNoBundleChangeOrderOutputVariable" messageType="ns6:ChangeAdslNoBundleChangeOrderNETDISKProvABCSResponseMessage"/>
    <variable name="InvokeChangePacket_process_InputVariable" messageType="ns6:ChangeAdslNoBundleChangeOrderNETDISKProvABCSRequestMessage"/>
    <variable name="InvokeChangePacket_process_OutputVariable" messageType="ns6:ChangeAdslNoBundleChangeOrderNETDISKProvABCSResponseMessage"/>
    <variable name="InvokeChangePackageInputVariable" messageType="ns56:ChangePackageDIGITALDEPOProvABCSRequestMessage"/>
    <variable name="InvokeChangePackageOutputVariable" messageType="ns56:ChangePackageDIGITALDEPOProvABCSResponseMessage"/>
    <variable name="InvokeChangeXdslNoInputVariable" messageType="ns55:ChangeXdslNoDIGITALDEPOProvABCSRequestMessage"/>
    <variable name="InvokeChangeXdslNoOutputVariable" messageType="ns55:ChangeXdslNoDIGITALDEPOProvABCSResponseMessage"/>
    <variable name="InvokeAdjustInvoiceInputVariable" messageType="ns37:AdjustInvoiceTTOProvABCSRequestMessage"/>
    <variable name="InvokeAdjustInvoiceOutputVariable" messageType="ns37:AdjustInvoiceTTOProvABCSResponseMessage"/>
    <variable name="InvokeInqProductInputVariable" messageType="ns29:InquireProductMTSProvABCSRequestMessage"/>
    <variable name="InvokeInqProductOutputVariable" messageType="ns29:InquireProductMTSProvABCSResponseMessage"/>
    <variable name="InvokeDeleteAllEntInputVariable" messageType="ns28:DeleteAllEntitlementsCAProvABCSRequestMessage"/>
    <variable name="InvokeDeleteAllEntOutputVariable" messageType="ns28:DeleteAllEntitlementsCAProvABCSResponseMessage"/>
    <variable name="InvokeCreateEntInputVariable" messageType="ns27:CreateEntitlementsCAProvABCSRequestMessage"/>
    <variable name="InvokeCreateEntOutputVariable" messageType="ns27:CreateEntitlementsCAProvABCSResponseMessage"/>
    <variable name="InvokeSaleCancelWithTokenInputVariable" messageType="ns38:ProcessWithTokenPGWProvABCSRequestMessage"/>
    <variable name="InvokeSaleCancelWithTokenOutputVariable" messageType="ns38:ProcessWithTokenPGWProvABCSResponseMessage"/>
    <variable name="ProcessNumberTransferInputVariable" messageType="ns43:ProcessNumberTransferTTNETSISProvEBFRequestMessage"/>
    <variable name="ReceiveProcessNumberTransferVariable" messageType="ns43:ProcessNumberTransferTTNETSISProvEBFResponseMessage"/>
    <variable name="InvokeExtPackageDeleteInputVariable" messageType="ns52:ExtPackageDeleteSKAPProvABCSRequestMessage"/>
    <variable name="InvokeExtPackageDeleteOutputVariable" messageType="ns52:ExtPackageDeleteSKAPProvABCSResponseMessage"/>
    <variable name="InvokeExtPackageAddInputVariable" messageType="ns51:ExtPackageAddSKAPProvABCSRequestMessage"/>
    <variable name="InvokeExtPackageAddOutputVariable" messageType="ns51:ExtPackageAddSKAPProvABCSResponseMessage"/>
    <variable name="InvokeOrderBillingInputVariable" messageType="ns24:ProcessBillingFCBSProvEBFRequestMessage"/>
    <variable name="ReceiveSalesORderInputVariable" messageType="ns24:ProcessBillingFCBSProvEBFResponseMessage"/>
    <variable name="InvokeBundleChangeEBS_Billing_InputVariable" messageType="ns16:BundleChangeBillingFCBSProvEBFRequestMessage"/>
    <variable name="ReceiveBundleChangeEBS_BillingCallback_InputVariable" messageType="ns16:BundleChangeBillingFCBSProvEBFResponseMessage"/>
    <variable name="InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable" messageType="ns17:UpdateBundleChangeProductMTSProvABCSRequestMessage"/>
    <variable name="InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable" messageType="ns17:UpdateBundleChangeProductMTSProvABCSResponseMessage"/>
    <variable name="InvokeAdjustBillInputVariable" messageType="ns8:AdjustBillAsyncFCBSProvABCSRequestMessage"/>
    <variable name="InvokeAdjustBillOutputVariable" messageType="ns8:AdjustBillAsyncFCBSProvABCSResponseMessage"/>
    <variable name="InvokeDiscountPenaltyBillBundleChangeOrderInput" messageType="ns7:DiscountPenaltyBillEBFChangeOrderRequestMessage"/>
    <variable name="ReceiveDiscountPenaltyBillCallbackInput" messageType="ns7:DiscountPenaltyBillEBFChangeOrderResponseMessage"/>
    <variable name="InvokeFcbsEBSInputVariable" messageType="ns22:UpdateParentProductAsynchFCBSProvABCSRequestMessage"/>
    <variable name="InvokeFcbsEBSOutputVariable" messageType="ns22:UpdateParentProductAsynchFCBSProvABCSResponseMessage"/>
    <variable name="InvokeCancelFeatureInputVariable" messageType="ns30:CancelFeatureTTOProvABCSRequestMessage"/>
    <variable name="InvokeCancelFeatureOutputVariable" messageType="ns30:CancelFeatureTTOProvABCSResponseMessage"/>
    <variable name="InvokeSSOBundleChangeInputVariable" messageType="ns42:BundleChangeOrdeToSSOProvABCSRequestMessage"/>
    <variable name="InvokeSSOBundleChangeOutputVariable" messageType="ns42:BundleChangeOrdeToSSOProvABCSResponseMessage"/>
    <variable name="tempInput" element="ns63:ProcessChangeOrder"/>
    <variable name="InvokeDeactivatePostpaidCampaignAVEAInputVariable"
              messageType="ns26:DeactivatePostpaidCampaignAVEAProvABCSRequestMessage"/>
    <variable name="InvokeDeactivatePostpaidCampaignAVEAOutputVariable"
              messageType="ns26:DeactivatePostpaidCampaignAVEAProvABCSResponseMessage"/>
    <variable name="InvokeConvertAdslAVEAInputVariable" messageType="ns33:ConvertAdslAVEAProvABCSRequestMessage"/>
    <variable name="InvokeConvertAdslAVEAOutputVariable" messageType="ns33:ConvertAdslAVEAProvABCSResponseMessage"/>
    <variable name="InvokeCancelCampaignAVEAInputVariable" messageType="ns32:CancelCampaignAVEAProvABCSRequestMessage"/>
    <variable name="InvokeCancelCampaignAVEAOutputVariable"
              messageType="ns32:CancelCampaignAVEAProvABCSResponseMessage"/>
    <variable name="SaveTurkTelekomOrderDIGIInputVariable"
              messageType="ns34:SaveTurkTelekomOrderDIGIProvABCSRequestMessage"/>
    <variable name="InvokeSaveTurkTelekomOrderDIGIOutputVariable"
              messageType="ns34:SaveTurkTelekomOrderDIGIProvABCSResponseMessage"/>
    <variable name="InvokeProcessGeneralProductCharacteristicInput"
              messageType="ns4:ProcessGeneralProductCharacteristicSMPProvABCSRequestMessage"/>
    <variable name="InvokeProcessGeneralProductCharacteristicOutput"
              messageType="ns4:ProcessGeneralProductCharacteristicSMPProvABCSRequestMessage"/>
    <variable name="InvokeSendSmsInputVariable" messageType="ns21:SendSMS"/>
    <variable name="InvokeInsertCrmMessageInputVariable" messageType="ns31:InsertCrmMessageSMMProvEBFRequestMessage"/>
    <variable name="InvokeInsertCrmMessageOutputVariable" messageType="ns31:InsertCrmMessageSMMProvEBFResponseMessage"/>
    <variable name="InvokeShipmentFaultInputVariable" messageType="ns10:BundleChangeShipmentRequestMessage"/>
    <variable name="ReceiveShipmentFaultInputVariable" messageType="ns10:BundleChangeShipmentCallbackMessage"/>
    <variable name="InvokeCampaignOperationsEBFInputVariable" messageType="ns44:CampaignOperationsEBFRequestMessage"/>
    <variable name="InvokeProcessExternalCustomerInputVariable"
              messageType="ns50:ProcessExternalCustomerOperationsProcessSalesOrder"/>
    <variable name="InvokeProcessExternalCustomerUpdateInputVariable"
              messageType="ns50:ProcessExternalCustomerOperationsProcessChangeOrder"/>
    <variable name="InvokeProcessExternalCustomerDeleteInputVariable"
              messageType="ns50:ProcessExternalCustomerOperationsProcessCancelOrder"/>
    <variable name="InvokePrepaidCampaignOperationsEBFInputVariable"
              messageType="ns48:PrepaidCampaignOperationsEBFRequestMessage"/>
    <variable name="InvokeTransactionCallbackInputVariable"
              messageType="ns54:TransactionCallbackCHATBOTProvABCSRequestMessage"/>
    <variable name="InvokeTransactionCallbackOutputVariable"
              messageType="ns54:TransactionCallbackCHATBOTProvABCSResponseMessage"/>
    <variable name="UpsellInsertPAYFLEXInputVariable" messageType="ns59:UpsellInsertPAYFLEXProvABCSRequestMessage"/>
    <variable name="UpsellInsertPAYFLEXOutputVariable" messageType="ns59:UpsellInsertPAYFLEXProvABCSResponseMessage"/>
    <variable name="InvokeSendChangeOrderToBPMInputVariable"
              messageType="ns18:ProcessClaimsSendChangeOrderBPMProvABCSRequestMessage"/>
    <variable name="InvokeSendChangeOrderToBPMOutputVariable"
              messageType="ns18:ProcessClaimsSendOptionalChangeOrderBPMProvABCSResponseMessage"/>
    <variable name="DocumentSubscriptionEBFInputVariable"
              messageType="ns92:DocumentSubscriptionEBFChangeOrderRequestMessage"/>
    <variable name="ReceiveCampaignOperationsEBFInputVariable" messageType="ns44:CampaignOperationsEBFResponseMessage"/>
    <variable name="InvokeManageAccountEBFInputVariable"
              messageType="ns93:ManageAccountEBFBundleChangeOrderRequestMessage"/>
    <variable name="ReceiveManageAccountEBFOutputVariable"
              messageType="ns93:ManageAccountEBFBundleChangeOrderResponseMessage"/>
    <variable name="InvokeManageCustomerOrderATTIPProvInputVariable"
              messageType="ns94:ManageCustomerOrderATTIPProvABCSRequestMessage"/>
    <variable name="InvokeManageCustomerOrderATTIPProvOutputVariable"
              messageType="ns94:ManageCustomerOrderATTIPProvABCSResponseMessage"/>
    <variable name="InvokeSubscriptionDeactivationAPIDOCOMOInputVariable"
              messageType="ns96:SubscriptionDeactivationApiRequestMessage"/>
    <variable name="InvokeSubscriptionDeactivationAPIDOCOMOOutputVariable"
              messageType="ns96:SubscriptionDeactivationApiResponseMessage"/>
    <variable name="InvokeUpdateSimplifiedProductCharInputVariable"
              messageType="ns97:UpdateSimplifiedProductCharMTSProvABCSRequestMessage"/>
    <variable name="InvokeUpdateSimplifiedProductCharOutputVariable"
              messageType="ns97:UpdateSimplifiedProductCharMTSProvABCSResponseMessage"/>
    <variable name="InvokeNotifyCampaignOrderStatusEBFInputVariable"
              messageType="ns53:NotifyCampaignOrderStatusCBOXEBFRequestMessage"/>
    <variable name="InvokeCWOperationsEBFInputVariable" messageType="ns98:BundleChangeRequestMessage"/>
    <variable name="OverwriteEntitlementsCAProvABCSInput" messageType="ns99:OverwriteEntitlementsCAProvABCSRequestMessage"/>
    <variable name="OverwriteEntitlementsCAProvABCSOutput" messageType="ns99:OverwriteEntitlementsCAProvABCSResponseMessage"/>
  </variables>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in BundleChangeOrderEBF.wsdl) -->
    <receive name="receiveInput" partnerLink="BundleChangeOrderEBF" portType="ns1:BundleChangeOrderEBF" operation="process" variable="inputVariable" createInstance="yes"/>
    <assign name="AssignMainScope">
      <copy>
        <from>true()</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$MainScope</to>
      </copy>
      <copy>
        <from>false()</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$TivibuTicariTimeout</to>
      </copy>
    </assign>
    <scope name="ScopeCR279059">
      <sequence>
        <if name="CR279059_CHECK">
          <documentation>
            <![CDATA[CR279059 OFF]]>
          </documentation>
          <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','279059','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
          <empty name="EmptyContinue"/>
          <else>
            <documentation>
              <![CDATA[CR279059 ON]]>
            </documentation>
            <if name="INDIVIDUAL_DEFINITION_DIGITAL_SIGNABLE">
              <documentation>
                <![CDATA[INDIVIDUAL_DEFINITION_IS_DIGITAL_SIGNABLE]]>
              </documentation>
              <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:CUSTOMER/ns65:CUSTOMER_DEFINITION/ns65:INDIVIDUAL_DEFINITION)&gt;0 and $inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName='DIGITAL_SIGNABLE']/ns64:OrderItemCharValue=1</condition>
              <sequence name="SequenceInvokeDocumentSubscription">
                <assign name="AssignDocumentSubscriptionEBF">
                  <copy>
                    <from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$inputVariable.payload</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$DocumentSubscriptionEBFInputVariable.payload</to>
                  </copy>
                </assign>
                <invoke name="InvokeDocumentSubscriptionEBF" bpelx:invokeAsDetail="no"
                        partnerLink="DocumentSubscriptionEBF" portType="ns92:DocumentSubscriptionEBF"
                        operation="processChange" inputVariable="DocumentSubscriptionEBFInputVariable"/>
              </sequence>
              <else>
                <documentation>
                  <![CDATA[NO]]>
                </documentation>
                <empty name="EmptyContinue"/>
              </else>
            </if>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="ScopeCR2625">
      <if name="If_Cr2625status">
        <documentation>
          <![CDATA[if: CR 2625 Status is OFF]]>
        </documentation>
        <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2625','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
        <assign name="AssignCr2625variable">
          <copy>
            <from>number(0)</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$cr2625variable</to>
          </copy>
        </assign>
        <else>
          <documentation>
            <![CDATA[NO]]>
          </documentation>
          <sequence name="Sequence">
            <assign name="TransformInquireAccountTtoInput">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
              </bpelx:annotation>
              <copy>
                <from>ora:doXSLTransformForDoc("../Transformations/TransformInquireAccountTtoInput.xsl", $inputVariable.payload)</from>
                <to variable="InquireAccountTtoInputVariable" part="payload"/>
              </copy>
            </assign>
            <scope name="ScopeInquireAccountTTO">
              <sequence name="SequenceInquireAccountTTO">
                <invoke name="InquireAccountTto" bpelx:invokeAsDetail="no" partnerLink="InquireAccountTTOProvABCS" portType="ns47:InquireAccountTTOProvABCS" operation="process" inputVariable="InquireAccountTtoInputVariable" outputVariable="InquireAccountTtoOutputVariable"/>
                <if name="If_Response">
                  <documentation>
                    <![CDATA[if: System Error]]>
                  </documentation>
                  <condition>$InquireAccountTtoOutputVariable.payload/ns61:pReqRes/ns62:RETURN_CODE = 99</condition>
                  <sequence name="Sequence_HandleFault">
                    <assign name="AssignFaultHandlerInput">
                      <copy ignoreMissingFromData="yes">
                        <from>$InquireAccountTtoOutputVariable.payload/ns61:pReqRes/ns62:RETURN_CODE</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                      </copy>
                      <copy ignoreMissingFromData="yes">
                        <from>$InquireAccountTtoOutputVariable.payload/ns61:pReqRes/ns62:RETURN_MESSAGE</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable"/>
                  </sequence>
                  <else>
                    <documentation>
                      <![CDATA[NO]]>
                    </documentation>
                    <if name="If_Return">
                      <documentation>
                        <![CDATA[YES]]>
                      </documentation>
                      <condition>$InquireAccountTtoOutputVariable.payload/ns61:pReqRes/ns62:RETURN_CODE = 100 and $InquireAccountTtoOutputVariable.payload/ns61:pReqRes/ns62:RETURN_MESSAGE = 'true'</condition>
                      <assign name="AssignCr2625variable">
                        <copy>
                          <from>number(1)</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$cr2625variable</to>
                        </copy>
                      </assign>
                      <else>
                        <documentation>
                          <![CDATA[NO]]>
                        </documentation>
                        <assign name="AssignCr2625variable">
                          <copy>
                            <from>number(0)</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$cr2625variable</to>
                          </copy>
                        </assign>
                      </else>
                    </if>
                  </else>
                </if>
              </sequence>
            </scope>
          </sequence>
        </else>
      </if>
    </scope>
    <scope name="ScopeTivibuTicari">
      <if name="If_TivibuTicariType">
        <documentation>
          <![CDATA[OrderItemCharName = tt_paymenttype]]>
        </documentation>
        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "tt_paymenttype"]) &gt; 0</condition>
        <sequence name="Sequence">
          <scope name="Scope2625">
            <sequence name="SequenceCR2625">
              <assign name="AssignManageCustomerAccountAsyncInput">
                <copy>
                  <from>$inputVariable.payload</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageAccountEBFInputVariable.payload</to>
                </copy>
              </assign>
              <invoke name="InvokeManageAccountEBF" bpelx:invokeAsDetail="no" partnerLink="ManageAccountEBF"
                      portType="ns93:ManageAccountEBF" operation="BundleChangeOrder"
                      inputVariable="InvokeManageAccountEBFInputVariable"/>
              <receive name="ReceiveManageAccountEBF" partnerLink="ManageAccountEBF"
                       portType="ns93:ManageAccountEBFCallback" operation="BundleChangeOrderCallback"
                       variable="ReceiveManageAccountEBFOutputVariable"/>
              <assign name="TransformManageCustomerAccountAsyncInput">
                <bpelx:annotation>
                  <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:doXSLTransformForDoc("../Transformations/TransformManageCustomerAccountAsyncInput.xsl", $inputVariable.payload)</from>
                  <to variable="InvokeManageCustomerAccountAsyncInputVariable" part="payload"/>
                </copy>
              </assign>
              <!--<scope name="ScopeManageCustomerAccountAsync">
                <sequence name="SequenceManageCustomerAccountAsync">
                  <invoke name="InvokeManageCustomerAccountAsync" bpelx:invokeAsDetail="no" partnerLink="ManageCustomerAccountTTOProvABCS" portType="ns58:ManageCustomerAccountTTOProvABCS" operation="process" inputVariable="InvokeManageCustomerAccountAsyncInputVariable" outputVariable="InvokeManageCustomerAccountAsyncOutputVariable"/>
                </sequence>
              </scope>-->
              <if name="If_CR2625">
                <documentation>
                  <![CDATA[if cr2625variable = number(0)]]>
                </documentation>
                <condition>$cr2625variable = number(0)</condition>
                <empty name="EmptyContinue"/>
                <else>
                  <documentation>
                    <![CDATA[NO]]>
                  </documentation>
                  <sequence name="SequenceManageCustomerAccount">
                    <assign name="TransformManageCustomerAccountAtsViaTto">
                      <bpelx:annotation>
                        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                      </bpelx:annotation>
                      <copy>
                        <from>ora:doXSLTransformForDoc("../Transformations/TransformManageCustomerAccountAtsViaTtoInput.xsl", $inputVariable.payload, "InvokeManageCustomerAccountAsyncInputVariable.payload", $InvokeManageCustomerAccountAsyncInputVariable.payload)</from>
                        <to variable="InvokeManageCustomerAccountInputVariable" part="payload"/>
                      </copy>
                    </assign>
                    <invoke name="InvokeManageCustomerAccount" bpelx:invokeAsDetail="no" partnerLink="ManageCustomerAccountATSviaTTOProvABCS" portType="ns45:ManageCustomerAccountATSviaTTOProvABCS" operation="process" inputVariable="InvokeManageCustomerAccountInputVariable" outputVariable="InvokeManageCustomerAccountOutputVariable"/>
                  </sequence>
                </else>
              </if>
            </sequence>
          </scope>
          <scope name="ScopeCreateInvoice">
            <sequence name="SequenceCreateInvoice">
              <assign name="TransformCreateInvoiceInput">
                <bpelx:annotation>
                  <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:doXSLTransformForDoc("../Transformations/TransformCreateInvoiceInput.xsl", $inputVariable.payload)</from>
                  <to variable="InvokeCreateInvoiceInputVariable" part="payload"/>
                </copy>
              </assign>
              <invoke name="InvokeCreateInvoice" bpelx:invokeAsDetail="no" partnerLink="CreateInvoiceTTOProvABCS" portType="ns35:CreateInvoiceTTOProvABCS" operation="process" inputVariable="InvokeCreateInvoiceInputVariable" outputVariable="InvokeCreateInvoiceOutputVariable"/>
            </sequence>
          </scope>
          <if name="If_CreditCardOrNot">
            <documentation>
              <![CDATA[tt_payment = tt_creditcard]]>
            </documentation>
            <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "tt_paymenttype"]/ns64:OrderItemCharValue = "tt_creditcard"</condition>
            <sequence name="SequenceCreditCard">
              <assign name="TransformInquireAndPayInvoiceInput">
                <bpelx:annotation>
                  <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:doXSLTransformForDoc("../Transformations/TransformInquireAndPayInvoiceInput.xsl", $inputVariable.payload)</from>
                  <to variable="InvokeInquireAndPayInvoiceInputVariable" part="payload"/>
                </copy>
              </assign>
              <invoke name="InvokeInquireAndPayInvoice" bpelx:invokeAsDetail="no" partnerLink="InquireAndPayInvoiceTTOProvABCS" portType="ns36:InquireAndPayInvoiceTTOProvABCS" operation="process" inputVariable="InvokeInquireAndPayInvoiceInputVariable" outputVariable="InvokeInquireAndPayInvoiceOutputVariable"/>
              <sequence name="SequenceInsertCrmMessage">
                <assign name="TransformInsertCrmMessageCallbackSuccessInput">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:doXSLTransformForDoc("../Transformations/TransformInsertCrmMessageCallbackSuccessInput.xsl", $inputVariable.payload)</from>
                    <to variable="InvokeInsertCrmMessageAsyncInputVariable" part="payload"/>
                  </copy>
                </assign>
                <invoke name="InvokeInsertCrmMessage" bpelx:invokeAsDetail="no" partnerLink="InsertCrmMessageAsyncSMMProvEBF" portType="ns40:InsertCrmMessageAsyncSMMProvEBF" operation="process" inputVariable="InvokeInsertCrmMessageAsyncInputVariable"/>
              </sequence>
            </sequence>
            <else>
              <documentation>
                <![CDATA[NO]]>
              </documentation>
              <sequence name="SequenceOtherwise">
                <sequence name="SequenceInsertCrmMessage" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <assign name="TransformInsertCrmMessageNonCreditCardInput">
                    <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                      <from>ora:doXSLTransformForDoc("../Transformations/TransformInsertCrmMessageNonCreditCardInput.xsl", $inputVariable.payload)</from>
                      <to variable="InvokeInsertCrmMessageAsyncInputVariable" part="payload"/>
                    </copy>
                  </assign>
                  <invoke name="InvokeInsertCrmMessage" bpelx:invokeAsDetail="no" partnerLink="InsertCrmMessageAsyncSMMProvEBF" portType="ns40:InsertCrmMessageAsyncSMMProvEBF" operation="process" inputVariable="InvokeInsertCrmMessageAsyncInputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                </sequence>
                <sequence name="SequenceCancelOrNotifyPayment">
                  <assign name="AssignCancelOrNotifyPayment">
                    <copy ignoreMissingFromData="yes">
                      <from>$inputVariable.payload/ns63:ChangeOrder/ns64:CHANGE_ORDER_ID</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeCancelOrNotifyPaymentDTHInputVariable.payload/ns62:CORRELATION_ID</to>
                    </copy>
                    <copy>
                      <from>"INSERT"</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeCancelOrNotifyPaymentDTHInputVariable.payload/ns62:ParameterList/ns62:pCharName</to>
                    </copy>
                  </assign>
                  <invoke name="InvokeCancelOrNotifyPaymentDTH" bpelx:invokeAsDetail="no" partnerLink="CancelOrNotifyPaymentDTHEBF" portType="ns39:CancelOrNotifyPaymentDTHEBF" operation="process" inputVariable="InvokeCancelOrNotifyPaymentDTHInputVariable"/>
                  <scope name="Scope2626">
                    <faultHandlers>
                      <catchAll>
                        <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                          <sequence name="SequenceInsertCrmMessage">
                            <assign name="TransformInsertCrmMessageNonCreditCardInput">
                              <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:doXSLTransformForDoc("../Transformations/TransformInsertCrmMessageCancelOrNotifyPaymentDTHFault.xsl", $inputVariable.payload)</from>
                                <to variable="InvokeInsertCrmMessageAsyncInputVariable" part="payload"/>
                              </copy>
                            </assign>
                            <invoke name="InvokeInsertCrmMessage" bpelx:invokeAsDetail="no" partnerLink="InsertCrmMessageAsyncSMMProvEBF" portType="ns40:InsertCrmMessageAsyncSMMProvEBF" operation="process" inputVariable="InvokeInsertCrmMessageAsyncInputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                          </sequence>
                          <sequence name="SequenceUpdateTable">
                            <assign name="AssignUpdateTable" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy ignoreMissingFromData="yes">
                                <from>$inputVariable.payload/ns63:ChangeOrder/ns64:CHANGE_ORDER_ID</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeCancelOrNotifyPaymentDTHInputVariable.payload/ns62:CORRELATION_ID</to>
                              </copy>
                              <copy>
                                <from>"UPDATE"</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeCancelOrNotifyPaymentDTHInputVariable.payload/ns62:ParameterList/ns62:pCharName</to>
                              </copy>
                            </assign>
                            <invoke name="InvokeUpdateTable" bpelx:invokeAsDetail="no" partnerLink="CancelOrNotifyPaymentDTHEBF" portType="ns39:CancelOrNotifyPaymentDTHEBF" operation="process" inputVariable="InvokeCancelOrNotifyPaymentDTHInputVariable"/>
                          </sequence>
                          <assign name="AssignTimeout">
                            <copy>
                              <from>"999"</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveCancelOrNotifyPaymentDTHInputVariable.payload/ns62:RETURN_CODE</to>
                            </copy>
                            <copy>
                              <from>"ERROR"</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveCancelOrNotifyPaymentDTHInputVariable.payload/ns62:RETURN_MESSAGE</to>
                            </copy>
                            <copy>
                              <from>true()</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$TivibuTicariTimeout</to>
                            </copy>
                          </assign>
                        </sequence>
                      </catchAll>
                    </faultHandlers>
                    <receive name="ReceiveCancelOrNotifyPaymentDTH" partnerLink="CancelOrNotifyPaymentDTHEBF" portType="ns39:CancelOrNotifyPaymentDTHEBFCallback" operation="processResponse" variable="ReceiveCancelOrNotifyPaymentDTHInputVariable">
                      <bpelx:for>oraext:lookup-table('GENERAL_CHAR_VALUES','NAME','TIVIBU_TICARI_PAYMENT_TIMEOUT','VALUE','jdbc/CustomSOADataSource')</bpelx:for>
                    </receive>
                  </scope>
                  <if name="If_ReturnCode">
                    <documentation>
                      <![CDATA[Callback Success]]>
                    </documentation>
                    <condition>$ReceiveCancelOrNotifyPaymentDTHInputVariable.payload/ns62:RETURN_CODE = "100"</condition>
                    <empty name="DoNothing"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <assign name="AssignMainScope">
                        <copy>
                          <from>false()</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$MainScope</to>
                        </copy>
                      </assign>
                    </else>
                  </if>
                </sequence>
              </sequence>
            </else>
          </if>
        </sequence>
        <else>
          <documentation>
            <![CDATA[NO]]>
          </documentation>
          <empty name="DoNothing"/>
        </else>
      </if>
    </scope>
    <if name="If_TivibuTicariOrNot">
      <documentation>
        <![CDATA[MainScope = true]]>
      </documentation>
      <condition>$MainScope = true()</condition>
      <sequence name="SequenceMain">
        <if name="If_OrderItemLineCount">
          <documentation>
            <![CDATA[if NotTooManyOrderItems]]>
          </documentation>
          <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS) &lt;= number(ora:getPreference('MaxOrderItems')) and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS) &lt;= number(ora:getPreference('MaxOrderItems'))</condition>
          <sequence name="Sequence">
            <assign name="TransformSuspendProductFCBSInput">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
              </bpelx:annotation>
              <copy>
                <from>ora:doXSLTransformForDoc("../Transformations/TransformUpdateProductStatusFCBSInput.xsl", $inputVariable.payload)</from>
                <to variable="InvokeUpdateProductStatusFCBSInputVariable" part="payload"/>
              </copy>
            </assign>
            <if name="If_ItemsToSuspendAtBillingExist">
              <documentation>
                <![CDATA[if: Count of Items To Suspend At Billing > 0]]>
              </documentation>
              <condition>count($InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:ProductKey/ns73:PRODUCT_ID) &gt; 0</condition>
              <sequence name="SequenceInvokeProductFCBSForSuspension">
                <assign name="AssignDeactivationProductsStatusSuspend">
                  <copy ignoreMissingFromData="yes">
                    <from>dvm:lookupValue("oramds:/apps/datamodel/DVM/FCBSProductStatusCodes.dvm","ParamName","Suspended","ParamValue","S")</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:ProductStatus</to>
                  </copy>
                  <copy>
                    <from>'47'</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_INTERACTION_TYPE_ID</to>
                  </copy>
                  <copy>
                    <from>'PCHANGE_SUSPEND'</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_REASON_CODE</to>
                  </copy>
                </assign>
                <invoke name="InvokeSuspendDeactivationProductsAtBilling" bpelx:invokeAsDetail="no" partnerLink="ProductFCBSProvABCS" portType="ns3:ProductFCBSProvABCS" operation="UpdateProductStatus" inputVariable="InvokeUpdateProductStatusFCBSInputVariable" outputVariable="InvokeUpdateProductStatusFCBSOutputVariable"/>
                <scope name="ScopeUpdateProductStatusMTSForSuspend">
                  <sequence name="SequenceUpdateProductStatusMTSForSuspend">
                    <if name="If_Switch_276994_CR_Status_Control">
                      <documentation>
                        <![CDATA[if 276994 OFF]]>
                      </documentation>
                      <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','276994','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                      <empty name="EmptyContinue"/>
                      <else>
                        <documentation>
                          <![CDATA[NO]]>
                        </documentation>
                        <if name="If_ACTION_REASON_CODE_Control">
                          <documentation>
                            <![CDATA[if ACTION_REASON_CODE = PCHANGE_SUSPEND]]>
                          </documentation>
                          <condition>$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_REASON_CODE = "PCHANGE_SUSPEND"</condition>
                          <sequence name="SequenceInvokeUpdateProductStatusMTS">
                            <assign name="Transform_UpdateProductStatusMTSForSuspendInput">
                              <bpelx:annotation>
                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:doXSLTransformForDoc("../Transformations/Transform_UpdateProductStatusMTSForSuspendInput.xsl", $InvokeUpdateProductStatusFCBSInputVariable.payload)</from>
                                <to variable="InvokeUpdateProductStatusMTSInputVariable" part="payload"/>
                              </copy>
                            </assign>
                            <invoke name="InvokeUpdateProductStatusMTS" bpelx:invokeAsDetail="no" partnerLink="UpdateProductStatusMTSProvABCS" portType="ns57:UpdateProductStatusMTSProvABCS" operation="process" inputVariable="InvokeUpdateProductStatusMTSInputVariable" outputVariable="InvokeUpdateProductStatusMTSOutputVariable"/>
                          </sequence>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <empty name="EmptyContinue"/>
                          </else>
                        </if>
                      </else>
                    </if>
                  </sequence>
                </scope>
                <scope name="ScopeAssignActionDate">
                  <variables>
                    <variable name="itemCount" type="xsd:int"/>
                    <variable name="actionDateVar" type="xsd:string"/>
                    <variable name="numberOfOrders" type="xsd:int"/>
                    <variable name="pprodID" type="xsd:long"/>
                  </variables>
                  <faultHandlers>
                    <catch faultName="bpws:selectionFailure">
                      <sequence name="SequenceSelectionFailure">
                        <assign name="AssignSelectionFailure">
                          <copy>
                            <from>'112'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>"Selection failure!"</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable"/>
                      </sequence>
                    </catch>
                    <catchAll>
                      <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignCatchAll">
                          <copy>
                            <from>'9999'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>"SYSTEM_ERROR"</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catchAll>
                  </faultHandlers>
                  <if name="If_SwitchCR2458">
                    <documentation>
                      <![CDATA[CrStatus (2544) = OFF]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2544','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="DoNothingCrStatusOff"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <sequence name="SequenceAssignAciotnDate">
                        <assign name="AssignVariable">
                          <copy>
                            <from>count($InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:ProductKey)</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$numberOfOrders</to>
                          </copy>
                        </assign>
                        <if name="If38">
                          <documentation>
                            <![CDATA[numberOfOrders>0]]>
                          </documentation>
                          <condition>$numberOfOrders&gt;0</condition>
                          <sequence>
                            <assign name="AssignActionDate">
                              <copy ignoreMissingFromData="yes">
                                <from>$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_DATE</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>translate(translate($actionDateVar,'-','T'),'/','-')</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>xp20:add-dayTimeDuration-to-dateTime($actionDateVar,'PT5S')</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>translate(translate($actionDateVar,'-','/'),'T','-')</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>substring-before($actionDateVar,'+')</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                              </copy>
                            </assign>
                            <while name="ForEachDeactivatedOrder">
                              <condition>$numberOfOrders &gt;=1</condition><sequence name="SequenceUpdateActionDate"
                                                                                     xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignDates">
                                  <copy>
                                    <from>number(0)</from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$pprodID</to>
                                  </copy>
                                  <copy ignoreMissingFromData="yes">
                                    <from>$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:ProductKey[$numberOfOrders]/ns73:PRODUCT_ID </from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$pprodID</to>
                                  </copy>
                                </assign>
      <if name="If39">
         <documentation>
            <![CDATA[productID]]>
         </documentation>
         <condition>$pprodID &gt; 0</condition>
         <sequence name="Sequence">
            <if name="If40">
               <documentation>
                                        <![CDATA[Product exist As transferredKey]]>
                                      </documentation>
               <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:TRANSFERRED_PRODUCT_KEY/ns73:PRODUCT_ID = $pprodID]) &gt; 0</condition>
               <assign name="AssignDateForActivation">
                  <copy ignoreMissingFromData="yes">
                     <from>$actionDateVar</from>
                     <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:TRANSFERRED_PRODUCT_KEY/ns73:PRODUCT_ID = $pprodID][1]/ns64:ACTION_DATE</to>
                  </copy>
               </assign>
               <else>
                  <documentation>
                     <![CDATA[NO]]>
                  </documentation>
                  <empty name="EmptyProductNotInActivatedORders"/>
               </else>
            </if>
            <assign name="AssignDateForDeactivation">
               <copy ignoreMissingFromData="yes">
                  <from>$actionDateVar</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $pprodID]/ns64:ACTION_DATE</to>
               </copy>
            </assign>
         </sequence>
         <else>
            <documentation>
               <![CDATA[NO]]>
            </documentation>
            <empty name="EmptyNopproductID"/>
         </else>
      </if>
   <assign name="AssignDecreaseIndex">
                                  <copy ignoreMissingFromData="yes">
                                    <from>$numberOfOrders - 1</from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$numberOfOrders</to>
                                  </copy>
                                </assign></sequence></while>
                          </sequence>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <empty name="EmptyNoSuspend"/>
                          </else>
                        </if>
                      </sequence>
                    </else>
                  </if>
                </scope>
              </sequence>
              <else>
                <documentation>
                  <![CDATA[NO]]>
                </documentation>
                <empty name="EmptyNoProductToSuspend"/>
              </else>
            </if>
          </sequence>
          <else>
            <documentation>
              <![CDATA[NO]]>
            </documentation>
            <exit name="TerminateTooManyOrderItemLines"/>
          </else>
        </if>
        <if name="If_IsSElfInstallation">
          <documentation>
            <![CDATA[SwitchIsSElfInstallation]]>
          </documentation>
          <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_installation_type"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_installation_type"]/ns73:PRODUCT_CHAR_VALUE ="tt_selfservice" and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SHIPMENT_INFO) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_conditional_shipment"]/ns73:PRODUCT_CHAR_VALUE = "E"]/ns64:SHIPMENT_INFO) &gt; 0</condition>
          <sequence name="Sequence10">
            <assign name="AssignREcieveShipment">
              <copy ignoreMissingFromData="yes">
                <from>$inputVariable.payload</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable.payload</to>
              </copy>
            </assign>
          </sequence>
          <else>
            <documentation>
              <![CDATA[NO]]>
            </documentation>
            <sequence>
              <scope name="ScopeInquireBridge">
                <sequence name="SequenceInquireBridge">
                  <assign name="TransformInquireBridgeStatusInput">
                    <bpelx:annotation>
                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                      <from>ora:doXSLTransformForDoc("../Transformations/InquireBridgeStatusInput.xsl", $inputVariable.payload)</from>
                      <to variable="InvokeInquireBridgeStatusInputVariable" part="payload"/>
                    </copy>
                  </assign>
                  <invoke name="InvokeInquireBridgeStatus" bpelx:invokeAsDetail="no" partnerLink="InquireBridgeStatusMTSProvABCS" portType="ns23:InquireBridgeStatusMTSProvABCS" operation="process" inputVariable="InvokeInquireBridgeStatusInputVariable" outputVariable="InvokeInquireBridgeStatusOutputVariable"/>
                  <if name="If_SuccessOrNot">
                    <documentation>
                      <![CDATA[if success]]>
                    </documentation>
                    <condition>$InvokeInquireBridgeStatusOutputVariable.payload/ns63:pReqResp/ns62:RETURN_CODE = "100"</condition>
                    <if name="If_CustomerInBridgeOrNot">
                      <documentation>
                        <![CDATA[if customer in bridge]]>
                      </documentation>
                      <condition>$InvokeInquireBridgeStatusOutputVariable.payload/ns63:pCustInBridge = '1'</condition>
                      <sequence name="Sequence">
                        <if name="If_AdslNo">
                          <documentation>
                            <![CDATA[if xdslno same]]>
                          </documentation>
                          <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE = $InvokeInquireBridgeStatusOutputVariable.payload/ns63:pCharKey[ns62:pCharName = "TT_APL_XDSL_NO"]/ns62:pCharValue</condition>
                          <assign name="AssignVariable" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy>
                              <from>false()</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$isContinue</to>
                            </copy>
                          </assign>
                          <elseif>
                            <documentation>
                              <![CDATA[if xdslno same]]>
                            </documentation>
                            <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:KEY_DEPENDENT_PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:KEY_DEPENDENT_PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE = $InvokeInquireBridgeStatusOutputVariable.payload/ns63:pCharKey[ns62:pCharName = "TT_APL_XDSL_NO"]/ns62:pCharName</condition>
                            <assign name="AssignVariable" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy>
                                <from>false()</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$isContinue</to>
                              </copy>
                            </assign>
                          </elseif>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <assign name="AssignVariable" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy>
                                <from>true()</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$isContinue</to>
                              </copy>
                            </assign>
                          </else>
                        </if>
                      </sequence>
                      <else>
                        <documentation>
                          <![CDATA[NO]]>
                        </documentation>
                        <assign name="AssignVariable">
                          <copy>
                            <from>true()</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$isContinue</to>
                          </copy>
                        </assign>
                      </else>
                    </if>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <sequence name="SequenceFaultHandler" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignFaultHandlerInput">
                          <copy>
                            <from>$InvokeInquireBridgeStatusOutputVariable.payload/ns63:pReqResp/ns62:RETURN_CODE</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>$InvokeInquireBridgeStatusOutputVariable.payload/ns63:pReqResp/ns62:RETURN_MESSAGE</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </else>
                  </if>
                </sequence>
              </scope>
              <if name="If_IsContinue">
                <documentation>
                  <![CDATA[if isContinue]]>
                </documentation>
                <condition>$isContinue = true()</condition>
                <scope name="Scope2627">
                  <sequence name="Sequence_1">
                    <assign name="AssingShipmentOrderEBS_ShipmentInput">
                      <copy ignoreMissingFromData="yes">
                        <from>$inputVariable.payload</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeShipmentOrderEBS_Shipment_InputVariable.payload</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeShipmentOrderEBS_Shipment" portType="ns9:ShipmentOrderToMTSProvEBF" partnerLink="ShipmentOrderToMTSProvEBF" operation="BundleChangeShipment" bpelx:invokeAsDetail="no" inputVariable="InvokeShipmentOrderEBS_Shipment_InputVariable"/>
                    <receive name="ReceiveShipmentOrderEBS_Shipment" partnerLink="ShipmentOrderToMTSProvEBF" portType="ns9:ShipmentOrderToMTSProvEBFCallback" operation="BundleChangeShipmentCallback" variable="ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable"/>
                  </sequence>
                </scope>
                <else>
                  <documentation>
                    <![CDATA[NO]]>
                  </documentation>
                  <assign name="AssignInputToReceiveShipmentOrderEBS_ShipmentCallback_InputVariable">
                    <copy>
                      <from>$inputVariable.payload</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable.payload</to>
                    </copy>
                    <copy>
                      <from>'100'</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE</to>
                    </copy>
                    <copy>
                      <from>'SUCCESS'</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_MESSAGE</to>
                    </copy>
                  </assign>
                </else>
              </if>
            </sequence>
          </else>
        </if>
        <if name="if_getPreference_ReasonCode">
          <documentation>
            <![CDATA[is Shipment not denied]]>
          </documentation>
          <condition>$ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE != ora:getPreference('ReasonCode')</condition>
          <sequence>
            <scope name="ScopeResource">
              <sequence name="Sequence_2">
                <assign name="AssignFulfillmentEBS_ResourceInput">
                  <copy ignoreMissingFromData="yes">
                    <from>$ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable.payload</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFulfillmentEBS_Resource_InputVariable.payload</to>
                  </copy>
                </assign>
                <invoke name="InvokeFulfillmentEBS_Resource" bpelx:invokeAsDetail="no" partnerLink="BundleChangeToResourceEBF" portType="ns11:BundleChangeToResourceEBF" operation="process" inputVariable="InvokeFulfillmentEBS_Resource_InputVariable"/>
                <receive name="ReceiveFulfillmentEBS_Resource" partnerLink="BundleChangeToResourceEBF" portType="ns11:BundleChangeToResourceEBFCallback" operation="processResponse" variable="ReceiveFulfillmentEBS_ResourceCallback_InputVariable"/>
              </sequence>
            </scope>
            <scope name="ScopeProvision">
              <sequence name="Sequence_3">
                <assign name="AssignFulfillmentEBS_ProvisionInput">
                  <copy ignoreMissingFromData="yes">
                    <from>$ReceiveFulfillmentEBS_ResourceCallback_InputVariable.payload</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFulfillmentEBS_Provision_InputVariable.payload</to>
                  </copy>
                </assign>
                <if name="If_CR2819">
                  <documentation>
                    <![CDATA[if CR STATUS 2819 ON]]>
                  </documentation>
                  <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2819','STATUS','jdbc/CustomSOADataSource') = 'ON'</condition>
                  <assign name="AssignCUST_IN_BRIDGE">
                    <extensionAssignOperation>
                      <bpelx:append>
                        <bpelx:from><bpelx:literal><orderebo:OrderChar xmlns:orderebo="http://xmlns.ttnet.com.tr/CDM/EBO/Order"> <orderebo:OrderItemCharValueName>CUST_IN_BRIDGE</orderebo:OrderItemCharValueName> <orderebo:OrderItemCharValue>?</orderebo:OrderItemCharValue> <orderebo:OrderItemCharName>CUST_IN_BRIDGE</orderebo:OrderItemCharName> </orderebo:OrderChar></bpelx:literal></bpelx:from>
                        <bpelx:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFulfillmentEBS_Provision_InputVariable.payload/ns63:ChangeOrder</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                    <copy ignoreMissingFromData="yes">
                      <from>$InvokeInquireBridgeStatusOutputVariable.payload/ns63:pCustInBridge</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFulfillmentEBS_Provision_InputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = 'CUST_IN_BRIDGE']/ns64:OrderItemCharValue</to>
                    </copy>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[NO]]>
                    </documentation>
                    <empty name="Empty1"/>
                  </else>
                </if>
                <invoke name="InvokeFulfillmentEBS_Provision" bpelx:invokeAsDetail="no" partnerLink="BundleChangeToProvisionEBF" portType="ns12:BundleChangeToProvisionEBF" operation="process" inputVariable="InvokeFulfillmentEBS_Provision_InputVariable"/>
                <receive name="ReceiveFulfillmentEBS_Provision" partnerLink="BundleChangeToProvisionEBF" portType="ns12:BundleChangeToProvisionEBFCallback" operation="processResponse" variable="ReceiveFulfillmentEBS_ProvisionCallback_InputVariable"/>
              </sequence>
            </scope>
            <if name="If_AfterProvision">
              <documentation>
                <![CDATA[ProvisionSuccesful]]>
              </documentation>
              <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE = '100'</condition>
              <sequence>
                <!--<scope name="ScopeDeactivatedManageTTS">
                  <variables>
                    <variable name="MAIndexDe" type="xsd:integer"/>
                    <variable name="DeCityID" type="xsd:string"/>
                    <variable name="custType" type="xsd:string"/>
                  </variables>
                  <faultHandlers>
                    <catch faultName="bpws:selectionFailure">
                      <sequence name="SequenceSelectionFailure" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignSelectionFailure">
                          <copy>
                            <from>'112'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>"Selection failure!"</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catch>
                    <catchAll>
                      <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignCatchAll">
                          <copy>
                            <from>'111'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>'Unable to access CR_STATUS table!'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catchAll>
                  </faultHandlers>
                  <if name="If13">
                    <documentation>
                      <![CDATA[CrStatus (1244) = OFF]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','1244','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="Empty_1244_OFF"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <if name="If_Service">
                        <documentation>
                          <![CDATA[if service product exists]]>
                        </documentation>
                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"]) &gt; 0</condition>
                        <forEach parallel="yes" counterName="index" name="ForEachN">
                          <startCounterValue>1</startCounterValue>
                          <finalCounterValue>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS)</finalCounterValue>
                          <scope name="Scope">
                            <if name="If_ProvisionServiceCode">
                              <documentation>
                                <![CDATA[if provisionservicecode exists]]>
                              </documentation>
                              <condition>($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice") or ($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice" and dvm:lookupValue("oramds:/apps/datamodel/DVM/ManageServicesAvailable.dvm","ServiceName","ManageProductTTOProvABCSMetro","Endpoint","1") = 1)</condition>
                              <sequence name="Sequence">
                                <scope name="ScopeManageProduct_DslMetro">
                                  <variables>
                                    <variable name="indexHizmetNo" type="xsd:integer"/>
                                  </variables>
                                  <sequence name="SequenceManageProduct">
                                    <assign name="TransformManageProductInput">
                                      <bpelx:annotation>
                                        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                      </bpelx:annotation>
                                      <copy>
                                        <from>ora:doXSLTransformForDoc("../Transformations/ManageProductInput.xsl", $inputVariable.payload)</from>
                                        <to variable="InvokeManageProductInputVariable" part="payload"/>
                                      </copy>
                                    </assign>
                                    <assign name="AssignIndexHizmetNo">
                                      <copy>
                                        <from>"0"</from>
                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexHizmetNo</to>
                                      </copy>
                                    </assign>
                                    <if name="If_HizmetNo">
                                      <documentation>
                                        <![CDATA[tt_line_number exists]]>
                                      </documentation>
                                      <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                                      <if name="If4" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                        <documentation>
                                          <![CDATA[deac(tt_xdslno) = ac(tt_xdslno)]]>
                                        </documentation>
                                        <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE = $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</condition>
                                        <empty name="Empty2"/>
                                        <else>
                                          <documentation>
                                            <![CDATA[NO]]>
                                          </documentation>
                                          <assign name="AssignOrderType">
                                            <copy>
                                              <from>"10"</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
                                            </copy>
                                            <copy>
                                              <from>"G"</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
                                            </copy>
                                            <copy>
                                              <from>"1"</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexHizmetNo</to>
                                            </copy>
                                          </assign>
                                        </else>
                                      </if>
                                      <elseif>
                                        <documentation>
                                          <![CDATA[tt_xdslno exists]]>
                                        </documentation>
                                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                                        <if name="If5">
                                          <documentation>
                                            <![CDATA[deac(tt_xdslno) = ac(tt_xdslno)]]>
                                          </documentation>
                                          <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE = $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</condition>
                                          <empty name="Empty2"/>
                                          <else>
                                            <documentation>
                                              <![CDATA[NO]]>
                                            </documentation>
                                            <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                              <copy>
                                                <from>"10"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
                                              </copy>
                                              <copy>
                                                <from>"G"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
                                              </copy>
                                              <copy>
                                                <from>"1"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexHizmetNo</to>
                                              </copy>
                                            </assign>
                                          </else>
                                        </if>
                                      </elseif>
                                    </if>
                                    <if name="If_IndexHizmetNo">
                                      <documentation>
                                        <![CDATA[indexHizmetNo = 1]]>
                                      </documentation>
                                      <condition>$indexHizmetNo = "1"</condition>
                                      <scope name="ScopeProduct">
                                        <sequence name="SequenceProduct">
                                          <assign name="AssignServiceType">
                                            <copy ignoreMissingFromData="yes">
                                              <from>dvm:lookupValue("oramds:/apps/datamodel/DVM/ProductTypeMapping.dvm","MTS_VALUE",$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE,"TTS_VALUE","30")</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:serviceType</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:CUSTOMER/ns65:POSTAL_ADDRESS/ns68:POSTAL_ADDRESS_ID/ns68:CITY_ID</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$DeCityID</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:productSerialNumber</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:ACTION_DATE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:endDate</to>
                                            </copy>
                                          </assign>
                                          <if name="If_ServiceNumber">
                                            <documentation>
                                              <![CDATA[if item is DSL]]>
                                            </documentation>
                                            <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice"</condition>
                                            <assign name="AssignServiceNumber">
                                              <copy ignoreMissingFromData="yes">
                                                <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                              </copy>
                                            </assign>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[if item is MetroEthernet]]>
                                              </documentation>
                                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"</condition>
                                              <assign name="AssignServiceNumber" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[if item is IPTV]]>
                                              </documentation>
                                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_iptvservice"</condition>
                                              <assign name="AssignServiceNumber" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[if item is DTH]]>
                                              </documentation>
                                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"</condition>
                                              <assign name="AssignServiceNumber" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[if item is THK]]>
                                              </documentation>
                                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"</condition>
                                              <assign name="AssignServiceNumber" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                          </if>
                                          <if name="If_CityID">
                                            <documentation>
                                              <![CDATA[string-length(DeCityID) = 1]]>
                                            </documentation>
                                            <condition>string-length($DeCityID) = 1</condition>
                                            <assign name="AssignMudurlukID">
                                              <copy ignoreMissingFromData="yes">
                                                <from>concat("199900",$DeCityID)</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                                              </copy>
                                              <copy ignoreMissingFromData="yes">
                                                <from>concat("0",$DeCityID)</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                                              </copy>
                                            </assign>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[string-length(DeCityID) = 2]]>
                                              </documentation>
                                              <condition>string-length($DeCityID) = 2</condition>
                                              <assign name="AssignMudurlukID" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>concat("199900",$DeCityID)</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                                                </copy>
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$DeCityID</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                            <else>
                                              <documentation>
                                                <![CDATA[NO]]>
                                              </documentation>
                                              <assign name="AssignMudurlukID" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>"1999999"</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                                                </copy>
                                                <copy ignoreMissingFromData="yes">
                                                  <from>"999"</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </else>
                                          </if>
                                          <invoke name="InvokeManageProduct" bpelx:invokeAsDetail="no" partnerLink="ManageProductTTOProvEBF" portType="ns25:ManageProductTTOProvEBF" operation="process" inputVariable="InvokeManageProductInputVariable"/>
                                        </sequence>
                                      </scope>
                                      <else>
                                        <documentation>
                                          <![CDATA[NO]]>
                                        </documentation>
                                        <empty name="Empty"/>
                                      </else>
                                    </if>
                                  </sequence>
                                </scope>
                              </sequence>
                              <else>
                                <documentation>
                                  <![CDATA[NO]]>
                                </documentation>
                                <empty name="Empty"/>
                              </else>
                            </if>
                          </scope>
                        </forEach>
                        <else>
                          <documentation>
                            <![CDATA[NO]]>
                          </documentation>
                          <empty name="Empty"/>
                        </else>
                      </if>
                    </else>
                  </if>
                </scope>-->
                <scope name="ScopeDeactivatedManageATS" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <variables>
                    <variable name="MAIndexDe" type="xsd:integer"/>
                    <variable name="DeCityID" type="xsd:string"/>
                    <variable name="custType" type="xsd:string"/>
                  </variables>
                  <faultHandlers>
                    <catch faultName="bpws:selectionFailure">
                      <sequence name="SequenceSelectionFailure" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignSelectionFailure">
                          <copy>
                            <from>'112'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>"Selection failure!"</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catch>
                    <catchAll>
                      <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignCatchAll">
                          <copy>
                            <from>'111'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>'Unable to access CR_STATUS table!'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catchAll>
                  </faultHandlers>
                  <if name="If13">
                    <documentation>
                      <![CDATA[if cr2625variable = number(0)]]>
                    </documentation>
                    <condition>$cr2625variable = number(0)</condition>
                    <empty name="EmptyContinue"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <if name="If_Service">
                        <documentation>
                          <![CDATA[if service product exists]]>
                        </documentation>
                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_iptvservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) &gt; 0</condition>
                        <forEach parallel="yes" counterName="index" name="ForEachN">
                          <startCounterValue>1</startCounterValue>
                          <finalCounterValue>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS)</finalCounterValue>
                          <scope name="Scope">
                            <if name="If_ProvisionServiceCode">
                              <documentation>
                                <![CDATA[if provisionservicecode exists]]>
                              </documentation>
                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_iptvservice" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis" &gt; 0 or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice" &gt; 0 or
							  $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice" &gt; 0 or
							  ($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice" &gt; 0 and dvm:lookupValue("oramds:/apps/datamodel/DVM/ManageServicesAvailable.dvm","ServiceName","ManageProductTTOProvABCSMetro","Endpoint","1") = 1)</condition>
                              <sequence name="Sequence">
                                <scope name="ScopeDeactivatedManageProduct_ATS">
                                  <variables>
                                    <variable name="indexHizmetNo" type="xsd:integer"/>
                                  </variables>
                                  <sequence name="SequenceDeactivatedManageProduct_ATS">
                                    <assign name="TransformManageProductInput">
                                      <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                      </bpelx:annotation>
                                      <copy>
                                        <from>ora:doXSLTransformForDoc("../Transformations/ManageProductInput.xsl", $inputVariable.payload)</from>
                                        <to variable="InvokeManageProductInputVariable" part="payload"/>
                                      </copy>
                                    </assign>
                                    <assign name="AssignIndexHizmetNo">
                                      <copy>
                                        <from>"0"</from>
                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexHizmetNo</to>
                                      </copy>
                                    </assign>
                                    <if name="If_HizmetNo">
                                      <documentation>
                                        <![CDATA[tt_line_number exists]]>
                                      </documentation>
                                      <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                                      <if name="If4" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                        <documentation>
                                          <![CDATA[deac(tt_xdslno) = ac(tt_xdslno)]]>
                                        </documentation>
                                        <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE = $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</condition>
                                        <empty name="Empty2"/>
                                        <else>
                                          <documentation>
                                            <![CDATA[NO]]>
                                          </documentation>
                                          <assign name="AssignOrderType">
                                            <copy>
                                              <from>"10"</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
                                            </copy>
                                            <copy>
                                              <from>"G"</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
                                            </copy>
                                            <copy>
                                              <from>"1"</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexHizmetNo</to>
                                            </copy>
                                          </assign>
                                        </else>
                                      </if>
                                      <elseif>
                                        <documentation>
                                          <![CDATA[tt_xdslno exists]]>
                                        </documentation>
                                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                                        <if name="If5">
                                          <documentation>
                                            <![CDATA[deac(tt_xdslno) = ac(tt_xdslno)]]>
                                          </documentation>
                                          <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE = $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</condition>
                                          <empty name="Empty2"/>
                                          <else>
                                            <documentation>
                                              <![CDATA[NO]]>
                                            </documentation>
                                            <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                              <copy>
                                                <from>"10"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
                                              </copy>
                                              <copy>
                                                <from>"G"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
                                              </copy>
                                              <copy>
                                                <from>"1"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexHizmetNo</to>
                                              </copy>
                                            </assign>
                                          </else>
                                        </if>
                                      </elseif>
                                    </if>
                                    <if name="If_HizmetNo" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                      <documentation>
                                        <![CDATA[tt_iptv_subsno exists]]>
                                      </documentation>
                                      <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                                      <if name="If4" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                        <documentation>
                                          <![CDATA[deac(tt_iptv_subsno) = ac(tt_iptv_subsno)]]>
                                        </documentation>
                                        <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE = $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE</condition>
                                        <empty name="Empty2"/>
                                        <else>
                                          <documentation>
                                            <![CDATA[NO]]>
                                          </documentation>
                                          <assign name="AssignOrderType">
                                            <copy>
                                              <from>"10"</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
                                            </copy>
                                            <copy>
                                              <from>"G"</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
                                            </copy>
                                            <copy>
                                              <from>"1"</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexHizmetNo</to>
                                            </copy>
                                          </assign>
                                        </else>
                                      </if>
                                      <elseif>
                                        <documentation>
                                          <![CDATA[tt_dth_subsno exists]]>
                                        </documentation>
                                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                                        <if name="If5">
                                          <documentation>
                                            <![CDATA[deac(tt_dth_subsno) = ac(tt_dth_subsno)]]>
                                          </documentation>
                                          <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE = $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</condition>
                                          <empty name="Empty2"/>
                                          <else>
                                            <documentation>
                                              <![CDATA[NO]]>
                                            </documentation>
                                            <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                              <copy>
                                                <from>"10"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
                                              </copy>
                                              <copy>
                                                <from>"G"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
                                              </copy>
                                              <copy>
                                                <from>"1"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexHizmetNo</to>
                                              </copy>
                                            </assign>
                                          </else>
                                        </if>
                                      </elseif>
                                      <elseif>
                                        <documentation>
                                          <![CDATA[tt_thkpstnno exists]]>
                                        </documentation>
                                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                                        <if name="If5" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                          <documentation>
                                            <![CDATA[deac(tt_thkpstnno) = ac(tt_thkpstnno)]]>
                                          </documentation>
                                          <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE = $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE</condition>
                                          <empty name="Empty2"/>
                                          <else>
                                            <documentation>
                                              <![CDATA[NO]]>
                                            </documentation>
                                            <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                              <copy>
                                                <from>"10"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
                                              </copy>
                                              <copy>
                                                <from>"G"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
                                              </copy>
                                              <copy>
                                                <from>"1"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexHizmetNo</to>
                                              </copy>
                                            </assign>
                                          </else>
                                        </if>
                                      </elseif>
                                    </if>
                                    <if name="If_IndexHizmetNo">
                                      <documentation>
                                        <![CDATA[indexHizmetNo = 1]]>
                                      </documentation>
                                      <condition>$indexHizmetNo = "1"</condition>
                                      <scope name="ScopeProduct">
                                        <sequence name="SequenceProduct">
                                          <assign name="AssignServiceType">
                                            <copy ignoreMissingFromData="yes">
                                              <from>dvm:lookupValue("oramds:/apps/datamodel/DVM/ProductTypeMapping.dvm","MTS_VALUE",$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE,"TTS_VALUE","30")</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:serviceType</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:CUSTOMER/ns65:POSTAL_ADDRESS/ns68:POSTAL_ADDRESS_ID/ns68:CITY_ID</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$DeCityID</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:productSerialNumber</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:ACTION_DATE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:endDate</to>
                                            </copy>
                                          </assign>
                                          <if name="If_ServiceNumber">
                                            <documentation>
                                              <![CDATA[if item is DSL]]>
                                            </documentation>
                                            <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice"</condition>
                                            <assign name="AssignServiceNumber">
                                              <copy ignoreMissingFromData="yes">
                                                <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                              </copy>
                                            </assign>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[if item is MetroEthernet]]>
                                              </documentation>
                                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"</condition>
                                              <assign name="AssignServiceNumber" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[if item is IPTV]]>
                                              </documentation>
                                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_iptvservice"</condition>
                                              <assign name="AssignServiceNumber" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[if item is DTH]]>
                                              </documentation>
                                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"</condition>
                                              <assign name="AssignServiceNumber" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[if item is THK]]>
                                              </documentation>
                                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"</condition>
                                              <assign name="AssignServiceNumber" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                          </if>
                                          <if name="If_CityID">
                                            <documentation>
                                              <![CDATA[string-length(DeCityID) = 1]]>
                                            </documentation>
                                            <condition>string-length($DeCityID) = 1</condition>
                                            <assign name="AssignMudurlukID">
                                              <copy ignoreMissingFromData="yes">
                                                <from>concat("199900",$DeCityID)</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                                              </copy>
                                              <copy ignoreMissingFromData="yes">
                                                <from>concat("0",$DeCityID)</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                                              </copy>
                                            </assign>
                                            <elseif>
                                              <documentation>
                                                <![CDATA[string-length(DeCityID) = 2]]>
                                              </documentation>
                                              <condition>string-length($DeCityID) = 2</condition>
                                              <assign name="AssignMudurlukID" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>concat("199900",$DeCityID)</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                                                </copy>
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$DeCityID</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </elseif>
                                            <else>
                                              <documentation>
                                                <![CDATA[NO]]>
                                              </documentation>
                                              <assign name="AssignMudurlukID" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>"1999999"</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                                                </copy>
                                                <copy ignoreMissingFromData="yes">
                                                  <from>"999"</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                                                </copy>
                                              </assign>
                                            </else>
                                          </if>
                                          <sequence name="SequenceManageProductATSviaTTO">
                                            <assign name="TransformManageProductAtsViaTtoInput">
                                              <bpelx:annotation>
                                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                              </bpelx:annotation>
                                              <copy>
                                                <from>ora:doXSLTransformForDoc("../Transformations/TransformManageProductAtsViaTtoInput.xsl", $inputVariable.payload, "InvokeManageProductInputVariable.payload", $InvokeManageProductInputVariable.payload)</from>
                                                <to variable="InvokeManageProductATSviaTTOInputVariable" part="payload"/>
                                              </copy>
                                            </assign>
                                            <assign name="AssignManageProductATSviaTTO">
                                              <copy ignoreMissingFromData="yes">
                                                <from>"MTS"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductATSviaTTOInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SOURCE_SYSTEM_CODE"]/ns63:value</to>
                                              </copy>
                                              <copy ignoreMissingFromData="yes">
                                                <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:DEACTIVATION_ORDER_ITEM_ID</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductATSviaTTOInputVariable.payload/ns63:RequestInfo/ns62:TRANSACTION_ID</to>
                                              </copy>
                                              <copy ignoreMissingFromData="yes">
                                                <from>dvm:lookupValue('oramds:/apps/datamodel/DVM/MtsToAtsMapping.dvm','MtsId',$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE,'AtsId','','ElementName','ServiceType')</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeManageProductATSviaTTOInputVariable.payload/ns63:ManageProduct/ns63:serviceType</to>
                                              </copy>
                                            </assign>
                                            <invoke name="InvokeManageProductATSviaTTO" bpelx:invokeAsDetail="no" partnerLink="ManageProductATSviaTTOProvEBF" portType="ns46:ManageProductATSviaTTOProvEBF" operation="process" inputVariable="InvokeManageProductATSviaTTOInputVariable"/>
                                          </sequence>
                                        </sequence>
                                      </scope>
                                      <else>
                                        <documentation>
                                          <![CDATA[NO]]>
                                        </documentation>
                                        <empty name="Empty"/>
                                      </else>
                                    </if>
                                  </sequence>
                                </scope>
                              </sequence>
                              <else>
                                <documentation>
                                  <![CDATA[NO]]>
                                </documentation>
                                <empty name="Empty"/>
                              </else>
                            </if>
                          </scope>
                        </forEach>
                        <else>
                          <documentation>
                            <![CDATA[NO]]>
                          </documentation>
                          <empty name="Empty"/>
                        </else>
                      </if>
                    </else>
                  </if>
                </scope>
                <scope name="ScopeILERI_TARIHLI">
                  <if name="If_Dasets">
                    <documentation>
                      <![CDATA[If ILERI_TARIHLI]]>
                    </documentation>
                    <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "ILERI_TARIHLI"]) &gt; 0 and $inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "ILERI_TARIHLI"]/ns64:OrderItemCharValue = "E"</condition>
                    <empty name="EmptyContinue"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <scope name="ScopeDasets">
                        <sequence name="Sequence1">
                          <assign name="TransformInputToDasets">
                            <bpelx:annotation>
                              <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                            </bpelx:annotation>
                            <copy>
                              <from>ora:doXSLTransformForDoc("../Transformations/TransformInputToDasetsNew.xsl", $ReceiveFulfillmentEBS_ResourceCallback_InputVariable.payload)</from>
                              <to variable="InvokeDasetsInputVariable" part="payload"/>
                            </copy>
                          </assign>
                          <invoke name="InvokeDasets" bpelx:invokeAsDetail="no" partnerLink="ProcessOrderToDASESTSProvEBF" portType="ns20:ProcessOrderToDASESTSProvEBF" operation="process" inputVariable="InvokeDasetsInputVariable"/>
                        </sequence>
                      </scope>
                    </else>
                  </if>
                </scope>
                <scope name="ScopeCaptivePortal">
                  <if name="If2">
                    <documentation>
                      <![CDATA[if: CR STATUS 2167 is ON]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2167','STATUS','jdbc/CustomSOADataSource') = 'ON'</condition>
                    <empty name="EmptyNoCaptivePortal"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <if name="If_ReasonCodeForCaptivePortal">
                        <documentation>
                          <![CDATA[UPSELL or DOWNSELL or PRODUCT_TRANSFORM]]>
                        </documentation>
                        <condition>$inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'UPSELL' or $inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'DOWNSELL' or $inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'PRODUCT_TRANSFORM'</condition>
                        <sequence name="SequenceCaptivePortal">
                          <assign name="AssignProvisionCallbackToCaptivePortalInput">
                            <copy ignoreMissingFromData="yes">
                              <from>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeCaptivePortalInputVariable.payload</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeCaptivePortal" bpelx:invokeAsDetail="no" partnerLink="BundleChangeToCaptivePortalEBF" portType="ns15:BundleChangeToCaptivePortalEBF" operation="process" inputVariable="InvokeCaptivePortalInputVariable"/>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[NO]]>
                          </documentation>
                          <empty name="NoCaptivePortalAssignment"/>
                        </else>
                      </if>
                    </else>
                  </if>
                </scope>
                <scope name="ScopeInstallation">
                  <sequence name="Sequence_4">
                    <assign name="AssignFulfillmentEBS_InstallationInput">
                      <copy ignoreMissingFromData="yes">
                        <from>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFulfillmentEBS_Installation_InputVariable.payload</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeFulfillmentEBS_Installation" bpelx:invokeAsDetail="no" partnerLink="BundleChangeToInstallationEBF" portType="ns13:BundleChangeToInstallationEBF" operation="process" inputVariable="InvokeFulfillmentEBS_Installation_InputVariable"/>
                    <receive name="ReceiveFulfillmentEBS_Installation" partnerLink="BundleChangeToInstallationEBF" portType="ns13:BundleChangeToInstallationEBFCallback" operation="processResponse" variable="ReceiveFulfillmentEBS_InstallationCallback_InputVariable"/>
                  </sequence>
                </scope>
                <scope name="ScopeVAS">
                  <sequence name="Sequence_5">
                    <assign name="AssignFulfillmentEBS_VASInput">
                      <copy ignoreMissingFromData="yes">
                        <from>$ReceiveFulfillmentEBS_InstallationCallback_InputVariable.payload</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFulfillmentEBS_VAS_InputVariable.payload</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeFulfillmentEBS_VAS" bpelx:invokeAsDetail="no" partnerLink="BundleChangeToVasEBF" portType="ns14:BundleChangeToVasEBF" operation="process" inputVariable="InvokeFulfillmentEBS_VAS_InputVariable"/>
                    <receive name="ReceiveFulfillmentEBS_VAS" partnerLink="BundleChangeToVasEBF" portType="ns14:BundleChangeToVasEBFCallback" operation="processResponse" variable="ReceiveFulfillmentEBS_VASCallback_InputVariable"/>
                  </sequence>
                </scope>
                <scope name="ScopeEvent">
                  <sequence name="Sequence">
                    <assign name="TransformVasToEvent">
                      <bpelx:annotation>
                        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                      </bpelx:annotation>
                      <copy>
                        <from>ora:doXSLTransformForDoc("../Transformations/TransformAdslNoChangeEvent.xsl", $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload)</from>
                        <to variable="InvokeAdslNoChangeEventInputVariable" part="payload"/>
                      </copy>
                    </assign>
                    <invoke name="InvokeAdslNoChangeEventEBF" bpelx:invokeAsDetail="no" partnerLink="AdslNoChangeEventEBF" portType="ns85:AdslNoChangeEventEBF" operation="process" inputVariable="InvokeAdslNoChangeEventInputVariable"/>
                  </sequence>
                </scope>
                <scope name="ScopeTekSifre">
                  <faultHandlers>
                    <catch faultName="bpws:selectionFailure">
                      <sequence name="SequenceSelectionFailure" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignSelectionFailure">
                          <copy>
                            <from>'112'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>"Selection failure!"</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catch>
                    <catchAll>
                      <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignCatchAll">
                          <copy>
                            <from>'111'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>"Unable to access CR_STATUS table!"</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catchAll>
                  </faultHandlers>
                  <if name="If_CR1987">
                    <documentation>
                      <![CDATA[Cr (2351) = OFF]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2351','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="DoNothing"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <if name="If_TekSifre">
                        <documentation>
                          <![CDATA[SSO_PASS_GSM exists]]>
                        </documentation>
                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "SSO_PASS_GSM"]) &gt; 0</condition>
                        <sequence name="SequenceTekSifre">
                          <assign name="TransformCreateUserForUniquePasswordByGsmInput">
                            <bpelx:annotation>
                              <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                            </bpelx:annotation>
                            <copy>
                              <from>ora:doXSLTransformForDoc("../Transformations/TransformCreateUserForUniquePasswordByGsmInput.xsl", $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload)</from>
                              <to variable="InvokeCreateUserForUniquePasswordByGsmInputVariable" part="payload"/>
                            </copy>
                          </assign>
                          <extensionActivity>
                            <bpelx:exec name="Java_Embedding">
                              <![CDATA[java.util.Random rdRandom=new java.util.Random();        
int sayi=rdRandom.nextInt(800000);        
sayi=sayi+100000;        
setVariableData("password",sayi);]]>
                            </bpelx:exec>
                          </extensionActivity>
                          <assign name="AssignPassword">
                            <copy ignoreMissingFromData="yes">
                              <from>concat("Az",$password)</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeCreateUserForUniquePasswordByGsmInputVariable.payload/ns81:customer/ns81:password</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeCreateUserForUniquePasswordByGsm" bpelx:invokeAsDetail="no" partnerLink="CreateUserForUniquePasswordAsyncByGsmNoSSOProvEBF" portType="ns41:CreateUserForUniquePasswordAsyncByGsmNoSSOProvEBF" operation="process" inputVariable="InvokeCreateUserForUniquePasswordByGsmInputVariable"/>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[NO]]>
                          </documentation>
                          <empty name="DoNothing"/>
                        </else>
                      </if>
                    </else>
                  </if>
                </scope>
                <scope name="ScopeNotification">
                  <sequence>
                    <assign name="AssignVASToNotification">
                      <copy ignoreMissingFromData="yes">
                        <from>$ReceiveFulfillmentEBS_VASCallback_InputVariable.payload</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeNotificationEBSProcessChangeOrderInputVariable.payload</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeNotificationEBSProcessChangeOrder" bpelx:invokeAsDetail="no" partnerLink="NotificationEBF" portType="ns19:NotificationEBF" operation="processChange" inputVariable="InvokeNotificationEBSProcessChangeOrderInputVariable"/>
                  </sequence>
                </scope>
                <scope name="ScopeNetdisk">
                  <if name="If15">
                    <documentation>
                      <![CDATA['tt_bckup' exists]]>
                    </documentation>
                    <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = 'tt_bckup'</condition>
                    <if name="If41">
                      <documentation>
                        <![CDATA[Cr3241Status]]>
                      </documentation>
                      <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','3241','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                      <if name="If42">
                        <documentation>
                          <![CDATA[CAMPAIGN_CHANGE or PRODUCT_TRANSFORM]]>
                        </documentation>
                        <condition>$inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'PRODUCT_TRANSFORM' or $inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'CAMPAIGN_CHANGE'</condition>
                        <sequence name="Sequence12">
                          <assign name="AssignChangeAdslNoBundleChangeOrder">
                            <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeChangeAdslNoBundleChangeOrderInputVariable.payload</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeChangeAdslNoBundleChangeOrder" partnerLink="ChangeAdslNoBundleChangeOrderNETDISKProvABCS" portType="ns6:ChangeAdslNoBundleChangeOrderNETDISKProvABCS" operation="process" inputVariable="InvokeChangeAdslNoBundleChangeOrderInputVariable" outputVariable="InvokeChangeAdslNoBundleChangeOrderOutputVariable" bpelx:invokeAsDetail="no"/>
                        </sequence>
                        <elseif>
                          <documentation>
                            <![CDATA[UPSELL or DOWNSELL]]>
                          </documentation>
                          <condition>$inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'UPSELL' or$inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'DOWNSELL'</condition>
                          <sequence name="Sequence12" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <assign name="AssignChangeAdslNoBundleChangeOrder">
                              <copy ignoreMissingFromData="yes">
                                <from>$inputVariable.payload</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeChangeAdslNoBundleChangeOrderInputVariable.payload</to>
                              </copy>
                            </assign>
                            <invoke name="InvokeChangeAdslNoBundleChangeOrder" partnerLink="ChangeAdslNoBundleChangeOrderNETDISKProvABCS" portType="ns6:ChangeAdslNoBundleChangeOrderNETDISKProvABCS" operation="process" inputVariable="InvokeChangePacket_process_InputVariable" outputVariable="InvokeChangePacket_process_OutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                          </sequence>
                        </elseif>
                      </if>
                      <else>
                        <documentation>
                          <![CDATA[NO]]>
                        </documentation>
                        <if name="If_Cr3241">
                          <documentation>
                            <![CDATA[UPSELL]]>
                          </documentation>
                          <condition>$inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'UPSELL'</condition>
                          <sequence name="SequenceInvokeDIGITALDEPO">
                            <assign name="TransformChangePackageInput">
                              <bpelx:annotation>
                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:doXSLTransformForDoc("../Transformations/TransformChangePackageInput.xsl", $inputVariable.payload, "ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                                <to variable="InvokeChangePackageInputVariable" part="payload"/>
                              </copy>
                            </assign>
                            <invoke name="InvokeChangePackage" bpelx:invokeAsDetail="no" partnerLink="ChangePackageDIGITALDEPOProvABCS" portType="ns56:ChangePackageDIGITALDEPOProvABCS" operation="process" inputVariable="InvokeChangePackageInputVariable" outputVariable="InvokeChangePackageOutputVariable"/>
                            <if name="If_ChangePackageResponse">
                              <documentation>
                                <![CDATA[if : Success]]>
                              </documentation>
                              <condition>$InvokeChangePackageOutputVariable.payload/ns87:RequestResponse/ns62:RETURN_CODE = '100'</condition>
                              <empty name="Success"/>
                              <else>
                                <documentation>
                                  <![CDATA[NO]]>
                                </documentation>
                                <sequence name="SequenceFaultHandler" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <assign name="AssignFaultHandlerInput">
                                    <copy ignoreMissingFromData="yes">
                                      <from>$InvokeChangePackageOutputVariable.payload/ns87:RequestResponse/ns62:RETURN_CODE</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                    </copy>
                                    <copy ignoreMissingFromData="yes">
                                      <from>$InvokeChangePackageOutputVariable.payload/ns87:RequestResponse/ns62:RETURN_MESSAGE</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                    </copy>
                                  </assign>
                                  <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                </sequence>
                              </else>
                            </if>
                          </sequence>
                          <elseif>
                            <documentation>
                              <![CDATA[CAMPAIGN_CHANGE or PRODUCT_TRANSFORM]]>
                            </documentation>
                            <condition>$inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'PRODUCT_TRANSFORM' or $inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'CAMPAIGN_CHANGE'</condition>
                            <sequence name="SequenceInvokeDIGITALDEPO" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <assign name="TransformChangeXdslNoInput">
                                <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                </bpelx:annotation>
                                <copy>
                                  <from>ora:doXSLTransformForDoc("../Transformations/TransformChangeXdslNoInput.xsl", $inputVariable.payload, "ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                                  <to variable="InvokeChangeXdslNoInputVariable" part="payload"/>
                                </copy>
                              </assign>
                              <invoke name="InvokeChangeXdslNo" partnerLink="ChangeXdslNoDIGITALDEPOProvABCS" portType="ns55:ChangeXdslNoDIGITALDEPOProvABCS" operation="process" inputVariable="InvokeChangeXdslNoInputVariable" outputVariable="InvokeChangeXdslNoOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                              <if name="If_ChangePackageResponse">
                                <documentation>
                                  <![CDATA[if : Success]]>
                                </documentation>
                                <condition>$InvokeChangeXdslNoOutputVariable.payload/ns87:RequestResponse/ns62:RETURN_CODE = '100'</condition>
                                <empty name="Success"/>
                                <else>
                                  <documentation>
                                    <![CDATA[NO]]>
                                  </documentation>
                                  <sequence name="SequenceFaultHandler" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                    <assign name="AssignFaultHandlerInput">
                                      <copy ignoreMissingFromData="yes">
                                        <from>$InvokeChangeXdslNoOutputVariable.payload/ns87:RequestResponse/ns62:RETURN_CODE</from>
                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                      </copy>
                                      <copy ignoreMissingFromData="yes">
                                        <from>$InvokeChangeXdslNoOutputVariable.payload/ns87:RequestResponse/ns62:RETURN_MESSAGE</from>
                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                      </copy>
                                    </assign>
                                    <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                  </sequence>
                                </else>
                              </if>
                            </sequence>
                          </elseif>
                        </if>
                      </else>
                    </if>
                  </if>
                </scope>
                <scope name="Scope_CR1781_DTH">
                  <if name="If_CR_1781">
                    <documentation>
                      <![CDATA[CR 1781 is OK]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','1781','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="Empty"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <if name="If_REASON">
                        <documentation>
                          <![CDATA[IF : SUCCESS ACTION_REASON_CODE]]>
                        </documentation>
                        <condition>$inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'DOWNSELL' or $inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'UPSELL'</condition>
                        <if name="If27">
                          <documentation>
                            <![CDATA[IF :PROVISION_SERVICE_CODE= tt_dthservis]]>
                          </documentation>
                          <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = 'tt_dthservis'</condition>
                          <if name="If_vas_prov">
                            <documentation>
                              <![CDATA[IF equal DEACTIVATED_ORDERS and ACTIVATED_ORDERS in tt_vas_prov]]>
                            </documentation>
                            <condition>xp20:compare(string($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"] and $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_vas_prov"]/ns73:PRODUCT_CHAR_VALUE) , string($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"] and $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_vas_prov"]/ns73:PRODUCT_CHAR_VALUE)) = 0</condition>
                            <scope name="ScopeTivibuTicariCommit">
                              <if name="If_TivibuTicariType">
                                <documentation>
                                  <![CDATA[OrderItemCharName = tt_paymenttype]]>
                                </documentation>
                                <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "tt_paymenttype"]) &gt; 0</condition>
                                <sequence name="SequenceAdjustInvoice">
                                  <assign name="TransformAdjustInvoiceInput">
                                    <bpelx:annotation>
                                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                    </bpelx:annotation>
                                    <copy>
                                      <from>ora:doXSLTransformForDoc("../Transformations/TransformAdjustInvoiceInput.xsl", $inputVariable.payload)</from>
                                      <to variable="InvokeAdjustInvoiceInputVariable" part="payload"/>
                                    </copy>
                                  </assign>
                                  <assign name="AssignTTSCommit">
                                    <copy>
                                      <from>"10"</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:faturaDetayDizi/ns89:item/ns89:deger</to>
                                    </copy>
                                    <copy>
                                      <from>"1"</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:tutarDuzeltmeyleKapat</to>
                                    </copy>
                                    <copy>
                                      <from>"1"</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:ftdSebebi</to>
                                    </copy>
                                  </assign>
                                  <invoke name="InvokeAdjustInvoice" bpelx:invokeAsDetail="no" partnerLink="AdjustInvoiceTTOProvABCS" portType="ns37:AdjustInvoiceTTOProvABCS" operation="process" inputVariable="InvokeAdjustInvoiceInputVariable" outputVariable="InvokeAdjustInvoiceOutputVariable"/>
                                </sequence>
                                <else>
                                  <documentation>
                                    <![CDATA[NO]]>
                                  </documentation>
                                  <empty name="DoNothing"/>
                                </else>
                              </if>
                            </scope>
                            <else>
                              <documentation>
                                <![CDATA[NO]]>
                              </documentation>
                              <sequence name="SequenceIRDETOorNOT">
                                <if name="If_IRDETO">
                                  <documentation>
                                    <![CDATA[IRDETO]]>
                                  </documentation>
                                  <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE='tt_dthservis']/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME='tt_dth_device_owner']/ns73:PRODUCT_CHAR_VALUE = 'vestel'</condition>
                                  <sequence xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                    <scope name="ScopeInquireProduct">
                                      <sequence name="Sequence">
                                        <assign name="AssignInqProduct">
                                          <copy>
                                            <from>$inputVariable.payload/ns63:RequestInfo/ns62:TRANSACTION_ID</from>
                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:RequestInfo/ns62:TRANSACTION_ID</to>
                                          </copy>
                                          <copy>
                                            <from>'tt_irdetotv'</from>
                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pResourceSpecKey/ns82:ProvisionResourceCode</to>
                                          </copy>
                                          <copy>
                                            <from>'tt_dth_subsno'</from>
                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:ProductCharName</to>
                                          </copy>
                                          <copy ignoreMissingFromData="yes">
                                            <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:ProductCharValue</to>
                                          </copy>
                                          <copy>
                                            <from>'0'</from>
                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:IsCancelProductChar</to>
                                          </copy>
                                        </assign>
                                        <invoke name="InvokeInqProduct" bpelx:invokeAsDetail="no" partnerLink="InquireProductMTSProvABCS" portType="ns29:InquireProductMTSProvABCS" operation="process" inputVariable="InvokeInqProductInputVariable" outputVariable="InvokeInqProductOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                        <if name="If_Success">
                                          <documentation>
                                            <![CDATA[Success]]>
                                          </documentation>
                                          <condition>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_CODE = '100'</condition>
                                          <empty name="Empty"/>
                                          <else>
                                            <documentation>
                                              <![CDATA[NO]]>
                                            </documentation>
                                            <sequence name="SequenceFaultHandler" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                              <assign name="AssignInqProductFaultHandler">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_CODE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                                </copy>
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_MESSAGE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                                </copy>
                                              </assign>
                                              <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                            </sequence>
                                          </else>
                                        </if>
                                      </sequence>
                                    </scope>
                                    <scope name="ScopeOverwriteEntitlements" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                      <sequence name="Sequence">
                                        <assign name="AssignOverwriteEntitlement" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                          <copy>
                                            <from>$inputVariable.payload/ns63:RequestInfo/ns62:TRANSACTION_ID</from>
                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$OverwriteEntitlementsCAProvABCSInput.payload/ns90:pReqRes/ns62:TRANSACTION_ID</to>
                                          </copy>
                                          <copy>
                                            <from>'SMS001'</from>
                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$OverwriteEntitlementsCAProvABCSInput.payload/ns90:pOverwriteEntitlements/ns71:operatorTag</to>
                                          </copy>
                                          <copy>
                                            <from>substring(string($InvokeInqProductOutputVariable.payload/ns73:Product/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME='tt_cdsnno']/ns73:PRODUCT_CHAR_VALUE),1,10)</from>
                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$OverwriteEntitlementsCAProvABCSInput.payload/ns90:pOverwriteEntitlements/ns71:CDSN</to>
                                          </copy>
                                        </assign>
                                        <invoke name="OverwriteEntitlementsCAProvABCS" bpelx:invokeAsDetail="no" partnerLink="OverwriteEntitlementsCAProvABCS" portType="ns99:OverwriteEntitlementsCAProvABCS" operation="process" inputVariable="OverwriteEntitlementsCAProvABCSInput" outputVariable="OverwriteEntitlementsCAProvABCSOutput"/>
                                        <if name="If_Success">
                                          <documentation>
                                            <![CDATA[Success]]>
                                          </documentation>
                                          <condition>$InvokeDeleteAllEntOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE = '100'</condition>
                                          <empty name="EmptySuccess"/>
                                          <else>
                                            <documentation>
                                              <![CDATA[Fault]]>
                                            </documentation>
                                            <sequence name="SequenceFaultHandler" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                              <assign name="AssignDeleteAllEntFaultHandler">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$OverwriteEntitlementsCAProvABCSOutput.payload/ns90:pReqRes/ns62:RETURN_CODE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                                </copy>
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$OverwriteEntitlementsCAProvABCSOutput.payload/ns90:pReqRes/ns62:RETURN_MESSAGE</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                                </copy>
                                              </assign>
                                              <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                            </sequence>
                                          </else>
                                        </if>
                                      </sequence>
                                    </scope>
                                  </sequence>
                                  <else>
                                    <documentation>
                                      <![CDATA[NOT_IRDETO]]>
                                    </documentation>
                                    <sequence>
                                      <scope name="ScopeInqProduct">
                                        <sequence name="Sequence26">
                                          <assign name="AssignInqProduct">
                                            <copy>
                                              <from>'tt_dthkart_pr'</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pResourceSpecKey/ns82:ProvisionResourceCode</to>
                                            </copy>
                                            <copy>
                                              <from>'tt_dth_subsno'</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:ProductCharName</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"] and $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:ProductCharValue</to>
                                            </copy>
                                            <copy>
                                              <from>'0'</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:IsCancelProductChar</to>
                                            </copy>
                                          </assign>
                                          <invoke name="InvokeInqProduct" bpelx:invokeAsDetail="no" partnerLink="InquireProductMTSProvABCS" portType="ns29:InquireProductMTSProvABCS" operation="process" inputVariable="InvokeInqProductInputVariable" outputVariable="InvokeInqProductOutputVariable"/>
                                          <if name="If26">
                                            <documentation>
                                              <![CDATA[If :SUCCESS InqProduct]]>
                                            </documentation>
                                            <condition>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_CODE = '100'</condition>
                                            <empty name="Empty"/>
                                            <else>
                                              <documentation>
                                                <![CDATA[NO]]>
                                              </documentation>
                                              <sequence name="Sequence27" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <assign name="AssignInqProductFaultHandler">
                                                  <copy ignoreMissingFromData="yes">
                                                    <from>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_CODE</from>
                                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                                  </copy>
                                                  <copy ignoreMissingFromData="yes">
                                                    <from>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_MESSAGE</from>
                                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                                  </copy>
                                                </assign>
                                                <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                              </sequence>
                                            </else>
                                          </if>
                                        </sequence>
                                      </scope>
                                      <scope name="ScopeDeleteAllEnt" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                        <sequence name="Sequence26">
                                          <assign name="AssignDeleteAllEnt">
                                            <copy>
                                              <from>'tt_dthkart_pr'</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pResourceSpecKey/ns82:ProvisionResourceCode</to>
                                            </copy>
                                            <copy>
                                              <from>'tt_dth_subsno'</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:ProductCharName</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"] and $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:ProductCharValue</to>
                                            </copy>
                                            <copy>
                                              <from>'0'</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:IsCancelProductChar</to>
                                            </copy>
                                          </assign>
                                          <invoke name="InvokeDeleteAllEnt" partnerLink="DeleteAllEntitlementsCAProvABCS" portType="ns28:DeleteAllEntitlementsCAProvABCS" operation="process" inputVariable="InvokeDeleteAllEntInputVariable" outputVariable="InvokeDeleteAllEntOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                                          <if name="If23">
                                            <documentation>
                                              <![CDATA[IF : SUCCESS DeletAllEnt]]>
                                            </documentation>
                                            <condition>$InvokeDeleteAllEntOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE = '100'</condition>
                                            <empty name="EmptySuccess"/>
                                            <else>
                                              <documentation>
                                                <![CDATA[NO]]>
                                              </documentation>
                                              <sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <assign name="AssignDeleteAllEntFaultHandler">
                                                  <copy ignoreMissingFromData="yes">
                                                    <from>$InvokeDeleteAllEntOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE</from>
                                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                                  </copy>
                                                  <copy ignoreMissingFromData="yes">
                                                    <from>$InvokeDeleteAllEntOutputVariable.payload/ns90:pReqRes/ns62:RETURN_MESSAGE</from>
                                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                                  </copy>
                                                </assign>
                                                <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                              </sequence>
                                            </else>
                                          </if>
                                        </sequence>
                                      </scope>
                                      <scope name="ScopeInqProduct2" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                        <sequence name="Sequence26">
                                          <assign name="AssignInqProduct">
                                            <copy>
                                              <from>'tt_dthkart_pr'</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pResourceSpecKey/ns82:ProvisionResourceCode</to>
                                            </copy>
                                            <copy>
                                              <from>'tt_dth_subsno'</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:ProductCharName</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"] and $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:ProductCharValue</to>
                                            </copy>
                                            <copy>
                                              <from>'0'</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeInqProductInputVariable.payload/ns73:pDependentProductKey/ns73:PRODUCT_CHAR/ns73:IsCancelProductChar</to>
                                            </copy>
                                          </assign>
                                          <invoke name="InvokeInqProduct" bpelx:invokeAsDetail="no" partnerLink="InquireProductMTSProvABCS" portType="ns29:InquireProductMTSProvABCS" operation="process" inputVariable="InvokeInqProductInputVariable" outputVariable="InvokeInqProductOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                          <if name="If26">
                                            <documentation>
                                              <![CDATA[If :SUCCESS InqProduct]]>
                                            </documentation>
                                            <condition>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_CODE = '100'</condition>
                                            <empty name="Empty"/>
                                            <else>
                                              <documentation>
                                                <![CDATA[NO]]>
                                              </documentation>
                                              <sequence name="Sequence27" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <assign name="AssignInqProductFaultHandler">
                                                  <copy ignoreMissingFromData="yes">
                                                    <from>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_CODE</from>
                                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                                  </copy>
                                                  <copy ignoreMissingFromData="yes">
                                                    <from>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_MESSAGE</from>
                                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                                  </copy>
                                                </assign>
                                                <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                              </sequence>
                                            </else>
                                          </if>
                                        </sequence>
                                      </scope>
                                      <scope name="ScopeCreateEnt">
                                        <sequence name="Sequence">
                                          <assign name="AssignCreateEnt">
                                            <copy ignoreMissingFromData="yes">
                                              <from>$InvokeInqProductOutputVariable.payload/ns73:Product[1]/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_cpe_serial"]/ns73:PRODUCT_CHAR_VALUE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeCreateEntInputVariable.payload/ns90:pDeleteEntitlements/ns71:serialNumber</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_vas_prov"]/ns73:PRODUCT_CHAR_VALUE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeCreateEntInputVariable.payload/ns90:pDeleteEntitlements/ns71:productTagList/ns71:string</to>
                                            </copy>
                                          </assign>
                                          <invoke name="InvokeCreateEnt" bpelx:invokeAsDetail="no" partnerLink="CreateEntitlementsCAProvABCS" portType="ns27:CreateEntitlementsCAProvABCS" operation="process" inputVariable="InvokeCreateEntInputVariable" outputVariable="InvokeCreateEntOutputVariable"/>
                                          <if name="If24">
                                            <documentation>
                                              <![CDATA[IF : SUCCESS CreateEnt]]>
                                            </documentation>
                                            <condition>$InvokeCreateEntOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE = '100'</condition>
                                            <scope name="ScopeTivibuTicariCommit" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                              <if name="If_TivibuTicariType">
                                                <documentation>
                                                  <![CDATA[OrderItemCharName = tt_paymenttype]]>
                                                </documentation>
                                                <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "tt_paymenttype"]) &gt; 0</condition>
                                                <sequence name="SequenceAdjustInvoice">
                                                  <assign name="TransformAdjustInvoiceInput">
                                                    <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                                    </bpelx:annotation>
                                                    <copy>
                                                      <from>ora:doXSLTransformForDoc("../Transformations/TransformAdjustInvoiceInput.xsl", $inputVariable.payload)</from>
                                                      <to variable="InvokeAdjustInvoiceInputVariable" part="payload"/>
                                                    </copy>
                                                  </assign>
                                                  <assign name="AssignTTSCommit">
                                                    <copy>
                                                      <from>"10"</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:faturaDetayDizi/ns89:item/ns89:deger</to>
                                                    </copy>
                                                    <copy>
                                                      <from>"1"</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:tutarDuzeltmeyleKapat</to>
                                                    </copy>
                                                    <copy>
                                                      <from>"1"</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:ftdSebebi</to>
                                                    </copy>
                                                  </assign>
                                                  <invoke name="InvokeAdjustInvoice" bpelx:invokeAsDetail="no" partnerLink="AdjustInvoiceTTOProvABCS" portType="ns37:AdjustInvoiceTTOProvABCS" operation="process" inputVariable="InvokeAdjustInvoiceInputVariable" outputVariable="InvokeAdjustInvoiceOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                                </sequence>
                                                <else>
                                                  <documentation>
                                                    <![CDATA[NO]]>
                                                  </documentation>
                                                  <empty name="DoNothing"/>
                                                </else>
                                              </if>
                                            </scope>
                                            <else>
                                              <documentation>
                                                <![CDATA[NO]]>
                                              </documentation>
                                              <sequence name="Sequence">
                                                <scope name="ScopeTivibuTicari">
                                                  <if name="If_TivibuTicariType">
                                                    <documentation>
                                                      <![CDATA[OrderItemCharName = tt_paymenttype]]>
                                                    </documentation>
                                                    <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "tt_paymenttype"]) &gt; 0</condition>
                                                    <sequence name="SequenceTivibuTicariRollback">
                                                      <sequence name="SequenceAdjustInvoice">
                                                        <assign name="TransformAdjustInvoiceInput" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                          <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                                            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                                          </bpelx:annotation>
                                                          <copy>
                                                            <from>ora:doXSLTransformForDoc("../Transformations/TransformAdjustInvoiceInput.xsl", $inputVariable.payload)</from>
                                                            <to variable="InvokeAdjustInvoiceInputVariable" part="payload"/>
                                                          </copy>
                                                        </assign>
                                                        <assign name="AssignTTSRollback" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                          <copy>
                                                            <from>"8"</from>
                                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:faturaDetayDizi/ns89:item/ns89:deger</to>
                                                          </copy>
                                                          <copy>
                                                            <from>"1"</from>
                                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:tutarDuzeltmeyleKapat</to>
                                                          </copy>
                                                          <copy>
                                                            <from>"1"</from>
                                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:ftdSebebi</to>
                                                          </copy>
                                                        </assign>
                                                        <invoke name="InvokeAdjustInvoice" bpelx:invokeAsDetail="no" partnerLink="AdjustInvoiceTTOProvABCS" portType="ns37:AdjustInvoiceTTOProvABCS" operation="process" inputVariable="InvokeAdjustInvoiceInputVariable" outputVariable="InvokeAdjustInvoiceOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"/>
                                                      </sequence>
                                                      <sequence name="SequenceCreditCard">
                                                        <if name="If_TivibuTicariCreditCard">
                                                          <documentation>
                                                            <![CDATA[tt_payment = tt_creditcard]]>
                                                          </documentation>
                                                          <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "tt_paymenttype"]/ns64:OrderItemCharValue = "tt_creditcard"</condition>
                                                          <scope name="ScopeSaleCancelWithToken">
                                                            <sequence name="SequenceSaleCancelWithToken">
                                                              <assign name="TransformSaleCancelWithTokenInput">
                                                                <bpelx:annotation>
                                                                  <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                                                </bpelx:annotation>
                                                                <copy>
                                                                  <from>ora:doXSLTransformForDoc("../Transformations/TransformSaleCancelWithTokenInput.xsl", $inputVariable.payload)</from>
                                                                  <to variable="InvokeSaleCancelWithTokenInputVariable" part="payload"/>
                                                                </copy>
                                                              </assign>
                                                              <invoke name="InvokeSaleCancelWithToken" bpelx:invokeAsDetail="no" partnerLink="ProcessWithTokenPGWProvABCS" portType="ns38:ProcessWithTokenPGWProvABCS" operation="process" inputVariable="InvokeSaleCancelWithTokenInputVariable" outputVariable="InvokeSaleCancelWithTokenOutputVariable"/>
                                                              <if name="If_SuccessOrNot">
                                                                <documentation>
                                                                  <![CDATA[success]]>
                                                                </documentation>
                                                                <condition>$InvokeSaleCancelWithTokenOutputVariable.payload/ns71:pReqRes/ns62:RETURN_CODE = "0" or $InvokeSaleCancelWithTokenOutputVariable.payload/ns71:pReqRes/ns62:RETURN_CODE = "760006"</condition>
                                                                <empty name="DoNothing"/>
                                                                <else>
                                                                  <documentation>
                                                                    <![CDATA[NO]]>
                                                                  </documentation>
                                                                  <sequence name="SequenceFaultHandler" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                                    <assign name="AssignFaultHandler">
                                                                      <copy ignoreMissingFromData="yes">
                                                                        <from>$InvokeSaleCancelWithTokenOutputVariable.payload/ns71:pReqRes/ns62:RETURN_CODE</from>
                                                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                                                      </copy>
                                                                      <copy ignoreMissingFromData="yes">
                                                                        <from>$InvokeSaleCancelWithTokenOutputVariable.payload/ns71:pReqRes/ns62:RETURN_MESSAGE</from>
                                                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                                                      </copy>
                                                                    </assign>
                                                                    <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                                                  </sequence>
                                                                </else>
                                                              </if>
                                                            </sequence>
                                                          </scope>
                                                          <else>
                                                            <documentation>
                                                              <![CDATA[NO]]>
                                                            </documentation>
                                                            <empty name="DoNothing"/>
                                                          </else>
                                                        </if>
                                                      </sequence>
                                                    </sequence>
                                                    <else>
                                                      <documentation>
                                                        <![CDATA[NO]]>
                                                      </documentation>
                                                      <empty name="DoNothing"/>
                                                    </else>
                                                  </if>
                                                </scope>
                                                <assign name="AssignCreateEntFaulttHandler">
                                                  <copy ignoreMissingFromData="yes">
                                                    <from>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_CODE</from>
                                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                                  </copy>
                                                  <copy ignoreMissingFromData="yes">
                                                    <from>$InvokeInqProductOutputVariable.payload/ns73:ResponseType/ns62:RETURN_MESSAGE</from>
                                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                                  </copy>
                                                </assign>
                                                <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                              </sequence>
                                            </else>
                                          </if>
                                        </sequence>
                                      </scope>
                                    </sequence>
                                  </else>
                                </if>
                              </sequence>
                            </else>
                          </if>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <empty name="Empty"/>
                          </else>
                        </if>
                        <else>
                          <documentation>
                            <![CDATA[NO]]>
                          </documentation>
                          <empty name="Empty"/>
                        </else>
                      </if>
                    </else>
                  </if>
                </scope>
                <scope name="Scope_2557">
                  <if name="If_CRSTATUS">
                    <documentation>
                      <![CDATA[CrStatus (2557) = OFF]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2557','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="CR_STATUS_OFF"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <if name="If43">
                        <documentation>
                          <![CDATA[If: tt_thkservice exist only Activation]]>
                        </documentation>
                        <condition>(count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) = 0 and count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) &gt; 0) or (count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) = 0 and count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) &gt; 0)</condition>
                        <scope name="ScopeOnlyPortIn">
                          <sequence name="SequenceOnlyPortIn">
                            <assign name="TransformProcessNumberTransferOnlyPortInInput">
                              <bpelx:annotation>
                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:doXSLTransformForDoc("../Transformations/TransformProcessNumberTransferPortInput.xsl", $inputVariable.payload, "ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                                <to variable="ProcessNumberTransferInputVariable" part="payload"/>
                              </copy>
                            </assign>
                            <invoke name="ProcessNumberTransferOnlyPortIn" bpelx:invokeAsDetail="no" partnerLink="ProcessNumberTransferTTNETSISProvEBF" portType="ns43:ProcessNumberTransferTTNETSISProvEBF" operation="process" inputVariable="ProcessNumberTransferInputVariable"/>
                          </sequence>
                        </scope>
                        <elseif>
                          <documentation>
                            <![CDATA[If: tt_thkservice exist only Deactivation]]>
                          </documentation>
                          <condition>(count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) &gt; 0 and count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) = 0) or 
						  (count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) &gt; 0 and count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) = 0)</condition>
                          <scope name="ScopeOnlyPortOut" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <sequence name="SequenceOnlyPortOut">
                              <assign name="TransformProcessNumberTransferOnlyPortOutInput">
                                <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                </bpelx:annotation>
                                <copy>
                                  <from>ora:doXSLTransformForDoc("../Transformations/TransformProcessNumberTransferPortOut.xsl", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                                  <to variable="ProcessNumberTransferInputVariable" part="payload"/>
                                </copy>
                              </assign>
                              <invoke name="ProcessNumberTransferPortOut" bpelx:invokeAsDetail="no" partnerLink="ProcessNumberTransferTTNETSISProvEBF" portType="ns43:ProcessNumberTransferTTNETSISProvEBF" operation="process" inputVariable="ProcessNumberTransferInputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                            </sequence>
                          </scope>
                        </elseif>
                        <elseif>
                          <documentation>
                            <![CDATA[If: tt_thkservice exist on both Deactivation and Activation]]>
                          </documentation>
                          <condition>(count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) &gt; 0 and count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) &gt; 0) or 
						  (count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) &gt; 0 and count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) &gt; 0)</condition>
                          <if name="If_ThkPstnNo">
                            <documentation>
                              <![CDATA[If: tt_thkpstnno is not equal on Activation and Deactivation]]>
                            </documentation>
                            <condition>($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"] and $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE != $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"] and $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE) or ($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"] and $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE != $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"] and $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE)
							</condition>
                            <sequence>
                              <scope name="ScopePortOut" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <sequence name="SequencePortOut">
                                  <assign name="TransformProcessNumberTransferPortOutInput">
                                    <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                    </bpelx:annotation>
                                    <copy>
                                      <from>ora:doXSLTransformForDoc("../Transformations/TransformProcessNumberTransferPortOut.xsl", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                                      <to variable="ProcessNumberTransferInputVariable" part="payload"/>
                                    </copy>
                                  </assign>
                                  <invoke name="ProcessNumberTransferPortOut" bpelx:invokeAsDetail="no" partnerLink="ProcessNumberTransferTTNETSISProvEBF" portType="ns43:ProcessNumberTransferTTNETSISProvEBF" operation="process" inputVariable="ProcessNumberTransferInputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                  <receive name="ReceiveProcessNumberTransferPortOut" partnerLink="ProcessNumberTransferTTNETSISProvEBF" portType="ns43:ProcessNumberTransferTTNETSISProvEBFCallback" operation="processResponse" variable="ReceiveProcessNumberTransferVariable"/>
                                </sequence>
                              </scope>
                              <scope name="ScopePortIn" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <sequence name="SequencePortIn">
                                  <assign name="TransformProcessNumberTransferPortInInput">
                                    <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                    </bpelx:annotation>
                                    <copy>
                                      <from>ora:doXSLTransformForDoc("../Transformations/TransformProcessNumberTransferPortInput.xsl", $inputVariable.payload, "ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                                      <to variable="ProcessNumberTransferInputVariable" part="payload"/>
                                    </copy>
                                  </assign>
                                  <invoke name="ProcessNumberTransferPortIn" bpelx:invokeAsDetail="no" partnerLink="ProcessNumberTransferTTNETSISProvEBF" portType="ns43:ProcessNumberTransferTTNETSISProvEBF" operation="process" inputVariable="ProcessNumberTransferInputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                </sequence>
                              </scope>
                            </sequence>
                            <else>
                              <documentation>
                                <![CDATA[NO]]>
                              </documentation>
                              <empty name="DoNothing"/>
                            </else>
                          </if>
                        </elseif>
                        <else>
                          <documentation>
                            <![CDATA[NO]]>
                          </documentation>
                          <empty name="DoNothing"/>
                        </else>
                      </if>
                    </else>
                  </if>
                </scope>
                <scope name="Scope_CR_3134" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <variables>
                    <variable name="MAIndexDe" type="xsd:integer"/>
                    <variable name="DeCityID" type="xsd:string"/>
                    <variable name="custType" type="xsd:string"/>
                  </variables>
                  <if name="If_CR3134_Status_Control">
                    <documentation>
                      <![CDATA[if CR 3134 OFF]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','3134','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="EmptyContinue"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <sequence name="SequenceProcessCr3134">
                        <if name="if_ProvisionServiceCode_Control">
                          <documentation>
                            <![CDATA[if ProvisionServiceCode = tt_ng_package To Delete]]>
                          </documentation>
                          <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE  = "tt_ng_package"]) &gt; 0</condition>
                          <forEach parallel="yes" counterName="Delete_NGindex" name="ForEachN__ExtPackageDelete">
                            <startCounterValue>1</startCounterValue>
                            <finalCounterValue>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE  = "tt_ng_package"])</finalCounterValue>
                            <scope name="Scope_FlowN_ExtPackageDelete">
                              <variables>
                                <variable name="TempInputVariable_For_Delete" messageType="ns1:BundleChangeOrderEBFRequestMessage"/>
                              </variables>
                              <sequence name="Sequence_FlowN_ExtPackageDelete" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <assign name="AssignEBFInputToTempInput">
                                  <copy ignoreMissingFromData="yes">
                                    <from>$inputVariable.payload/ns63:RequestInfo</from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$TempInputVariable_For_Delete.payload/ns63:RequestInfo</to>
                                  </copy>
                                  <copy ignoreMissingFromData="yes">
                                    <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ng_package"][$Delete_NGindex]</from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$TempInputVariable_For_Delete.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS</to>
                                  </copy>
                                </assign>
                                <assign name="TransformExtPackageDeleteSKAPInput">
                                  <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                  </bpelx:annotation>
                                  <copy>
                                    <from>ora:doXSLTransformForDoc("../Transformations/TransformExtPackageDeleteSKAPInput.xsl", $TempInputVariable_For_Delete.payload)</from>
                                    <to variable="InvokeExtPackageDeleteInputVariable" part="payload"/>
                                  </copy>
                                </assign>
                                <scope name="Scope_Invoke_ExtPackageDeleteSKAPProvABCS">
                                  <variables>
                                    <variable name="TempInputVariable_For_Add" messageType="ns1:BundleChangeOrderEBFRequestMessage"/>
                                  </variables>
                                  <sequence name="Sequence_Invoke_ExtPackageDeleteSKAPProvABCS">
                                    <invoke name="InvokeExtPackageDelete" inputVariable="InvokeExtPackageDeleteInputVariable" outputVariable="InvokeExtPackageDeleteOutputVariable"
                                            bpelx:invokeAsDetail="no" partnerLink="ExtPackageDeleteSKAPProvABCS"
                                            portType="ns52:ExtPackageDeleteSKAPProvABCS" operation="process"/>
                                    <if name="If_if_ExtPackageAdd_success">
                                      <documentation>
                                        <![CDATA[if success]]>
                                      </documentation>
                                      <condition>$InvokeExtPackageDeleteOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE = 100</condition>
                                      <empty name="EmptyContinue"/>
                                      <else>
                                        <documentation>
                                          <![CDATA[NO]]>
                                        </documentation>
                                        <sequence name="SequenceFault" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                          <assign name="AssignFaultHandler">
                                            <copy ignoreMissingFromData="yes">
                                              <from>$InvokeExtPackageDeleteOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$InvokeExtPackageDeleteOutputVariable.payload/ns90:pReqRes/ns62:RETURN_MESSAGE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                            </copy>
                                          </assign>
                                          <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                        </sequence>
                                      </else>
                                    </if>
                                  </sequence>
                                </scope>
                              </sequence>
                            </scope>
                          </forEach>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <empty name="EmptyContinue"/>
                          </else>
                        </if>
                        <if name="if51" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                          <documentation>
                            <![CDATA[if ProvisionServiceCode = tt_ng_package To Add]]>
                          </documentation>
                          <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ng_package"]) &gt; 0</condition>
                          <forEach parallel="yes" counterName="Delete_NGindex" name="ForEachN__ExtPackageAdd">
                            <startCounterValue>1</startCounterValue>
                            <finalCounterValue>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ng_package"])</finalCounterValue>
                            <scope name="Scope_FlowN_ExtPackageAdd">
                              <variables>
                                <variable name="TempInputVariable_For_Delete" messageType="ns1:BundleChangeOrderEBFRequestMessage"/>
                              </variables>
                              <sequence name="Sequence_Invoke_ExtPackageAddSKAPProvABCS" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <assign name="AssignEBFInputToTempInput">
                                  <copy ignoreMissingFromData="yes">
                                    <from>$inputVariable.payload/ns63:RequestInfo</from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$TempInputVariable_For_Delete.payload/ns63:RequestInfo</to>
                                  </copy>
                                  <copy ignoreMissingFromData="yes">
                                    <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ng_package"][$Delete_NGindex]</from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$TempInputVariable_For_Delete.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS</to>
                                  </copy>
                                </assign>
                                <assign name="TransformExtPackageAddSKAPInput">
                                  <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                  </bpelx:annotation>
                                  <copy>
                                    <from>ora:doXSLTransformForDoc("../Transformations/TransformExtPackageAddSKAPInput.xsl", $TempInputVariable_For_Delete.payload)</from>
                                    <to variable="InvokeExtPackageAddInputVariable" part="payload"/>
                                  </copy>
                                </assign>
                                <scope name="Scope_Invoke_ExtPackageDeleteSKAPProvABCS">
                                  <sequence name="Sequence_Invoke_ExtPackageDeleteSKAPProvABCS">
                                    <invoke name="InvokeExtPackageAdd" partnerLink="ExtPackageAddSKAPProvABCS" portType="ns51:ExtPackageAddSKAPProvABCS" operation="process" inputVariable="InvokeExtPackageAddInputVariable" outputVariable="InvokeExtPackageAddOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                                    <if name="If_if_ExtPackageAdd_success">
                                      <documentation>
                                        <![CDATA[if success]]>
                                      </documentation>
                                      <condition>$InvokeExtPackageAddOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE = 100</condition>
                                      <empty name="EmptyContinue"/>
                                      <else>
                                        <documentation>
                                          <![CDATA[NO]]>
                                        </documentation>
                                        <sequence name="SequenceFault" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                          <assign name="AssignFaultHandler">
                                            <copy ignoreMissingFromData="yes">
                                              <from>$InvokeExtPackageAddOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE </from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                            </copy>
                                            <copy ignoreMissingFromData="yes">
                                              <from>$InvokeExtPackageAddOutputVariable.payload/ns90:pReqRes/ns62:RETURN_MESSAGE</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                            </copy>
                                          </assign>
                                          <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                        </sequence>
                                      </else>
                                    </if>
                                  </sequence>
                                </scope>
                              </sequence>
                            </scope>
                          </forEach>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <empty name="EmptyContinue"/>
                          </else>
                        </if>
                      </sequence>
                    </else>
                  </if>
                </scope>
                <scope name="ScopeBilling">
                  <sequence name="Sequence_6">
                    <if name="If_ChangeOrNewSales">
                      <documentation>
                        <![CDATA[if deactivated Count=0]]>
                      </documentation>
                      <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS) = 0</condition>
                      <sequence name="SequenceSalesOrder">
                        <assign name="TransformSalesOrderBilling">
                          <bpelx:annotation>
                            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                          </bpelx:annotation>
                          <copy>
                            <from>ora:doXSLTransformForDoc("../Transformations/TransformSalesOrderBiling.xsl", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                            <to variable="InvokeOrderBillingInputVariable" part="payload"/>
                          </copy>
                        </assign>
                        <invoke name="InvokeSalesORder_Biling" partnerLink="ProcessBillingFCBSProvEBF"
                                portType="ns24:ProcessBillingFCBSProvEBF" operation="process" inputVariable="InvokeOrderBillingInputVariable"
                                bpelx:invokeAsDetail="no"/>
                        <receive name="ReceiveSalesORder_Biling" partnerLink="ProcessBillingFCBSProvEBF"
                                 portType="ns24:ProcessBillingFCBSProvEBFCallback" operation="processResponse" variable="ReceiveSalesORderInputVariable"/>
                      </sequence>
                      <else>
                        <documentation>
                          <![CDATA[NO]]>
                        </documentation>
                        <sequence name="SequenceBundleChange">
                          <assign name="AssignBundleChangeEBS_Billing">
                            <copy ignoreMissingFromData="yes">
                              <from>$ReceiveFulfillmentEBS_VASCallback_InputVariable.payload</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_Billing_InputVariable.payload</to>
                            </copy>
                          </assign>
                          <if name="If_ActionReasonCode_CH_CMPG_OP">
                            <documentation>
                              <![CDATA[if CH_CMPG_OP]]>
                            </documentation>
                            <condition>count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS) &gt; 0 and count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS) &gt; 0 and $InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = "CH_CMPG_OP" and (count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:REASON_CODE = "UPSELL"]) &gt; 0 or count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:REASON_CODE = "DOWNSELL"])) &gt; 0</condition>
                            <assign name="AssignInteractionTypeId">
                              <copy>
                                <from>"17"</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:RequestInfo/ns62:ACTION_INTERACTION_TYPE_ID</to>
                              </copy>
                            </assign>
                            <else>
                              <documentation>
                                <![CDATA[NO]]>
                              </documentation>
                              <empty name="EmptyContinue"/>
                            </else>
                          </if>
                          <scope name="ScopeCR1579">
                            <variables>
                              <variable name="index" type="xsd:integer"/>
                              <variable name="total" type="xsd:integer"/>
                              <variable name="productId" type="xsd:token"/>
                            </variables>
                            <faultHandlers>
                              <catch faultName="bpws:selectionFailure">
                                <sequence name="SequenceSelectionFailure" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <assign name="AssignSelectionFailure">
                                    <copy>
                                      <from>'112'</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                    </copy>
                                    <copy>
                                      <from>"Selection failure!"</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                    </copy>
                                  </assign>
                                  <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                </sequence>
                              </catch>
                              <catchAll>
                                <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <assign name="AssignCatchAll">
                                    <copy>
                                      <from>'111'</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                    </copy>
                                    <copy>
                                      <from>"Unable to access CR_STATUS table!"</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                    </copy>
                                  </assign>
                                  <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                </sequence>
                              </catchAll>
                            </faultHandlers>
                            <if name="If_CrStatus">
                              <documentation>
                                <![CDATA[CrStatus (1579) = OFF]]>
                              </documentation>
                              <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','1579','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                              <empty name="DoNothing"/>
                              <else>
                                <documentation>
                                  <![CDATA[NO]]>
                                </documentation>
                                <sequence name="Sequence29">
                                  <assign name="AssignIndex">
                                    <copy>
                                      <from>number(1)</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$index</to>
                                    </copy>
                                    <copy ignoreMissingFromData="yes">
                                      <from>count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS)</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$total</to>
                                    </copy>
                                  </assign>
                                  <while name="While">
                                    <condition>$index &lt;= $total</condition>
                                    <sequence name="Sequence41">
                                      <if name="If" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         <![CDATA[CAMPAIGN exists]]>
      </documentation>
      <condition>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:CAMPAIGN</condition>
      <if name="If">
         <documentation>
            <![CDATA[CampaignBillingName Exists]]>
         </documentation>
         <condition>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:CAMPAIGN/ns77:KeyCampaign/ns77:CampaignBillingName</condition>
         <if name="If_StringLength">
            <documentation>
               <![CDATA[string-length(CampaignBillingName)>0]]>
            </documentation>
            <condition>string-length($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:CAMPAIGN/ns77:KeyCampaign/ns77:CampaignBillingName) &gt; 0</condition>
            <empty name="DoNothing"/>
            <else>
               <documentation>
                  <![CDATA[NO]]>
               </documentation>
                <assign name="AppendCampaignBillingName"
                       xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$productId</to>
                                                </copy>
												
                                                <extensionAssignOperation>
                                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                                    <bpelx:from>
               <bpelx:literal>
                  <ns16:CampaignBillingName xmlns:ns16="http://xmlns.ttnet.com.tr/CDM/EBO/Campaign"/>
               </bpelx:literal>
            </bpelx:from>
                                                    <bpelx:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:CAMPAIGN/ns77:KeyCampaign</bpelx:to>
                                                  </bpelx:append>
                                                </extensionAssignOperation>
                                                <copy ignoreMissingFromData="yes">
                                                  <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]/ns64:CAMPAIGN/ns77:KeyCampaign/ns77:CampaignBillingName</from>
                                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:CAMPAIGN/ns77:KeyCampaign/ns77:CampaignBillingName</to>
                                                </copy>
                                              </assign>
                                                                                        							  
											  
            </else>
         </if>
         <else>
            <documentation>
               <![CDATA[NO]]>
            </documentation>
            <assign name="AppendCampaignBillingName">
                                              <copy ignoreMissingFromData="yes">
                                                <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$productId</to>
                                              </copy>
                                              <extensionAssignOperation>
                                                <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                                  <bpelx:from>
                        <bpelx:literal>
                           <ns16:CampaignBillingName xmlns:ns16="http://xmlns.ttnet.com.tr/CDM/EBO/Campaign"/>
                        </bpelx:literal>
                     </bpelx:from>
                                                  <bpelx:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:CAMPAIGN/ns77:KeyCampaign</bpelx:to>
                                                </bpelx:append>
                                              </extensionAssignOperation>
                                              <copy ignoreMissingFromData="yes">
                                                <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]/ns64:CAMPAIGN/ns77:KeyCampaign/ns77:CampaignBillingName</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:CAMPAIGN/ns77:KeyCampaign/ns77:CampaignBillingName</to>
                                              </copy>
                                            </assign>
         </else>
      </if>
      <else>
         <documentation>
            <![CDATA[NO]]>
         </documentation>
         <empty name="DoNothing"/>
      </else>
   </if>
                                      <assign name="AssignIncreaseIndex">
                                        <copy ignoreMissingFromData="yes">
                                          <from>$index + number(1)</from>
                                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$index</to>
                                        </copy>
                                      </assign>
                                    </sequence>
                                  </while>
                                </sequence>
                              </else>
                            </if>
                          </scope>
                          <scope name="ScopeBundleChangeBilling">
                            <sequence name="SequenceNoIntegration">
                              <if name="If_No_Integration">
                                <documentation>
                                  <![CDATA[NoIntegrationExist]]>
                                </documentation>
                                <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName= 'NO_INTEGRATION']/ns64:OrderItemCharValue = '0'</condition>
                                <sequence name="SequenceBundleChangeEBS_Billing">
                                  <empty name="DoNothing"/>
                                  <assign name="AssignBundleChangeEBS_Billing">
                                    <copy>
                                      <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload</to>
                                    </copy>
                                  </assign>
                                </sequence>
                                <else>
                                  <documentation>
                                    <![CDATA[NoIntegrationNonExist]]>
                                  </documentation>
                                  <sequence name="SequenceBundleChangeBilling">
                                    <invoke name="InvokeBundleChangeEBS_Billing" bpelx:invokeAsDetail="no"
                                            partnerLink="BundleChangeBillingFCBSProvEBF"
                                            portType="ns16:BundleChangeBillingFCBSProvEBF" operation="process"
                                            inputVariable="InvokeBundleChangeEBS_Billing_InputVariable"/>
                                    <receive name="ReceiveBundleChangeEBS_Billing"
                                             partnerLink="BundleChangeBillingFCBSProvEBF"
                                             portType="ns16:BundleChangeBillingFCBSProvEBFCallback"
                                             operation="processResponse"
                                             variable="ReceiveBundleChangeEBS_BillingCallback_InputVariable"/>
                                    <if name="TYS380872_Check">
                                      <documentation>
                                        <![CDATA[TYS380872_OFF]]>
                                      </documentation>
                                      <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','380872','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                                      <empty name="TYS380872_OFF"/>
                                      <else>
                                        <documentation>
                                          <![CDATA[TYS380872_ON]]>
                                        </documentation>
                                        <sequence name="Sequence46">
                                          <if name="BILLING_SUCCESS">
                                            <documentation>
                                              <![CDATA[BILLING_SUCCESS]]>
                                            </documentation>
                                            <condition>$ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE='0'</condition>
                                            <sequence>
                                              <if name="InvokeSubscriptionDeactivationAPIDOCOMO">
                                                <documentation>
                                                  <![CDATA[InvokeSubscriptionDeactivationAPIDOCOMO]]>
                                                </documentation>
                                                <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE= "tt_amazonprimevideo"])=0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE= "tt_amazonprimevideo"])&gt;0 and ($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME="tt_amazon_deactv_date"]/ns73:PRODUCT_CHAR_VALUE = "EMPTY" or $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME="tt_amazon_deactv_date"]/ns73:PRODUCT_CHAR_VALUE = "EMPTY_VALUE")</condition>
                                                <sequence>
                                                  <assign name="TransformSubscriptionDeactivationAPIDOCOMO">
                                                    <bpelx:annotation>
                                                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                                    </bpelx:annotation>
                                                    <copy>
                                                      <from>ora:doXSLTransformForDoc("../Transformations/TransformSubscriptionDeactivationAPIDOCOMO.xsl", $inputVariable.payload)</from>
                                                      <to variable="InvokeSubscriptionDeactivationAPIDOCOMOInputVariable"
                                                          part="payload"/>
                                                    </copy>
                                                  </assign>
                                                  <scope name="ScopeSubscriptionDeactivationAPIDOCOMO">
                                                    <sequence name="Sequence44">
                                                      <invoke name="InvokeSubscriptionDeactivationAPIDOCOMO"
                                                              bpelx:invokeAsDetail="no"
                                                              partnerLink="SubscriptionDeactivationApiDOCOMOProvABCS"
                                                              portType="ns96:SubscriptionDeactivationApiDOCOMOProvABCS"
                                                              operation="process"
                                                              inputVariable="InvokeSubscriptionDeactivationAPIDOCOMOInputVariable"
                                                              outputVariable="InvokeSubscriptionDeactivationAPIDOCOMOOutputVariable"/>
                                                      <if name="IF_SubscriptionDeactivationAPIDOCOMO_Success">
                                                        <documentation>
                                                          <![CDATA[SubscriptionDeactivationAPIDOCOMO_Success]]>
                                                        </documentation>
                                                        <condition>$InvokeSubscriptionDeactivationAPIDOCOMOOutputVariable.payload/ns73:pReqRes/ns62:RETURN_CODE='100'</condition>
                                                        <sequence>
                                                          <empty name="SubscriptionDeactivationAPIDOCOMO_Success"/>
                                                        </sequence>
                                                        <else>
                                                          <sequence name="Sequence45">
                                                            <assign name="AssignFaultHandler">
                                                              <copy>
                                                                <from>$InvokeSubscriptionDeactivationAPIDOCOMOOutputVariable.payload/ns73:pReqRes/ns62:RETURN_CODE</from>
                                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                                              </copy>
                                                              <copy>
                                                                <from>$InvokeSubscriptionDeactivationAPIDOCOMOOutputVariable.payload/ns73:pReqRes/ns62:RETURN_MESSAGE</from>
                                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                                              </copy>
                                                            </assign>
                                                            <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no"
                                                                    partnerLink="FaultHandlerABCS"
                                                                    portType="ns2:FaultHandlerABCS"
                                                                    operation="HandleFault"
                                                                    inputVariable="HandleFaultInputVariable"
                                                                    outputVariable="HandleFaultOutputVariable"/>
                                                          </sequence>
                                                        </else>
                                                      </if>
                                                    </sequence>
                                                  </scope>
                                                  <assign name="TransformUpdateSimplifiedProductChar">
                                                    <bpelx:annotation>
                                                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                                    </bpelx:annotation>
                                                    <copy>
                                                      <from>ora:doXSLTransformForDoc("../Transformations/TransformUpdateSimplifiedProductChar.xsl", $inputVariable.payload, "InvokeSubscriptionDeactivationAPIDOCOMOOutputVariable.payload", $InvokeSubscriptionDeactivationAPIDOCOMOOutputVariable.payload)</from>
                                                      <to variable="InvokeUpdateSimplifiedProductCharInputVariable"
                                                          part="payload"/>
                                                    </copy>
                                                  </assign>
                                                  <scope name="ScopeAmazonUpdateChar">
                                                    <sequence name="Sequence50">
                                                      <invoke name="InvokeUpdateSimplifiedProductCharMTSProvABCS"
                                                              bpelx:invokeAsDetail="no"
                                                              partnerLink="UpdateSimplifiedProductCharMTSProvABCS"
                                                              portType="ns97:UpdateSimplifiedProductCharMTSProvABCS"
                                                              operation="process"
                                                              inputVariable="InvokeUpdateSimplifiedProductCharInputVariable"
                                                              outputVariable="InvokeUpdateSimplifiedProductCharOutputVariable"/>
                                                      <if name="UpdateSimplifiedProductCharResponseCheck">
                                                        <condition>$InvokeUpdateSimplifiedProductCharOutputVariable.payload/ns62:RETURN_CODE='100'</condition>
                                                        <empty name="UpdateSimplifiedProductChar_Success"/>
                                                        <else>
                                                          <sequence name="Sequence53">
                                                            <assign name="AssignFault">
                                                              <copy>
                                                                <from>$InvokeUpdateSimplifiedProductCharOutputVariable.payload/ns62:RETURN_CODE</from>
                                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                                              </copy>
                                                              <copy>
                                                                <from>$InvokeUpdateSimplifiedProductCharOutputVariable.payload/ns62:RETURN_MESSAGE</from>
                                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                                              </copy>
                                                            </assign>
                                                            <invoke name="InvokeFaultHandler"
                                                                    bpelx:invokeAsDetail="no"
                                                                    partnerLink="FaultHandlerABCS"
                                                                    portType="ns2:FaultHandlerABCS"
                                                                    operation="HandleFault"
                                                                    inputVariable="HandleFaultInputVariable"
                                                                    outputVariable="HandleFaultOutputVariable"/>
                                                          </sequence>
                                                        </else>
                                                      </if>
                                                    </sequence>
                                                  </scope>
                                                </sequence>
                                                <else>
                                                  <documentation>
                                                    <![CDATA[DoNothing]]>
                                                  </documentation>
                                                  <empty name="DoNothing"/>
                                                </else>
                                              </if>
                                            </sequence>
                                            <else>
                                              <documentation>
                                                <![CDATA[BILLING_NOT_SUCCESS]]>
                                              </documentation>
                                              <sequence name="Sequence51">
                                                <empty name="BILLING_NOT_SUCCESS"/>
                                              </sequence>
                                            </else>
                                          </if>
                                        </sequence>
                                      </else>
                                    </if>
                                  </sequence>
                                </else>
                              </if>
                            </sequence>
                          </scope>
                          <scope name="ScopeCR2458" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <variables>
                              <variable name="index" type="xsd:integer"/>
                              <variable name="total" type="xsd:integer"/>
                              <variable name="productId" type="xsd:token"/>
                            </variables>
                            <faultHandlers>
                              <catch faultName="bpws:selectionFailure">
                                <sequence name="SequenceSelectionFailure" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <assign name="AssignSelectionFailure">
                                    <copy>
                                      <from>'112'</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                    </copy>
                                    <copy>
                                      <from>"Selection failure!"</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                    </copy>
                                  </assign>
                                  <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                </sequence>
                              </catch>
                              <catchAll>
                                <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <assign name="AssignCatchAll">
                                    <copy>
                                      <from>'111'</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                    </copy>
                                    <copy>
                                      <from>"Unable to access CR_STATUS table!"</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                    </copy>
                                  </assign>
                                  <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                </sequence>
                              </catchAll>
                            </faultHandlers>
                            <if name="If_CR2458">
                              <documentation>
                                <![CDATA[CrStatus (2458) = OFF]]>
                              </documentation>
                              <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2458','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                              <empty name="DoNothing"/>
                              <else>
                                <documentation>
                                  <![CDATA[NO]]>
                                </documentation>
                                <if name="If_RecursiveCharValExists" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <documentation>
                                    <![CDATA[count(RECURSIVE_CHAR_VAL) > 0]]>
                                  </documentation>
                                  <condition>count($ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL) &gt; 0</condition>
                                  <scope name="Scope">
                                    <sequence name="Sequence">
                                      <assign name="AssignVariables">
                                        <copy>
                                          <from>number(1)</from>
                                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$index</to>
                                        </copy>
                                        <copy ignoreMissingFromData="yes">
                                          <from>count($ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL)</from>
                                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$total</to>
                                        </copy>
                                      </assign>
                                      <while name="While">
                                        <condition>$index &lt;= $total</condition>
                                        <sequence name="Sequence30"
                                                                     xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignProductId">
         <copy ignoreMissingFromData="yes">
            <from>$ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL[$index][ns62:CharName = "PRODUCT_ID"]/ns62:CharValue</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$productId</to>
         </copy>
      </assign>
      <if name="If">
         <documentation>
            <![CDATA[Product exists in Deactive Set]]>
         </documentation>
         <condition>count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]) = 1</condition>
         <if name="If">
            <documentation>
               <![CDATA[CampaignBillingName Exists]]>
            </documentation>
            <condition>string-length($ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL[$index]/ns62:CharValChars[ns62:CharName = "ACTION_DATE"]/ns62:CharValue )&gt; 0</condition>
            <if name="If">
               <documentation>
                  <![CDATA[ACTION_DATE exists]]>
               </documentation>
               <condition>string-length($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:CAMPAIGN/ns77:KeyCampaign/ns77:CampaignBillingName) &gt; 0</condition>
               <sequence name="Sequence29">
                  <if name="If">
                     <documentation>
                        <![CDATA[Action date]]>
                     </documentation>
                     <condition>count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]/ns64:ACTION_DATE) = 0</condition>
                     <assign name="AssignAction_date">
                        <copy ignoreMissingFromData="yes">
                           <from>
                                             <literal>
                                                <ns6:ACTION_DATE xmlns:ns6="http://xmlns.ttnet.com.tr/CDM/EBO/Order"/>
                                             </literal>
                                          </from>
                           <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]</to>
                        </copy>
                     </assign>
                  </if>
                  <assign name="AssignActionDate">
                     <copy>
                        <from>$ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL[$index]/ns62:CharValChars[ns62:CharName = "ACTION_DATE"]/ns62:CharValue</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]/ns64:ACTION_DATE</to>
                     </copy>
                  </assign>
               </sequence>
            </if>
         </if>
         <else>
            <documentation>
               <![CDATA[NO]]>
            </documentation>
            <sequence name="Sequence">
               <if name="If">
                  <documentation>
                     <![CDATA[Product exists in Active Set]]>
                  </documentation>
                  <condition>count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]) = 1</condition>
                  <sequence name="Sequence31">
                     <if name="If">
                        <documentation>
                           <![CDATA[ACTION_DATE exists]]>
                        </documentation>
                        <condition>string-length($ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL[$index]/ns62:CharValChars[ns62:CharName = "ACTION_DATE"]/ns62:CharValue) &gt; 0</condition>
                        <sequence name="Sequence32">
                           <sequence>
                              <if name="If">
                                 <documentation>
                                    <![CDATA[Action date]]>
                                 </documentation>
                                 <condition>count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]/ns64:ACTION_DATE) = 0</condition>
                                 <assign name="AssignAction_date"
                                         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                              <extensionAssignOperation>
                                                                <bpelx:append>
                                                                  <bpelx:from><bpelx:literal><ns6:ACTION_DATE xmlns:ns6="http://xmlns.ttnet.com.tr/CDM/EBO/Order"/></bpelx:literal></bpelx:from>
                                                                  <bpelx:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]</bpelx:to>
                                                                </bpelx:append>
                                                              </extensionAssignOperation>
                                                            </assign>
                              </if>
                           </sequence>
                           <assign name="AssignActionDate"
                                   xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy>
                                 <from>$ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL[$index]/ns62:CharValChars[ns62:CharName = "ACTION_DATE"]/ns62:CharValue</from>
                                 <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]/ns64:ACTION_DATE</to>
                              </copy>
                           </assign>
                        </sequence>
                     </if>
                     <if name="If">
                        <documentation>
                           <![CDATA[START_DATE exists]]>
                        </documentation>
                        <condition>string-length($ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL[$index]/ns62:CharValChars[ns62:CharName = "START_DATE"]/ns62:CharValue) &gt; 0</condition>
                        <assign name="AssignStartDate" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                           <copy ignoreMissingFromData="yes">
                              <from>$ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL[$index]/ns62:CharValChars[ns62:CharName = "START_DATE"]/ns62:CharValue</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]/ns64:PRODUCT/ns73:PRODUCT_DEFINITION/ns73:START_DATE</to>
                           </copy>
                        </assign>
                     </if>
                     <if name="If">
                        <documentation>
                           <![CDATA[END_DATE exists]]>
                        </documentation>
                        <condition>string-length($ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL[$index]/ns62:CharValChars[ns62:CharName = "END_DATE"]/ns62:CharValue) &gt; 0</condition>
                        <assign name="AssignEndDate" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                           <copy ignoreMissingFromData="yes">
                              <from>$ReceiveBundleChangeEBS_BillingCallback_InputVariable.payload/ns63:RequestResponseType/ns62:RECURSIVE_CHAR_VAL[$index]/ns62:CharValChars[ns62:CharName = "END_DATE"]/ns62:CharValue</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $productId]/ns64:PRODUCT/ns73:PRODUCT_DEFINITION/ns73:END_DATE</to>
                           </copy>
                        </assign>
                     </if>
                  </sequence>
               </if>
            </sequence>
         </else>
      </if>
   <assign name="AssignIncreaseIndex">
                                            <copy ignoreMissingFromData="yes">
                                              <from>$index + number(1)</from>
                                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$index</to>
                                            </copy>
                                          </assign></sequence></while>
                                    </sequence>
                                  </scope>
                                  <else>
                                    <documentation>
                                      <![CDATA[NO]]>
                                    </documentation>
                                    <empty name="DoNothing"/>
                                  </else>
                                </if>
                              </else>
                            </if>
                          </scope>
                        </sequence>
                      </else>
                    </if>
                    <assign name="AssignBundleChangeEBS_UpdateBundleChange">
                      <copy ignoreMissingFromData="yes">
                        <from>$ReceiveFulfillmentEBS_VASCallback_InputVariable.payload</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable.payload</to>
                      </copy>
                    </assign>
                  </sequence>
                </scope>
                <scope name="ScopeAdjustBill" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <variables>
                    <variable name="itemCount" type="xsd:int"/>
                    <variable name="actionDateVar" type="xsd:string"/>
                    <variable name="numberOfOrders" type="xsd:int"/>
                    <variable name="pprodID" type="xsd:long"/>
                  </variables>
                  <faultHandlers>
                    <catch faultName="bpws:selectionFailure">
                      <sequence name="SequenceSelectionFailure">
                        <assign name="AssignSelectionFailure">
                          <copy>
                            <from>'112'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>"Selection failure!"</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catch>
                    <catchAll>
                      <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignCatchAll">
                          <copy ignoreMissingFromData="yes">
                            <from>'111'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy ignoreMissingFromData="yes">
                            <from>'Unable to access CR_STATUS table!'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catchAll>
                  </faultHandlers>
                  <if name="If_SwitchCR2458">
                    <documentation>
                      <![CDATA[CrStatus (1578) = OFF]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2544','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="Empty"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <if name="If_DiscountTransferrableServiceExists">
                        <documentation>
                          <![CDATA[tt_discountTransferrableService exists]]>
                        </documentation>
                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_discountTransferrableService"]) &gt; 0</condition>
                        <sequence name="Sequence">
                          <assign name="TransformAdjustBillInput">
                            <bpelx:annotation>
                              <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                            </bpelx:annotation>
                            <copy>
                              <from>ora:doXSLTransformForDoc("../Transformations/TransformAdjustBillInput.xsl", $inputVariable.payload)</from>
                              <to variable="InvokeAdjustBillInputVariable" part="payload"/>
                            </copy>
                          </assign>
                          <invoke name="InvokeAdjustBill" bpelx:invokeAsDetail="no" partnerLink="AdjustBillAsyncFCBSProvABCS" portType="ns8:AdjustBillAsyncFCBSProvABCS" operation="process" inputVariable="InvokeAdjustBillInputVariable" outputVariable="InvokeAdjustBillOutputVariable"/>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[NO]]>
                          </documentation>
                          <empty name="Empty"/>
                        </else>
                      </if>
                    </else>
                  </if>
                </scope>
                <scope name="ScopeDiscountPenaltyBill" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <variables>
                    <variable name="itemCount" type="xsd:int"/>
                    <variable name="actionDateVar" type="xsd:string"/>
                    <variable name="numberOfOrders" type="xsd:int"/>
                    <variable name="pprodID" type="xsd:long"/>
                  </variables>
                  <faultHandlers>
                    <catchAll>
                      <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignFaultHandler">
                          <copy ignoreMissingFromData="yes">
                            <from>'111'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy ignoreMissingFromData="yes">
                            <from>'Unable to access CR_STATUS table!'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catchAll>
                  </faultHandlers>
                  <if name="If_SwitchCR2458">
                    <documentation>
                      <![CDATA[CrStatus (1504) = OFF]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','1504','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <sequence name="Sequence">
                      <empty name="EmptyCR_1504_OFF"/>
                    </sequence>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <sequence name="Sequence">
                        <assign name="AssignDiscountPenaltyBillInput">
                          <copy ignoreMissingFromData="yes">
                            <from>$inputVariable.payload</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeDiscountPenaltyBillBundleChangeOrderInput.payload</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeDiscountPenaltyBillBundleChangeOrder" bpelx:invokeAsDetail="no" partnerLink="DiscountPenaltyBillEBF" portType="ns7:DiscountPenaltyBillEBF" operation="ChangeOrder" inputVariable="InvokeDiscountPenaltyBillBundleChangeOrderInput"/>
                        <receive name="ReceiveDiscountPenaltyBillCallback" partnerLink="DiscountPenaltyBillEBF" portType="ns7:DiscountPenaltyBillEBFCallback" operation="ChangeOrderResponse" variable="ReceiveDiscountPenaltyBillCallbackInput"/>
                      </sequence>
                    </else>
                  </if>
                </scope>
                <scope name="ScopeUpdateParentProdForBilling">
                  <variables>
                    <variable name="index" type="xsd:int"/>
                    <variable name="provServiceCodeAdsl" type="xsd:string"/>
                    <variable name="provServiceCodeVdsl" type="xsd:string"/>
                    <variable name="provServiceCodeNdsl" type="xsd:string"/>
                    <variable name="provServiceCodeNvdsl" type="xsd:string"/>
                    <variable name="provServiceCodeGshdsl" type="xsd:string"/>
                    <variable name="provServiceCodeFiber" type="xsd:string"/>
                    <variable name="provServiceCodeNfiber" type="xsd:string"/>
                    <variable name="provServiceCodeAdslt11" type="xsd:string"/>
                    <variable name="provServiceCodeVdslt11" type="xsd:string"/>
                    <variable name="provServiceCodeNdslt11" type="xsd:string"/>
                    <variable name="provServiceCodeNvdslt11" type="xsd:string"/>
                    <variable name="provServiceCodeMe" type="xsd:string"/>
                    <variable name="provServiceCodeMe1" type="xsd:string"/>
                    <variable name="provServiceCodeAtmPort" type="xsd:string"/>
                    <variable name="provServiceCodeFrPort" type="xsd:string"/>
                    <variable name="childProduct" type="xsd:int"/>
                    <variable name="childProdId" type="xsd:string"/>
                    <variable name="currentProvServiceCode" type="xsd:string"/>
                  </variables>
                  <sequence name="Sequence5">
                    <if name="If3">
                      <documentation>
                        <![CDATA[if not PRODUCT_TRANSFORM]]>
                      </documentation>
                      <condition>$inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE != 'PRODUCT_TRANSFORM'</condition>
                      <sequence>
                        <assign name="AssignIndex">
                          <copy>
                            <from>count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS)</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$index</to>
                          </copy>
                        </assign>
                        <assign name="AssignProvServiceCodeVariables">
                          <copy>
                            <from>'tt_adslinternetservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeAdsl</to>
                          </copy>
                          <copy>
                            <from>'tt_vdslinternetservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeVdsl</to>
                          </copy>
                          <copy>
                            <from>'tt_ndslinternetservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNdsl</to>
                          </copy>
                          <copy>
                            <from>'tt_nvdslinternetservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNvdsl</to>
                          </copy>
                          <copy>
                            <from>'tt_gshdslinternetservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeGshdsl</to>
                          </copy>
                          <copy>
                            <from>'tt_fiberinternetservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeFiber</to>
                          </copy>
                          <copy>
                            <from>'tt_nfiberinternetservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNfiber</to>
                          </copy>
                          <copy>
                            <from>'tt_adslinternetservicet11'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeAdslt11</to>
                          </copy>
                          <copy>
                            <from>'tt_vdslinternetservicet11'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeVdslt11</to>
                          </copy>
                          <copy>
                            <from>'tt_ndslinternetservicet11'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNdslt11</to>
                          </copy>
                          <copy>
                            <from>'tt_nvdslinternetservicet11'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNvdslt11</to>
                          </copy>
                          <copy>
                            <from>'tt_meservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeMe</to>
                          </copy>
                          <copy>
                            <from>'tt_meservice1'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeMe1</to>
                          </copy>
                          <copy>
                            <from>'tt_atmportservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeAtmPort</to>
                          </copy>
                          <copy>
                            <from>'tt_frportservice'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeFrPort</to>
                          </copy>
                        </assign>
                        <while name="ForEachActivatedOrders">
                          <condition>$index &gt;= number(1)</condition>
                          <sequence name="SequenceForEachActivatedOrders"
                                                       xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <if name="If_ProvisionServiceCode">
         <documentation>
            <![CDATA[if ProvisionServiceCode exists]]>
         </documentation>
         <condition>string-length($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE) &gt; 0</condition>
         <sequence name="Sequence">
            <assign name="AssignCurrentProvisionServiceCode">
               <copy ignoreMissingFromData="yes">
                  <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$currentProvServiceCode</to>
               </copy>
            </assign>
            <if name="If_ServiceCodes">
               <documentation>
                  <![CDATA[ServiceCode exists in table]]>
               </documentation>
               <condition>oraext:lookup-table('UPDT_PRNT_PROD_SRVC_TBL','PROVISION_SERVICE_CODE',$currentProvServiceCode,'STATUS','jdbc/CustomSOADataSource') = 'ON'</condition>
               <sequence name="Sequence6">
                  <assign name="AssignChildProduct">
                     <copy ignoreMissingFromData="yes">
                        <from>count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct)</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$childProduct</to>
                     </copy>
                  </assign><while name="ForEachChildProduct">
                                      <condition>$childProduct &gt;= number(1)</condition>
                                      <sequence name="Sequence8"
                                                          xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                           <assign name="AssignChildProdId">
                              <copy ignoreMissingFromData="yes">
                                 <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ProductId</from>
                                 <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$childProdId</to>
                              </copy>
                           </assign>
                           <if name="If2">
                              <documentation>
                                 <![CDATA[ChildProduct servicename=Commitment or simple_discount]]>
                              </documentation>
                              <condition>($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ServiceType/ns74:PROVISION_SERVICE_CODE= "COMMITMENT" or $InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ServiceType/ns74:PROVISION_SERVICE_CODE = "SIMPLE_DISCOUNT") and (count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID=$childProdId])=0) and ($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:TransferParentProdId = $InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:PRODUCT/ns73:TRANSFERRED_PRODUCT_KEY/ns73:PRODUCT_ID)</condition>
                              <sequence name="Sequence36">
                                 <assign name="AssignFcbsEBSInput">
                                    <copy ignoreMissingFromData="yes">
                                       <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:RequestInfo</from>
                                       <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFcbsEBSInputVariable.payload/ns73:RequestInfo</to>
                                    </copy>
                                    <copy ignoreMissingFromData="yes">
                                       <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ProductId</from>
                                       <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFcbsEBSInputVariable.payload/ns73:pKey/ns73:PRODUCT_ID</to>
                                    </copy>
                                    <copy ignoreMissingFromData="yes">
                                       <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID</from>
                                       <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFcbsEBSInputVariable.payload/ns73:pParentKey/ns73:PRODUCT_ID</to>
                                    </copy>
                                 </assign>
                                 <if name="If_KurumsalOrDthIcerik">
                                    <documentation>
                                       <![CDATA[DTH icerik]]>
                                    </documentation>
                                    <condition>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dth_content"</condition>
                                    <if name="If35">
                                       <documentation>
                                          <![CDATA[childsummary(simple_discount)]]>
                                       </documentation>
                                       <!--$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ProdCharValue[ns73:PRODUCT_CHAR_NAME = "COMMITMENT_PROD_ID"]/ns73:PRODUCT_CHAR_VALUE != "EMPTY_VALUE" 11g den farklı olarak eklendi-->
                                       <condition>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ServiceType/ns74:PROVISION_SERVICE_CODE = "SIMPLE_DISCOUNT" and string-length($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ProdCharValue[ns73:PRODUCT_CHAR_NAME = "COMMITMENT_PROD_ID"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and $InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ProdCharValue[ns73:PRODUCT_CHAR_NAME = "COMMITMENT_PROD_ID"]/ns73:PRODUCT_CHAR_VALUE != "EMPTY_VALUE"</condition>
                                       <assign name="AssignCommitmentKey">
                                          <copy ignoreMissingFromData="yes">
                                             <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ProdCharValue[ns73:PRODUCT_CHAR_NAME = "COMMITMENT_PROD_ID"]/ns73:PRODUCT_CHAR_VALUE</from>
                                             <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFcbsEBSInputVariable.payload/ns73:pCommitmentKey/ns73:PRODUCT_ID</to>
                                          </copy>
                                       </assign>
                                       <else>
                                          <documentation>
                                             <![CDATA[NO]]>
                                          </documentation>
                                          <empty name="EmptyNotFoundProductId"/>
                                       </else>
                                    </if>
                                    <elseif>
                                       <documentation>
                                          <![CDATA[Kurumsal]]>
                                       </documentation>
                                       <condition>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = $provServiceCodeMe or $InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = $provServiceCodeMe1 or $InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = $provServiceCodeAtmPort or $InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = $provServiceCodeFrPort or $InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ley"</condition>
                                       <if name="If">
                                          <documentation>
                                             <![CDATA[childsummary(simple_discount) and activatedorders(commitment)]]>
                                          </documentation>
                                          <condition>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:ChildSummaryProduct[$childProduct]/ns64:ServiceType/ns74:PROVISION_SERVICE_CODE = "SIMPLE_DISCOUNT" and(count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "COMMITMENT"]) &gt; 0 and count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "COMMITMENT"]/ns64:PRODUCT/ns73:PRODUCT_DEFINITION/ns73:PARENT_PRODUCT_ID) = 0)</condition>
                                          <sequence name="Sequence37">
                                             <assign name="AssignProdId">
                                                <copy ignoreMissingFromData="yes">
                                                   <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$index]/ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID</from>
                                                   <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$prodId</to>
                                                </copy>
                                             </assign>
                                             <if name="If30">
                                                <documentation>
                                                        <![CDATA[activatedorders(commitment) and KeyDependentProId=ProductProductId]]>
                                                      </documentation>
                                                <condition>count($InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "COMMITMENT"]/ns64:PRODUCT[ns73:KEY_DEPENDENT_PRODUCT/ns73:PRODUCT_ID = $prodId]/ns73:PRODUCT_KEY/ns73:PRODUCT_ID)</condition>
                                                <assign name="AssignCommitmentKey"
                                                        xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                   <copy ignoreMissingFromData="yes">
                                                      <from>$InvokeBundleChangeEBS_Billing_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "COMMITMENT"]/ns64:PRODUCT[ns73:KEY_DEPENDENT_PRODUCT/ns73:PRODUCT_ID = $prodId]/ns73:PRODUCT_KEY/ns73:PRODUCT_ID</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFcbsEBSInputVariable.payload/ns73:pCommitmentKey/ns73:PRODUCT_ID</to>
                                                   </copy>
                                                </assign>
                                                <else>
                                                   <documentation>
                                                      <![CDATA[NO]]>
                                                   </documentation>
                                                   <empty name="EmptyNotFoundCmmintmentProductId"/>
                                                </else>
                                             </if>
                                          </sequence>
                                          <else>
                                             <documentation>
                                                <![CDATA[NO]]>
                                             </documentation>
                                             <empty name="EmptyNotFoundProductId"/>
                                          </else>
                                       </if>
                                    </elseif>
                                 </if>
                                 <invoke name="InvokeFcbsEBS" bpelx:invokeAsDetail="no"
                                         partnerLink="UpdateParentProductAsynchFCBSProvABCS"
                                         portType="ns22:UpdateParentProductAsynchFCBSProvABCS" operation="process"
                                         inputVariable="InvokeFcbsEBSInputVariable"
                                         outputVariable="InvokeFcbsEBSOutputVariable"
                                         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                 <if name="If_CommitmentKey2">
                                    <documentation>
                                       <![CDATA[if CommitmentKey Prod]]>
                                    </documentation>
                                    <condition>count($InvokeFcbsEBSInputVariable.payload/ns73:pCommitmentKey/ns73:PRODUCT_ID) &gt; 0 and string-length($InvokeFcbsEBSInputVariable.payload/ns73:pCommitmentKey/ns73:PRODUCT_ID) &gt; 0</condition>
                                    <assign name="AssignEmptyCommitmentKey">
                                       <copy ignoreMissingFromData="yes">
                                          <from>''</from>
                                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeFcbsEBSInputVariable.payload/ns73:pCommitmentKey/ns73:PRODUCT_ID</to>
                                       </copy>
                                    </assign>
                                 </if>
                              </sequence>
                              <else>
                                 <documentation>
                                    <![CDATA[NO]]>
                                 </documentation>
                                 <empty name="EmptyNoProduct"/>
                              </else>
                           </if>
                        <assign name="AssignDecreaseIndex"
                                xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy ignoreMissingFromData="yes">
                                            <from>$childProduct -1</from>
                                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$childProduct</to>
                                          </copy></assign></sequence></while>
                  
               </sequence>
               <else>
                  <documentation>
                     <![CDATA[NO]]>
                  </documentation>
                  <empty name="EmptyNoAdslProduct"/>
               </else>
            </if>
         </sequence>
         <else>
            <documentation>
               <![CDATA[NO]]>
            </documentation>
            <empty name="EmptyContinue"/>
         </else>
      </if>
      <assign name="AssignDecreaseIndex">
                              <copy ignoreMissingFromData="yes">
                                <from>$index -1</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$index</to>
                              </copy>
                            </assign>
   </sequence></while>
                      </sequence>
                      <else>
                        <documentation>
                          <![CDATA[NO]]>
                        </documentation>
                        <empty name="Empty"/>
                      </else>
                    </if>
                  </sequence>
                </scope>
                <scope name="ScopeCR1985_TTO">
                  <faultHandlers>
                    <catch faultName="bpws:selectionFailure">
                      <sequence name="SequenceSelectionFailure" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignSelectionFailure">
                          <copy>
                            <from>'112'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>"Selection failure!"</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catch>
                    <catchAll>
                      <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignCatchAll">
                          <copy ignoreMissingFromData="yes">
                            <from>'111'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy ignoreMissingFromData="yes">
                            <from>'Unable to access CR_STATUS table!'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catchAll>
                  </faultHandlers>
                  <if name="If_CrStatus">
                    <documentation>
                      <![CDATA[CrStatus (1985) = OFF]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','1985','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="Empty"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <if name="If29">
                        <documentation>
                          <![CDATA[if reasoncode=UPSELL or DOWNSELL and charvalue=CNCLBYTTNET]]>
                        </documentation>
                        <condition>($inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'UPSELL' or $inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'DOWNSELL') and $inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "COMMON_CMPG_CANCEL_INFO"]/ns64:OrderItemCharValue = 'CNCLBYTTNET'</condition>
                        <if name="If_PstnOrFiberVoiceNoOrNot">
                          <documentation>
                            <![CDATA[if pstnno or fibervoiceno exist]]>
                          </documentation>
                          <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_pstnno"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_fibervoiceno"]) &gt; 0</condition>
                          <if name="If_ExternalCampaign">
                            <documentation>
                              <![CDATA[if externalcampaign exist]]>
                            </documentation>
                            <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:ExternalCampaign) &gt; 0 and string-length($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:ExternalCampaign/ns77:MasterSystem) &gt; 0</condition>
                            <if name="If_MasterSystem">
                              <documentation>
                                <![CDATA[if master system = TT]]>
                              </documentation>
                              <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:ExternalCampaign/ns77:MasterSystem = 'TT'</condition>
                              <sequence name="SequenceCancelFeature">
                                <assign name="TransformCancelFeatureInput">
                                  <bpelx:annotation>
                                    <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                  </bpelx:annotation>
                                  <copy>
                                    <from>ora:doXSLTransformForDoc("../Transformations/TransformCancelFeatureInput.xsl", $inputVariable.payload)</from>
                                    <to variable="InvokeCancelFeatureInputVariable" part="payload"/>
                                  </copy>
                                </assign>
                                <invoke name="InvokeCancelFeature" bpelx:invokeAsDetail="no" partnerLink="CancelFeatureTTOProvABCS" portType="ns30:CancelFeatureTTOProvABCS" operation="process" inputVariable="InvokeCancelFeatureInputVariable" outputVariable="InvokeCancelFeatureOutputVariable"/>
                                <if name="If_SuccessOrNot">
                                  <documentation>
                                    <![CDATA[if success]]>
                                  </documentation>
                                  <condition>$InvokeCancelFeatureOutputVariable.payload/ns71:pReqRes/ns62:RETURN_CODE = '100'</condition>
                                  <empty name="EmptySuccess"/>
                                  <else>
                                    <documentation>
                                      <![CDATA[NO]]>
                                    </documentation>
                                    <sequence name="SequenceFaultHandler" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                      <assign name="AssignFaultHandler">
                                        <copy ignoreMissingFromData="yes">
                                          <from>$InvokeCancelFeatureOutputVariable.payload/ns71:pReqRes/ns62:RETURN_CODE</from>
                                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                        </copy>
                                        <copy ignoreMissingFromData="yes">
                                          <from>$InvokeCancelFeatureOutputVariable.payload/ns71:pReqRes/ns62:RETURN_MESSAGE</from>
                                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                        </copy>
                                      </assign>
                                      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                                    </sequence>
                                  </else>
                                </if>
                              </sequence>
                            </if>
                            <else>
                              <documentation>
                                <![CDATA[NO]]>
                              </documentation>
                              <sequence name="SequenceFaultHandler" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <assign name="AssignFaultHandler">
                                  <copy ignoreMissingFromData="yes">
                                    <from>'106'</from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                  </copy>
                                  <copy ignoreMissingFromData="yes">
                                    <from>'externalcampaign tag or value not found.'</from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                  </copy>
                                </assign>
                                <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                              </sequence>
                            </else>
                          </if>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <sequence name="SequenceFaultHandler" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <assign name="AssignFaultHandler">
                                <copy ignoreMissingFromData="yes">
                                  <from>'105'</from>
                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>'tt_pstnno veya tt_fibervoiceno not found.'</from>
                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                </copy>
                              </assign>
                              <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                            </sequence>
                          </else>
                        </if>
                        <else>
                          <documentation>
                            <![CDATA[NO]]>
                          </documentation>
                          <empty name="Empty"/>
                        </else>
                      </if>
                    </else>
                  </if>
                </scope>
                <scope name="ScopeCr1760NewSSO">
                  <variables>
                    <variable name="actvItemCount" type="xsd:int"/>
                    <variable name="deactvItemCount" type="xsd:int"/>
                    <variable name="provServiceCode" type="xsd:string"/>
                    <variable name="provServiceCodeAdsl" type="xsd:string"/>
                    <variable name="provServiceCodeVdsl" type="xsd:string"/>
                    <variable name="provServiceCodeNdsl" type="xsd:string"/>
                    <variable name="provServiceCodeNvdsl" type="xsd:string"/>
                    <variable name="provServiceCodeGshdsl" type="xsd:string"/>
                    <variable name="provServiceCodeFiber" type="xsd:string"/>
                    <variable name="provServiceCodeNfiber" type="xsd:string"/>
                    <variable name="provServiceCodeAdslt11" type="xsd:string"/>
                    <variable name="provServiceCodeVdslt11" type="xsd:string"/>
                    <variable name="provServiceCodeNdslt11" type="xsd:string"/>
                    <variable name="provServiceCodeNvdslt11" type="xsd:string"/>
                    <variable name="provServiceCodeFttx" type="xsd:string"/>
                    <variable name="provServiceCodeNFttx" type="xsd:string"/>
                  </variables>
                  <faultHandlers>
                    <catch faultName="bpws:selectionFailure">
                      <sequence name="SequenceSelectionFailure" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignFaultHandler">
                          <copy>
                            <from>'112'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy>
                            <from>"Selection failure!"</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catch>
                    <catchAll>
                      <sequence name="SequenceCatchAll" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <assign name="AssignFaultHandler">
                          <copy ignoreMissingFromData="yes">
                            <from>'111'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                          </copy>
                          <copy ignoreMissingFromData="yes">
                            <from>'Unable to access CR_STATUS table!'</from>
                            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable" outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                      </sequence>
                    </catchAll>
                  </faultHandlers>
                  <if name="If17">
                    <documentation>
                      <![CDATA[CR 1760 is OK]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','1760','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="Empty"/>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <sequence name="Sequence20">
                        <if name="If16">
                          <documentation>
                            <![CDATA[IF : ACTION_REASON_CODE = PRODUCT_TRANSFORM]]>
                          </documentation>
                          <condition>$inputVariable.payload/ns63:RequestInfo/ns62:ACTION_REASON_CODE = 'PRODUCT_TRANSFORM'</condition>
                          <sequence name="Sequence15">
                            <assign name="AssignProvServiceCodeVariables">
                              <copy>
                                <from>'tt_adslinternetservice'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeAdsl</to>
                              </copy>
                              <copy>
                                <from>'tt_vdslinternetservice'	</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeVdsl</to>
                              </copy>
                              <copy>
                                <from>'tt_ndslinternetservice'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNdsl</to>
                              </copy>
                              <copy>
                                <from>'tt_nvdslinternetservice'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNvdsl</to>
                              </copy>
                              <copy>
                                <from>'tt_gshdslinternetservice'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeGshdsl</to>
                              </copy>
                              <copy>
                                <from>'tt_adslinternetservicet11'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeAdslt11</to>
                              </copy>
                              <copy>
                                <from>'tt_ndslinternetservicet11'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNdslt11</to>
                              </copy>
                              <copy>
                                <from>'tt_vdslinternetservicet11'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeVdslt11</to>
                              </copy>
                              <copy>
                                <from>'tt_nvdslinternetservicet11'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNvdslt11</to>
                              </copy>
                              <copy>
                                <from>'tt_fiberinternetservice'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeFttx</to>
                              </copy>
                              <copy>
                                <from>'tt_nfiberinternetservice'</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCodeNFttx</to>
                              </copy>
                            </assign>
                            <assign name="AssignActivationItemCount">
                              <copy ignoreMissingFromData="yes">
                                <from>count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS)</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actvItemCount</to>
                              </copy>
                            </assign>
                            <while name="ForeachItem">
                              <condition>$actvItemCount &gt;= number(1)</condition>
                              <sequence name="Sequence16"
                                                           xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <if name="If18">
         <documentation>
            <![CDATA[if: Item Has Provision Service Code]]>
         </documentation>
         <condition>count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actvItemCount]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE)</condition>
         <assign name="AssignProvServiceCode">
            <copy ignoreMissingFromData="yes">
               <from>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actvItemCount]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE</from>
               <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCode</to>
            </copy>
         </assign>
         <else>
            <documentation>
               <![CDATA[NO]]>
            </documentation>
            <assign name="AssignNoSErviceCode">
               <copy>
                  <from>'XXX'</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provServiceCode</to>
               </copy>
            </assign>
         </else>
      </if>
      <if name="If_DslProduct">
         <documentation>
            <![CDATA[DSL Product]]>
         </documentation>
         <condition>$provServiceCode = $provServiceCodeAdsl or $provServiceCode = $provServiceCodeVdsl or $provServiceCode = $provServiceCodeNdsl or $provServiceCode = $provServiceCodeNvdsl or $provServiceCode = $provServiceCodeGshdsl or $provServiceCode = $provServiceCodeAdslt11 or $provServiceCode = $provServiceCodeNdslt11 or $provServiceCode = $provServiceCodeVdslt11 or $provServiceCode = $provServiceCodeNvdslt11 or $provServiceCode = $provServiceCodeFttx or $provServiceCode = $provServiceCodeNFttx</condition>
         <sequence name="Sequence17">
            <assign name="AssignDeActvItemCount">
               <copy ignoreMissingFromData="yes">
                  <from>count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS)</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$deactvItemCount</to>
               </copy>
            </assign><while name="ForEachDeactivatedorders">
                                      <condition>$deactvItemCount &gt;= number(1)</condition><sequence name="Sequence42"><if name="If44"
                                                                                                                             xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                     <documentation>
                        <![CDATA[if productIds Matches]]>
                     </documentation>
                     <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actvItemCount]/ns64:PRODUCT/ns73:TRANSFERRED_PRODUCT_KEY/ns73:PRODUCT_ID = $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$deactvItemCount]/ns64:PRODUCT/ns73:TRANSFERRED_PRODUCT_KEY/ns73:PRODUCT_ID</condition>
                     <sequence name="Sequence18">
                        <assign name="AssignSSOBundleInput">
                           <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeSSOBundleChangeInputVariable.payload</to>
                           </copy>
                           <extensionAssignOperation>
                              <bpelx:remove xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                 <bpelx:target expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeSSOBundleChangeInputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS</bpelx:target>
                              </bpelx:remove>
                           </extensionAssignOperation>
                           <extensionAssignOperation>
                              <bpelx:remove xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                 <bpelx:target expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeSSOBundleChangeInputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS</bpelx:target>
                              </bpelx:remove>
                           </extensionAssignOperation>
                           <extensionAssignOperation>
                              <bpelx:append ignoreMissingFromData="yes"
                                            xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                 <bpelx:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actvItemCount]</bpelx:from>
                                 <bpelx:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeSSOBundleChangeInputVariable.payload/ns63:ChangeOrder</bpelx:to>
                              </bpelx:append>
                           </extensionAssignOperation>
                           <extensionAssignOperation>
                              <bpelx:append ignoreMissingFromData="yes"
                                            xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                 <bpelx:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[$deactvItemCount]</bpelx:from>
                                 <bpelx:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeSSOBundleChangeInputVariable.payload/ns63:ChangeOrder</bpelx:to>
                              </bpelx:append>
                           </extensionAssignOperation>
                        </assign>
                        <invoke name="InvokeSSOBundleChange" bpelx:invokeAsDetail="no"
                                partnerLink="BundleChangeOrdeToSSOProvABCS"
                                portType="ns42:BundleChangeOrdeToSSOProvABCS" operation="process"
                                inputVariable="InvokeSSOBundleChangeInputVariable"
                                outputVariable="InvokeSSOBundleChangeOutputVariable"
                                xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                     </sequence>
                  </if><assign name="DecreaseDeactivatedOrder" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy ignoreMissingFromData="yes">
         <from>$deactvItemCount - 1</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$deactvItemCount</to>
      </copy></assign></sequence></while>
            
         </sequence>
      </if>
   <assign name="DecreaseActvItem">
                                  <copy ignoreMissingFromData="yes">
                                    <from>$actvItemCount - 1</from>
                                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actvItemCount</to>
                                  </copy>
                                </assign></sequence></while>
                          </sequence>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <empty name="Empty"/>
                          </else>
                        </if>
                      </sequence>
                    </else>
                  </if>
                </scope>
                <!--<scope name="ScopeActivatedManageTTS">
                  <sequence name="SequenceActivatedManageTTS">
                    <if name="If_CR1244">
                      <documentation>
                        <![CDATA[CRStatus (1244) = OFF]]>
                      </documentation>
                      <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','1244','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                      <empty name="Empty_CR_1244_OFF"/>
                      <else>
                        <documentation>
                          <![CDATA[ON]]>
                        </documentation>
                        <sequence name="Sequence38">
                          <assign name="AssignTempInput">
                            <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$tempInput</to>
                            </copy>
                            <copy ignoreMissingFromData="yes">
                              <from>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$inputVariable.payload/ns63:ChangeOrder</to>
                            </copy>
                          </assign>
                          <scope name="ScopeActivated">
                            <variables>
                              <variable name="MAIndexAc" type="xsd:integer"/>
                              <variable name="AcCityID" type="xsd:string"/>
                            </variables>
                            <sequence name="Sequence39">
                              <if name="If_Service">
                                <documentation>
                                  <![CDATA[if service product exists]]>
                                </documentation>
                                <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"]) &gt; 0</condition>
                                <forEach parallel="yes" counterName="actIndex" name="ForEach_N">
                                  <startCounterValue>1</startCounterValue>
                                  <finalCounterValue>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS)</finalCounterValue>
                                  <scope name="Scope2633">
                                    <if name="If_ProvisionServiceCode">
                                      <documentation>
                                        <![CDATA[if provisionservicecode exists]]>
                                      </documentation>
                                      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11" or$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11" or$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11" or$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11" or$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice" or$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice" or$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice" or$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice" or$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice" or$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice" or ($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice" and dvm:lookupValue("oramds:/apps/datamodel/DVM/ManageServicesAvailable.dvm","ServiceName","ManageProductTTOProvABCSMetro","Endpoint","1") = 1)</condition>
                                      <sequence name="Sequence">
                                        <scope name="ScopeManageProduct">
                                          <variables>
                                            <variable name="indexAcHizmetNo" type="xsd:integer"/>
                                            <variable name="transferredProductId" type="xsd:string"/>
                                            <variable name="InvokeActivatedManageProductInputVariable" messageType="ns25:ManageProductTTOProvEBFRequestMessage"/>
                                          </variables>
                                          <sequence name="SequenceManageProduct">
                                            <assign name="TransformManageProductInput">
                                              <bpelx:annotation>
                                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                              </bpelx:annotation>
                                              <copy>
                                                <from>ora:doXSLTransformForDoc("../Transformations/ActivatedManageProductInput.xsl", $inputVariable.payload)</from>
                                                <to variable="InvokeActivatedManageProductInputVariable" part="payload"/>
                                              </copy>
                                            </assign>
                                            <assign name="AssignIndexAcHizmetNo">
                                              <copy>
                                                <from>"0"</from>
                                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
                                              </copy>
                                            </assign>
                                            <if name="If_HizmetNo">
                                              <documentation>
                                                <![CDATA[tt_line_number exists]]>
                                              </documentation>
                                              <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                                              <if name="If4">
                                                <documentation>
                                                  <![CDATA[deac(tt_line_number) = ac(tt_line_number)]]>
                                                </documentation>
                                                <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE = $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</condition>
                                                <empty name="Empty"/>
                                                <else>
                                                  <documentation>
                                                    <![CDATA[NO]]>
                                                  </documentation>
                                                  <assign name="AssignOrderType">
                                                    <copy>
                                                      <from>"1"</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
                                                    </copy>
                                                    <copy>
                                                      <from>"A"</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
                                                    </copy>
                                                    <copy>
                                                      <from>"1"</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
                                                    </copy>
                                                  </assign>
                                                </else>
                                              </if>
                                              <elseif>
                                                <documentation>
                                                  <![CDATA[tt_xdslno exists]]>
                                                </documentation>
                                                <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                                                <if name="If4" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                                  <documentation>
                                                    <![CDATA[deac(tt_xdslno) = ac(tt_xdslno)]]>
                                                  </documentation>
                                                  <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE = $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</condition>
                                                  <empty name="Empty"/>
                                                  <else>
                                                    <documentation>
                                                      <![CDATA[NO]]>
                                                    </documentation><assign name="AssignOrderType"
                                                                            xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
      </copy>
      <copy>
         <from>"A"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
      </copy>
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
      </copy>
   </assign></else>
                                                </if>
                                              </elseif>
                                            </if>
                                            <if name="If6">
                                              <documentation>
                                                <![CDATA[indexAcHizmetNo = 1]]>
                                              </documentation>
                                              <condition>$indexAcHizmetNo ="1"</condition>
                                              <scope name="Scope2634">
                                                <sequence name="Sequence40">
                                                  <assign name="AssignServiceType">
                                                    <copy ignoreMissingFromData="yes">
                                                      <from>dvm:lookupValue("oramds:/apps/datamodel/DVM/ProductTypeMapping.dvm","MTS_VALUE",$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE,"TTS_VALUE","30")</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:serviceType</to>
                                                    </copy>
                                                    <copy ignoreMissingFromData="yes">
                                                      <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:BillingAccount/ns75:INVOICE_ADDRESSID/ns68:CITY_ID</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$AcCityID</to>
                                                    </copy>
                                                    <copy ignoreMissingFromData="yes">
                                                      <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:productSerialNumber</to>
                                                    </copy>
                                                    <copy ignoreMissingFromData="yes">
                                                      <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:ACTION_DATE</from>
                                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:startDate</to>
                                                    </copy>
                                                  </assign>
                                                  <if name="If_TransferredProductId">
                                                    <documentation>
                                                      <![CDATA[TransferredProductId]]>
                                                    </documentation>
                                                    <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:TRANSFERRED_PRODUCT_KEY/ns73:PRODUCT_ID</condition>
                                                    <assign name="AssignTransferredProductId">
                                                      <copy ignoreMissingFromData="yes">
                                                        <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:TRANSFERRED_PRODUCT_KEY/ns73:PRODUCT_ID</from>
                                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$transferredProductId</to>
                                                      </copy>
                                                    </assign>
                                                  </if>
                                                  <if name="If_ServiceNumber">
                                                    <documentation>
                                                      <![CDATA[if item is DSL]]>
                                                    </documentation>
                                                    <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice"</condition>
                                                    <assign name="AssignServiceNumber">
                                                      <copy ignoreMissingFromData="yes">
                                                        <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                                                      </copy>
                                                      <copy ignoreMissingFromData="yes">
                                                        <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</from>
                                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
                                                      </copy>
                                                    </assign>
                                                    <elseif>
                                                      <documentation>
                                                        <![CDATA[if item is MetroEthernet]]>
                                                      </documentation>
                                                      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"</condition><assign name="AssignServiceNumber"
                                                                                                                                                                                                                       xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
   <copy ignoreMissingFromData="yes">
         <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
      </copy><copy ignoreMissingFromData="yes">
         <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
      </copy></assign></elseif>
                                                    <elseif>
                                                      <documentation>
                                                        <![CDATA[if item is IPTV]]>
                                                      </documentation>
                                                      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_iptvservice"</condition><assign name="AssignServiceNumber"
                                                                                                                                                                                                                         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
   <copy ignoreMissingFromData="yes">
         <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
      </copy><copy ignoreMissingFromData="yes">
         <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
      </copy></assign></elseif>
                                                    <elseif>
                                                      <documentation>
                                                        <![CDATA[if item is DTH]]>
                                                      </documentation>
                                                      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"</condition><assign name="AssignServiceNumber"
                                                                                                                                                                                                                       xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
   <copy ignoreMissingFromData="yes">
         <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
      </copy><copy ignoreMissingFromData="yes">
         <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
      </copy></assign></elseif>
                                                    <elseif>
                                                      <documentation>
                                                        <![CDATA[if item is THK]]>
                                                      </documentation>
                                                      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice"</condition><assign name="AssignServiceNumber"
                                                                                                                                                                                                                        xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
   <copy ignoreMissingFromData="yes">
         <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
      </copy><copy ignoreMissingFromData="yes">
         <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
      </copy></assign></elseif>
                                                  </if>
                                                  <if name="If_AcCityID">
                                                    <documentation>
                                                      <![CDATA[string- length(AcCityID) = 1]]>
                                                    </documentation>
                                                    <condition>string-length($AcCityID) = 1</condition>
                                                    <assign name="AssignMudurlukID">
                                                      <copy ignoreMissingFromData="yes">
                                                        <from>concat("199900",$AcCityID)</from>
                                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                                                      </copy>
                                                      <copy>
                                                        <from>concat("0",$AcCityID)</from>
                                                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                                                      </copy>
                                                    </assign>
                                                    <elseif>
                                                      <documentation>
                                                        <![CDATA[string-length(bpws:getVariableData('AcCityID')) = 2]]>
                                                      </documentation>
                                                      <condition>string-length($AcCityID) = 2</condition><assign name="AssignMudurlukID"
                                                                                                                 xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
   <copy ignoreMissingFromData="yes">
         <from>concat("19990",$AcCityID)</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
      </copy><copy>
         <from>$AcCityID</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
      </copy></assign></elseif>
                                                    <else>
                                                      <documentation>
                                                        <![CDATA[NO]]>
                                                      </documentation><assign name="AssignMudurlukID"
                                                                              xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
   <copy ignoreMissingFromData="yes">
         <from>"1999999"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
      </copy><copy>
         <from>"999"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
      </copy></assign></else>
                                                  </if>
                                                  <invoke name="InvokeManageProduct" bpelx:invokeAsDetail="no" partnerLink="ManageProductTTOProvEBF" portType="ns25:ManageProductTTOProvEBF" operation="process" inputVariable="InvokeActivatedManageProductInputVariable"/>
                                                </sequence>
                                              </scope>
                                              <else>
                                                <documentation>
                                                  <![CDATA[NO]]>
                                                </documentation>
                                                <empty name="Empty"/>
                                              </else>
                                            </if>
                                          </sequence>
                                        </scope>
                                      </sequence>
                                      <else>
                                        <documentation>
                                          <![CDATA[NO]]>
                                        </documentation>
                                        <empty name="Empty"/>
                                      </else>
                                    </if>
                                  </scope>
                                </forEach>
                                <else>
                                  <documentation>
                                    <![CDATA[NO]]>
                                  </documentation>
                                  <empty name="Empty"/>
                                </else>
                              </if>
                            </sequence>
                          </scope>
                        </sequence>
                      </else>
                    </if>
                  </sequence>
                </scope>-->
                <scope name="ScopeActivatedManageATS" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <faultHandlers>
         <catch faultName="bpws:selectionFailure">
            <sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy>
            <from>'112'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy>
            <from>"Selection failure!"</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence>
         </catch>
         <catchAll>
            <sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy ignoreMissingFromData="yes">
            <from>'111'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy ignoreMissingFromData="yes">
            <from>'Unable to access CR_STATUS table!'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence>
         </catchAll>
      </faultHandlers>
      <sequence name="SequenceActivatedManageATS">
         <if name="If_CR2625variable">
            <documentation>
               <![CDATA[if cr2625variable = number(0)]]>
            </documentation>
            <condition>$cr2625variable = number(0)</condition>
            <empty name="EmptyContinue"/>
            <else>
               <documentation>
                  <![CDATA[ON]]>
               </documentation>
               <sequence name="Sequence">
                  <assign name="AssignTempInput">
                     <copy ignoreMissingFromData="yes">
                        <from>$inputVariable.payload</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$tempInput</to>
                     </copy>
                     <copy ignoreMissingFromData="yes">
                        <from>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$inputVariable.payload/ns63:ChangeOrder</to>
                     </copy>
                  </assign>
                  <scope name="ScopeActivated">
                     <variables>
                        <variable name="MAIndexAc" type="xsd:integer"/>
                        <variable name="AcCityID" type="xsd:string"/>
                     </variables>
                     <sequence name="SequenceActivatedProducts">
                        <if name="If_Service">
                           <documentation>
                              <![CDATA[if service product exists]]>
                           </documentation>
                           <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice"]) &gt; 0 or count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"]) &gt; 0</condition>
                           <forEach parallel="yes" counterName="actIndex" name="ForEach_N">
                              <startCounterValue>1</startCounterValue>
                              <finalCounterValue>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS)</finalCounterValue>
                              <scope name="Scope2633">
                                 <if name="If_ProvisionServiceCode">
                                    <documentation>
                                       <![CDATA[if provisionservicecode exists]]>
                                    </documentation>
                                    <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservicet11" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_fiberinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nfiberinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ndslinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_adslinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_vdslinternetservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice" or 
$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_iptvservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis" or
$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice" or 
$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice" or ($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice" and dvm:lookupValue("oramds:/apps/datamodel/DVM/ManageServicesAvailable.dvm","ServiceName","ManageProductTTOProvABCSMetro","Endpoint","1") = 1)</condition>
                                    <scope name="ScopeActivatedManageProduct"
                                           xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <variables>
         <variable name="indexAcHizmetNo" type="xsd:integer"/>
         <variable name="transferredProductId" type="xsd:string"/>
         <variable name="InvokeActivatedManageProductInputVariable"
                   messageType="ns25:ManageProductTTOProvEBFRequestMessage"/>
         <variable name="InvokeActivatedManageProductATSviaTTOInputVariable"
                   messageType="ns46:ManageProductATSviaTTOProvEBFRequestMessage"/>
      </variables>
      <sequence name="SequenceActivatedManageProduct">
         <assign name="TransformManageProductInput">
            <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
               <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
            </bpelx:annotation>
            <copy>
               <from>ora:doXSLTransformForDoc("../Transformations/ActivatedManageProductInput.xsl", $inputVariable.payload)</from>
               <to variable="InvokeActivatedManageProductInputVariable" part="payload"/>
            </copy>
         </assign>
         <assign name="AssignIndexAcHizmetNo">
            <copy>
               <from>"0"</from>
               <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
            </copy>
         </assign>
         <if name="If_ReasonCode">
            <documentation>
               <![CDATA[if REAL_SALE]]>
            </documentation>
            <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:REASON_CODE = 'REAL_SALE'</condition>
            <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
               <copy>
                  <from>"1"</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
               </copy>
               <copy>
                  <from>"A"</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
               </copy>
               <copy>
                  <from>"1"</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
               </copy>
            </assign>
            <else>
               <documentation>
                  <![CDATA[NO]]>
               </documentation>
               <if name="If_HizmetNo" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <documentation>
                     <![CDATA[tt_line_number exists]]>
                  </documentation>
                  <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and 
count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                  <if name="If4">
                     <documentation>
                        <![CDATA[deac(tt_line_number) = ac(tt_line_number)]]>
                     </documentation>
                     <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE = 
$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</condition>
                     <empty name="Empty"/>
                     <else>
                        <documentation>
                           <![CDATA[NO]]>
                        </documentation>
                        <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
      </copy>
      <copy>
         <from>"A"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
      </copy>
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
      </copy>
   </assign>
                     </else>
                  </if>
                  <elseif>
                     <documentation>
                        <![CDATA[tt_xdslno exists]]>
                     </documentation>
                     <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and 
count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                     <if name="If5" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         <![CDATA[deac(tt_line_number) = ac(tt_line_number)]]>
      </documentation>
      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE = 
$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</condition>
      <empty name="Empty"/>
      <else>
         <documentation>
            <![CDATA[NO]]>
         </documentation>
         <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
      </copy>
      <copy>
         <from>"A"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
      </copy>
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
      </copy>
   </assign>
      </else>
   </if>
                  </elseif>
                  <elseif>
                     <documentation>
                        <![CDATA[tt_iptv_subsno exists]]>
                     </documentation>
                     <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and 
count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                     <if name="If4" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         <![CDATA[deac(tt_line_number) = ac(tt_line_number)]]>
      </documentation>
      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE = 
$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE</condition>
      <empty name="Empty"/>
      <else>
         <documentation>
            <![CDATA[NO]]>
         </documentation>
         <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
      </copy>
      <copy>
         <from>"A"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
      </copy>
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
      </copy>
   </assign>
      </else>
   </if>
                  </elseif>
                  <elseif>
                     <documentation>
                        <![CDATA[tt_dth_subsno exists]]>
                     </documentation>
                     <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and 
count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                     <if name="If5" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         <![CDATA[deac(tt_line_number) = ac(tt_line_number)]]>
      </documentation>
      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE = 
$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</condition>
      <empty name="Empty"/>
      <else>
         <documentation>
            <![CDATA[NO]]>
         </documentation>
         <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
      </copy>
      <copy>
         <from>"A"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
      </copy>
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
      </copy>
   </assign>
      </else>
   </if>
                  </elseif>
                  <elseif>
                     <documentation>
                        <![CDATA[tt_thkpstnno exists]]>
                     </documentation>
                     <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0 and 
count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE) &gt; 0</condition>
                     <if name="If5" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         <![CDATA[deac(tt_line_number) = ac(tt_line_number)]]>
      </documentation>
      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE = 
$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE</condition>
      <empty name="Empty"/>
      <else>
         <documentation>
            <![CDATA[NO]]>
         </documentation>
         <assign name="AssignOrderType" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderType</to>
      </copy>
      <copy>
         <from>"A"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:orderSubType</to>
      </copy>
      <copy>
         <from>"1"</from>
         <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$indexAcHizmetNo</to>
      </copy>
   </assign>
      </else>
   </if>
                  </elseif>
               </if>
            </else>
         </if>
         <if name="If6">
            <documentation>
               <![CDATA[indexAcHizmetNo = 1]]>
            </documentation>
            <condition>$indexAcHizmetNo ="1"</condition>
            <scope name="ScopeAcProdcut">
               <sequence name="SequenceAcProduct">
                  <assign name="AssignServiceType">
                     <copy ignoreMissingFromData="yes">
                        <from>dvm:lookupValue("oramds:/apps/datamodel/DVM/ProductTypeMapping.dvm","MTS_VALUE",$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE,"TTS_VALUE","30")</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:serviceType</to>
                     </copy>
                     <copy ignoreMissingFromData="yes">
                        <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:BillingAccount/ns75:INVOICE_ADDRESSID/ns68:CITY_ID</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$AcCityID</to>
                     </copy>
                     <copy ignoreMissingFromData="yes">
                        <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:productSerialNumber</to>
                     </copy>
                     <copy ignoreMissingFromData="yes">
                        <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:ACTION_DATE</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:startDate</to>
                     </copy>
                  </assign>
                  <if name="If_TransferredProductId">
                     <documentation>
                        <![CDATA[TransferredProductId]]>
                     </documentation>
                     <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:TRANSFERRED_PRODUCT_KEY/ns73:PRODUCT_ID</condition>
                     <assign name="AssignTransferredProductId">
                        <copy ignoreMissingFromData="yes">
                           <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:TRANSFERRED_PRODUCT_KEY/ns73:PRODUCT_ID</from>
                           <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$transferredProductId</to>
                        </copy>
                     </assign>
                  </if>
                  <if name="If_ServiceNumber">
                     <documentation>
                        <![CDATA[if item is DSL]]>
                     </documentation>
                     <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_nvdslinternetservice"</condition>
                     <assign name="AssignServiceNumber">
                        <copy ignoreMissingFromData="yes">
                           <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</from>
                           <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                        </copy>
                        <copy ignoreMissingFromData="yes">
                           <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</from>
                           <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
                        </copy>
                     </assign>
                     <elseif>
                        <documentation>
                           <![CDATA[if item is MetroEthernet]]>
                        </documentation>
                        <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"</condition>
                        <assign name="AssignServiceNumber"
                                xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                           <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                           </copy>
                           <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_line_number"]/ns73:PRODUCT_CHAR_VALUE</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
                           </copy>
                        </assign>
                     </elseif>
                     <elseif>
                        <documentation>
                           <![CDATA[if item is IPTV]]>
                        </documentation>
                        <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_iptvservice"</condition>
                        <assign name="AssignServiceNumber"
                                xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                           <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                           </copy>
                           <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_iptv_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
                           </copy>
                        </assign>
                     </elseif>
                     <elseif>
                        <documentation>
                           <![CDATA[if item is DTH]]>
                        </documentation>
                        <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_dthservis"</condition>
                        <assign name="AssignServiceNumber"
                                xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                           <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                           </copy>
                           <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_dth_subsno"]/ns73:PRODUCT_CHAR_VALUE</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
                           </copy>
                        </assign>
                     </elseif>
                     <elseif>
                        <documentation>
                           <![CDATA[if item is THK]]>
                        </documentation>
                        <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_thkservice" or $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"</condition>
                        <assign name="AssignServiceNumber"
                                xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                           <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_VALUE_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SERVICE_NUMBER"]/ns63:value</to>
                           </copy>
                           <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_KEY/ns73:PRODUCT_ID = $transferredProductId]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_thkpstnno"]/ns73:PRODUCT_CHAR_VALUE</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "PREVIOUS_SERVICE_NUMBER"]/ns63:value</to>
                           </copy>
                        </assign>
                     </elseif>
                  </if>
                  <if name="If_AcCityID">
                     <documentation>
                        <![CDATA[string- length(AcCityID) = 1]]>
                     </documentation>
                     <condition>string-length($AcCityID) = 1</condition>
                     <assign name="AssignMudurlukID">
                        <copy ignoreMissingFromData="yes">
                           <from>concat("199900",$AcCityID)</from>
                           <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                        </copy>
                        <copy>
                           <from>concat("0",$AcCityID)</from>
                           <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                        </copy>
                     </assign>
                     <elseif>
                        <documentation>
                           <![CDATA[string-length(bpws:getVariableData('AcCityID')) = 2]]>
                        </documentation>
                        <condition>string-length($AcCityID) = 2</condition>
                        <assign name="AssignMudurlukID"
                                xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                           <copy ignoreMissingFromData="yes">
                              <from>concat("19990",$AcCityID)</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                           </copy>
                           <copy>
                              <from>$AcCityID</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                           </copy>
                        </assign>
                     </elseif>
                     <else>
                        <documentation>
                           <![CDATA[NO]]>
                        </documentation>
                        <assign name="AssignMudurlukID"
                                xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                           <copy ignoreMissingFromData="yes">
                              <from>"1999999"</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "DIRECTORY_CODE"]/ns63:value</to>
                           </copy>
                           <copy>
                              <from>"999"</from>
                              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "CITY_DIRECTORATE_CODE"]/ns63:value</to>
                           </copy>
                        </assign>
                     </else>
                  </if>
                  <sequence name="SequenceManageProductATSviaTTO">
                     <assign name="TransformActivatedManageProductAtsViaTtoInput">
                        <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                           <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                        </bpelx:annotation>
                        <copy>
                           <from>ora:doXSLTransformForDoc("../Transformations/TransformActivatedManageProductAtsViaTtoInput.xsl", $inputVariable.payload, "InvokeActivatedManageProductInputVariable.payload", $InvokeActivatedManageProductInputVariable.payload)</from>
                           <to variable="InvokeActivatedManageProductATSviaTTOInputVariable" part="payload"/>
                        </copy>
                     </assign>
                     <assign name="AssignManageProductATSviaTTO">
                        <copy>
                           <from>"MTS"</from>
                           <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductATSviaTTOInputVariable.payload/ns63:ManageProduct/ns63:ProductAttribute[ns63:name = "SOURCE_SYSTEM_CODE"]/ns63:value</to>
                        </copy>
                        <copy ignoreMissingFromData="yes">
                           <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SALES_ORDER_ITEM_ID</from>
                           <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductATSviaTTOInputVariable.payload/ns63:RequestInfo/ns62:TRANSACTION_ID</to>
                        </copy>
                        <copy ignoreMissingFromData="yes">
                           <from>dvm:lookupValue('oramds:/apps/datamodel/DVM/MtsToAtsMapping.dvm','MtsId',$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[$actIndex]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE,'AtsId','','ElementName','ServiceType')</from>
                           <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeActivatedManageProductATSviaTTOInputVariable.payload/ns63:ManageProduct/ns63:serviceType</to>
                        </copy>
                     </assign>
                     <invoke name="InvokeManageProductATSviaTTO" partnerLink="ManageProductATSviaTTOProvEBF"
                             portType="ns46:ManageProductATSviaTTOProvEBF" operation="process"
                             inputVariable="InvokeActivatedManageProductATSviaTTOInputVariable"
                             bpelx:invokeAsDetail="no" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                  </sequence>
               </sequence>
            </scope>
            <else>
               <documentation>
                  <![CDATA[NO]]>
               </documentation>
               <empty name="Empty"/>
            </else>
         </if>
      </sequence>
   </scope>
                                    <else>
                                       <documentation>
                                          <![CDATA[NO]]>
                                       </documentation>
                                       <empty name="Empty"/>
                                    </else>
                                 </if>
                              </scope>
                           </forEach>
                           <else>
                              <documentation>
                                 <![CDATA[NO]]>
                              </documentation>
                              <empty name="Empty"/>
                           </else>
                        </if>
                     </sequence>
                  </scope>
                  <assign name="AssignInput">
                     <copy ignoreMissingFromData="yes">
                        <from>$tempInput</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$inputVariable.payload</to>
                     </copy>
                  </assign>
               </sequence>
            </else>
         </if>
      </sequence>
   </scope>
                <scope name="ScopeCR1890" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <faultHandlers>
                    <catch faultName="bpws:selectionFailure">
                      <sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy>
            <from>'112'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy>
            <from>"Selection failure!"</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence>
                    </catch>
                    <catchAll>
                      <sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy ignoreMissingFromData="yes">
            <from>'111'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy ignoreMissingFromData="yes">
            <from>'Unable to access CR_STATUS table!'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence>
                    </catchAll>
                  </faultHandlers>
                  <if name="If_CR1890Status">
                    <documentation>
                      <![CDATA[CrStatus (1890) = OFF]]>
                    </documentation>
                    <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','1890','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                    <empty name="EmptyContinue"/>
                    <else>
                      <documentation>
                        <![CDATA[ON]]>
                      </documentation>
                      <scope name="ScopeDeactivatePostpaidAVEACampaign">
                        <if name="If_AveaCampaignProduct">
                          <documentation>
                            <![CDATA[if avea prod only in deactivation set]]>
                          </documentation>
                          <condition>count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "AVEA_MSISDN"]) &gt; 0 and count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "AVEA_MSISDN"]) = 0</condition>
                          <sequence name="SequenceProcessDeactivatePostpaidAVEACampaign">
                            <assign name="TransformDeactivatePostpaidCampaignAVEAInput">
                              <bpelx:annotation>
                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:doXSLTransformForDoc("../Transformations/TransformDeactivatePostpaidCampaignAVEAInput.xsl", $InvokeFulfillmentEBS_VAS_InputVariable.payload)</from>
                                <to variable="InvokeDeactivatePostpaidCampaignAVEAInputVariable" part="payload"/>
                              </copy>
                            </assign>
                            <assign name="AssignDeactivationOrderItem">
                              <copy ignoreMissingFromData="yes">
                                <from>$InvokeFulfillmentEBS_VAS_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT[ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "AVEA_MSISDN"]</from>
                                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeDeactivatePostpaidCampaignAVEAInputVariable.payload/ns63:CancelOrder/ns64:DEACTIVATED_ORDERS</to>
                              </copy>
                            </assign>
                            <invoke name="InvokeDeactivatePostpaidCampaignAVEA" bpelx:invokeAsDetail="no"
                                    partnerLink="DeactivatePostpaidCampaignAVEAProvABCS"
                                    portType="ns26:DeactivatePostpaidCampaignAVEAProvABCS" operation="process"
                                    inputVariable="InvokeDeactivatePostpaidCampaignAVEAInputVariable"
                                    outputVariable="InvokeDeactivatePostpaidCampaignAVEAOutputVariable"/>
                            <if name="If_DeactivatePostpaidCampaignAveaResponse">
                              <documentation>
                                <![CDATA[if success]]>
                              </documentation>
                              <condition>$InvokeDeactivatePostpaidCampaignAVEAOutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE = '100'</condition>
                              <empty name="EmptySuccess"/>
                              <else>
                                <documentation>
                                  <![CDATA[NO]]>
                                </documentation>
                                <sequence name="SequenceDeactivatePostpaidCampaignAVEAFailed"
                                          xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         
         
      <copy ignoreMissingFromData="yes">
            <from>$InvokeDeactivatePostpaidCampaignAVEAOutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy><copy ignoreMissingFromData="yes">
            <from>$InvokeDeactivatePostpaidCampaignAVEAOutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy></assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence>
                              </else>
                            </if>
                          </sequence>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <empty name="EmptyNoAveaCampaignProduct"/>
                          </else>
                        </if>
                      </scope>
                    </else>
                  </if>
                </scope><scope name="ScopeCR2200" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <faultHandlers>
         <catch faultName="bpws:selectionFailure">
            <sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy>
            <from>'112'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy>
            <from>"Selection failure!"</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence>
         </catch>
         <catchAll>
            <sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy ignoreMissingFromData="yes">
            <from>'111'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy ignoreMissingFromData="yes">
            <from>'Unable to access CR_STATUS table!'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence>
         </catchAll>
      </faultHandlers>
      <if name="If_CRCR2200Status">
         <documentation>
            <![CDATA[CrStatus (1890) = OFF]]>
         </documentation>
         <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2200','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
         <empty name="EmptyContinue"/>
         <else>
            <documentation>
               <![CDATA[ON]]>
            </documentation>
            <scope name="ScopeAVEACampaign">
               <if name="If_AveaCampaignProduct">
                  <documentation>
                     
                  <![CDATA[if xdslno changes]]></documentation>
                  <condition>count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "MOBIL_MSISDN"]) &gt; 0 and count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "MOBIL_MSISDN"]) &gt; 0 and $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE != $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</condition>
                  <sequence name="SequenceConvertAdslAVEA">
                     
                     
                     
                     
                  <assign name="TransformConvertAdslAVEAInput">
                              <bpelx:annotation>
                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:doXSLTransformForDoc("../Transformations/TransformConvertAdslAVEAInput.xsl", $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload)</from>
                                <to variable="InvokeConvertAdslAVEAInputVariable" part="payload"/>
                              </copy>
                            </assign><invoke name="InvokeConvertAdslAVEA" bpelx:invokeAsDetail="no" partnerLink="ConvertAdslAVEAProvABCS"
                          portType="ns33:ConvertAdslAVEAProvABCS" operation="process"
                          inputVariable="InvokeConvertAdslAVEAInputVariable"
                          outputVariable="InvokeConvertAdslAVEAOutputVariable"/></sequence>
                  <elseif>
                            <documentation>
                              <![CDATA[if avea prod only in deactivation set]]>
                            </documentation>
                            <condition>count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "MOBIL_MSISDN"]) &gt; 0 and count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "MOBIL_MSISDN"]) = 0 </condition>
                            <sequence name="SequenceCancelCampaignAVEA">
                              <assign name="TransformCancelCampaignAVEAInput">
                                <bpelx:annotation>
                                  <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                </bpelx:annotation>
                                <copy>
                                  <from>ora:doXSLTransformForDoc("../Transformations/TransformCancelCampaignAveaInput.xsl", $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload)</from>
                                  <to variable="InvokeCancelCampaignAVEAInputVariable" part="payload"/>
                                </copy>
                              </assign>
                              <invoke name="InvokeCancelCampaignAVEA" bpelx:invokeAsDetail="no"
                                      partnerLink="CancelCampaignAVEAProvABCS"
                                      portType="ns32:CancelCampaignAVEAProvABCS" operation="process"
                                      inputVariable="InvokeCancelCampaignAVEAInputVariable"
                                      outputVariable="InvokeCancelCampaignAVEAOutputVariable"/>
                            </sequence>
                          </elseif><else>
                     <documentation>
                        <![CDATA[NO]]>
                     </documentation>
                     <empty name="EmptyNoAveaCampaignProduct"/>
                  </else>
               </if>
            </scope>
         </else>
      </if>
   </scope><scope name="ScopeCR2300" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <faultHandlers>
         <catch faultName="bpws:selectionFailure">
            <sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy>
            <from>'112'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy>
            <from>"Selection failure!"</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence>
         </catch>
         <catchAll>
            <sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy ignoreMissingFromData="yes">
            <from>'111'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy ignoreMissingFromData="yes">
            <from>'Unable to access CR_STATUS table!'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence>
         </catchAll>
      </faultHandlers>
      
   <sequence name="SequenceCR2300">
                    <if name="If_CR2300Status">
         <documentation>
            
         <![CDATA[CrStatus (2300) = OFF]]></documentation>
         <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2300','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
         <empty name="EmptyContinue"/>
         <else>
            <documentation>
               <![CDATA[ON]]>
            </documentation>
            <scope name="ScopeSaveTurkTelekomOrderDIGI">
               
            <sequence name="SequenceSaveTurkTelekomOrderDIGI">
                            <if name="If33">
                  <documentation>
                     
                  <![CDATA[If DigiturkCampaign New Sale]]></documentation>
                  <condition>count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "MOBIL_MSISDN"]) &gt; 0 and count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "MOBIL_MSISDN"]) &gt; 0 and $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE != $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "tt_xdslno"]/ns73:PRODUCT_CHAR_VALUE</condition>
                  <sequence name="SequenceProcessSaveTurkTelekomOrderDIGISale">
                     
                     
                     
                     
                  <assign name="TransformSaveTurkTelekomOrderDIGISaleInput">
                                  <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                  </bpelx:annotation>
                                  <copy>
                                    <from>ora:doXSLTransformForDoc("../Transformations/TransformSaveTurkTelekomOrderDIGIInput.xsl", $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload)</from>
                                    <to variable="SaveTurkTelekomOrderDIGIInputVariable" part="payload"/>
                                  </copy>
                                </assign><invoke name="InvokeSaveTurkTelekomOrderDIGISale"
                                                 partnerLink="SaveTurkTelekomOrderDIGIProvABCS"
                                                 portType="ns34:SaveTurkTelekomOrderDIGIProvABCS" operation="process"
                                                 inputVariable="SaveTurkTelekomOrderDIGIInputVariable"
                                                 outputVariable="InvokeSaveTurkTelekomOrderDIGIOutputVariable"
                                                 xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
                                                 bpelx:invokeAsDetail="no"/></sequence>
                  <elseif>
                                <documentation>
                                  <![CDATA[If DigiturkCampaign Cancelled]]>
                                </documentation>
                                <condition>count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "MOBIL_MSISDN"]) &gt; 0 and count($ReceiveFulfillmentEBS_VASCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = "MOBIL_MSISDN"]) = 0 </condition>
                                <sequence name="SequenceProcessSaveTurkTelekomOrderDIGICancel">
                                  <assign name="TransformSaveTurkTelekomOrderDIGICancelInput">
                                    <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                    </bpelx:annotation>
                                    <copy>
                                      <from>ora:doXSLTransformForDoc("../Transformations/TransformSaveTurkTelekomOrderDIGIInput.xsl", $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload)</from>
                                      <to variable="SaveTurkTelekomOrderDIGIInputVariable" part="payload"/>
                                    </copy>
                                  </assign>
                                  <assign name="AssignProcessNameCancel">
                                    <copy>
                                      <from>'BUNDLE_CHANGE_CANCEL'</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$SaveTurkTelekomOrderDIGIInputVariable.payload/ns91:ProcessName</to>
                                    </copy>
                                  </assign>
                                  <invoke name="InvokeSaveTurkTelekomOrderDIGI"
                                          partnerLink="SaveTurkTelekomOrderDIGIProvABCS"
                                          portType="ns34:SaveTurkTelekomOrderDIGIProvABCS" operation="process"
                                          inputVariable="SaveTurkTelekomOrderDIGIInputVariable"
                                          xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
                                          bpelx:invokeAsDetail="no"
                                          outputVariable="InvokeSaveTurkTelekomOrderDIGIOutputVariable"/>
                                </sequence>
                              </elseif><else>
                     <documentation>
                        <![CDATA[NO]]>
                     </documentation>
                     <empty name="EmptyNoAction"/>
                  </else>
               </if>
                          </sequence></scope>
         </else>
      </if>
                  </sequence></scope>
                <scope name="ScopeSmp">
                  <sequence>
                    <assign name="AssignProvisionServiceCode">
                      <copy ignoreMissingFromData="yes">
                        <from>$inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE/ns73:PRODUCT_CHAR_NAME = ""]/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE</from>
                        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$provisionServiceCode</to>
                      </copy>
                    </assign>
                    <if name="If10">
                      <documentation>
                        <![CDATA[PROVISION_SERVICE_CODE]]>
                      </documentation>
                      <condition>dvm:lookupValue("oramds:/apps/datamodel/DVM/ServiceProvisionCode.dvm","ServiceProvisionCode",$provisionServiceCode,"Status","OFF","Composite","BundleChangeOrderEBF", "CrNumber", "1417") = "ON"</condition>
                      <sequence>
                        <assign name="TransformProcessGeneralProductCharacteristicInput">
                          <bpelx:annotation>
                            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                          </bpelx:annotation>
                          <copy>
                            <from>ora:doXSLTransformForDoc("../Transformations/TransformationProcessGeneralProductCharacteristicInput.xsl", $inputVariable.payload)</from>
                            <to variable="InvokeProcessGeneralProductCharacteristicInput" part="payload"/>
                          </copy>
                        </assign>
                        <invoke name="InvokeProcessGeneralProductCharacteristic" bpelx:invokeAsDetail="no"
                                partnerLink="ProcessGeneralProductCharacteristicSMPProvABCS"
                                portType="ns4:ProcessGeneralProductCharacteristicSMPProvABCS" operation="process"
                                inputVariable="InvokeProcessGeneralProductCharacteristicInput"
                                outputVariable="InvokeProcessGeneralProductCharacteristicOutput"/>
                      </sequence>
                    </if>
                  </sequence>
                </scope>
              </sequence>
              <else>
                <documentation>
                  <![CDATA[NO]]>
                </documentation>
                <sequence name="Sequence">
                  <if name="If_ItemsToResumeAtBillingExist">
                    <documentation>
                      <![CDATA[if: Count of Items To Resume At Billing > 0]]>
                    </documentation>
                    <condition>count($InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:ProductKey/ns73:PRODUCT_ID) &gt; 0</condition>
                    <sequence name="SequenceInvokeProductFCBSForResume">
                      <assign name="AssignDeactivationProductsStatusActive">
                        <copy ignoreMissingFromData="yes">
                          <from>dvm:lookupValue("oramds:/apps/datamodel/DVM/FCBSProductStatusCodes.dvm","ParamName","Active","ParamValue","A")</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:ProductStatus</to>
                        </copy>
                        <copy>
                          <from>'PCHANGE_RESUME'</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_REASON_CODE</to>
                        </copy>
                        <copy>
                          <from>'46'</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_INTERACTION_TYPE_ID</to>
                        </copy>
                      </assign>
                      <assign name="AssignActionDate">
                        <copy ignoreMissingFromData="yes">
                          <from>translate($inputVariable.payload/ns63:RequestInfo/ns62:ACTION_DATE,'-','T')</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                        </copy>
                        <copy ignoreMissingFromData="yes">
                          <from>translate($actionDateVar,'/','-')</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                        </copy>
                        <copy ignoreMissingFromData="yes">
                          <from>xp20:add-dayTimeDuration-to-dateTime($actionDateVar,'PT1S')</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                        </copy>
                        <copy ignoreMissingFromData="yes">
                          <from>translate(translate($actionDateVar,'-','/'),'T','-')</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                        </copy>
                        <copy ignoreMissingFromData="yes">
                          <from>substring-before($actionDateVar,'+')</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
                        </copy>
                        <copy ignoreMissingFromData="yes">
                          <from>string($actionDateVar)</from>
                          <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_DATE</to>
                        </copy>
                      </assign>
                      <invoke name="InvokeResumeDeactivationProductsAtBilling" bpelx:invokeAsDetail="no"
                              partnerLink="ProductFCBSProvABCS" portType="ns3:ProductFCBSProvABCS"
                              operation="UpdateProductStatus"
                              inputVariable="InvokeUpdateProductStatusFCBSInputVariable"
                              outputVariable="InvokeUpdateProductStatusFCBSOutputVariable"/>
                      <scope name="ScopeUpdateProductStatusMTSForResume_Provision">
                        <sequence name="SequenceUpdateProductStatusMTSForResume_Shipment">
                          <if name="If_276994_CR_Status_Control">
                            <documentation>
                              <![CDATA[if 276994 OFF]]>
                            </documentation>
                            <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','276994','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                            <empty name="EmptyContinue"/>
                            <else>
                              <documentation>
                                <![CDATA[ON]]>
                              </documentation>
                              <if name="If_ACTION_REASON_CODE_Control">
                                <documentation>
                                  <![CDATA[if ACTION_REASON_CODE = PCHANGE_RESUME]]>
                                </documentation>
                                <condition>$InvokeUpdateProductStatusFCBSOutputVariable.payload/ns73:RequestInfo/ns62:ACTION_REASON_CODE = "PCHANGE_RESUME"</condition>
                                <sequence name="SequenceInvokeUpdateProductStatusMTS">
                                  <assign name="Transform_UpdateProductStatusMTSForResumeInput">
                                    <bpelx:annotation>
                                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                    </bpelx:annotation>
                                    <copy>
                                      <from>ora:doXSLTransformForDoc("../Transformations/Transform_UpdateProductStatusMTSForResumeInput.xsl", $InvokeUpdateProductStatusFCBSInputVariable.payload)</from>
                                      <to variable="InvokeUpdateProductStatusMTSInputVariable" part="payload"/>
                                    </copy>
                                  </assign>
                                  <invoke name="InvokeUpdateProductStatusMTS" bpelx:invokeAsDetail="no"
                                          partnerLink="UpdateProductStatusMTSProvABCS"
                                          portType="ns57:UpdateProductStatusMTSProvABCS" operation="process"
                                          inputVariable="InvokeUpdateProductStatusMTSInputVariable"
                                          outputVariable="InvokeUpdateProductStatusMTSOutputVariable"/>
                                </sequence>
                                <else>
                                  <documentation>
                                    <![CDATA[NO]]>
                                  </documentation>
                                  <empty name="EmptyContinue"/>
                                </else>
                              </if>
                            </else>
                          </if>
                        </sequence>
                      </scope>
                    </sequence>
                    <else>
                      <documentation>
                        <![CDATA[NO]]>
                      </documentation>
                      <empty name="EmptyNoProductToResume"/>
                    </else>
                  </if>
                  <assign name="AssignBundleChangeEBS_UpdateBundleChangeInput">
                    <copy ignoreMissingFromData="yes">
                      <from>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable.payload</to>
                    </copy>
                  </assign>
                  <assign name="AssignShipmentFaultInput">
                    <copy ignoreMissingFromData="yes">
                      <from>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeShipmentFaultInputVariable.payload</to>
                    </copy>
                  </assign>
                  <invoke name="InvokeShipmentFault" bpelx:invokeAsDetail="no"
                          partnerLink="ShipmentFaultOrderToMTSProvEBF" portType="ns10:ShipmentFaultOrderToMTSProvEBF"
                          operation="BundleChangeShipment" inputVariable="InvokeShipmentFaultInputVariable"/>
                  <receive name="ReceiveShipmentFault" partnerLink="ShipmentFaultOrderToMTSProvEBF"
                           portType="ns10:ShipmentFaultOrderToMTSProvEBFCallback"
                           operation="BundleChangeShipmentResponse" variable="ReceiveShipmentFaultInputVariable"/>
                </sequence>
              </else>
            </if>
            <scope name="ScopeUpdateBundleChangeOrder">
              <sequence name="Sequence_7">
                <invoke name="InvokeBundleChangeEBS_UpdateBundleChange" bpelx:invokeAsDetail="no" partnerLink="UpdateBundleChangeProductMTSProvABCS" portType="ns17:UpdateBundleChangeProductMTSProvABCS" operation="process" inputVariable="InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable" outputVariable="InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable"/><if name="IfSuccess"
                                                                                                                                                                                                                                                                                                                                                                                             xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         <![CDATA[Success]]>
      </documentation>
      <condition>$InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE="100"</condition>
      <empty name="EmptySuccess"/>
      <else>
         <sequence name="SequenceFault">
            <assign name="AssignFaultHandler">
               <copy>
                  <from>$InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
               </copy>
               <copy>
                  <from>$InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
               </copy>
            </assign>
            <invoke name="InvokeFaultHandler" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
                    portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
                    outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
         </sequence>
      </else>
   </if>
                <if name="If_Check_MARKT">
                  <documentation>
                    <![CDATA[MARKT_exist]]>
                  </documentation>
                  <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName='tt_ext_domain']/ns64:OrderItemCharValue = 'MARKT'</condition>
                  <sequence name="SequenceManageCustomerOrder">
                        <assign name="TransformManageCustomerOrderATTIPProvABCS">
                          <bpelx:annotation>
                            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                          </bpelx:annotation>
                          <copy>
                            <from>ora:doXSLTransformForDoc("../Transformations/TransformManageCustomerOrderInput.xsl", $inputVariable.payload)</from>
                            <to variable="InvokeManageCustomerOrderATTIPProvInputVariable" part="payload"/>
                          </copy>
                        </assign>
                    <scope name="Scope2637">
                      <sequence>
                        <invoke name="InvokeManageCustomerOrderATTIPProvABCS" bpelx:invokeAsDetail="no"
                                partnerLink="ManageCustomerOrderATTIPProvABCS"
                                portType="ns94:ManageCustomerOrderATTIPProvABCS" operation="process"
                                inputVariable="InvokeManageCustomerOrderATTIPProvInputVariable"
                                outputVariable="InvokeManageCustomerOrderATTIPProvOutputVariable"/>
                        <if name="IfManageCustomerOrderATTIPSuccess">
                          <condition>$InvokeManageCustomerOrderATTIPProvOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE='100'</condition>
                          <empty name="EmptySuccess"/>
                          <else>
                            <sequence name="Sequence47">
                              <assign name="AssignFaultHandler">
                                <copy>
                                  <from>$InvokeManageCustomerOrderATTIPProvOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE</from>
                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                </copy>
                                <copy>
                                  <from>$InvokeManageCustomerOrderATTIPProvOutputVariable.payload/ns90:pReqRes/ns62:RETURN_MESSAGE</from>
                                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                </copy>
                              </assign>
                              <invoke name="InvokeFaultHandler" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
                                      portType="ns2:FaultHandlerABCS" operation="HandleFault"
                                      inputVariable="HandleFaultInputVariable"
                                      outputVariable="HandleFaultOutputVariable"/>
                            </sequence>
                          </else>
                        </if>
                      </sequence>
                    </scope>
                      </sequence>
                  <else>
                    <documentation>
                      <![CDATA[MARKT_non_exist]]>
                    </documentation>
                    <if name="IfManageCustomerOrderATTIPInvoke">
                      <documentation>
                        <![CDATA[tt_accntng_srvc_or_tt_prepaid_markt]]>
                      </documentation>
                      <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE/ns74:PROVISION_SERVICE_CODE='tt_accntng_srvc' or count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME='tt_prepaid_markt'])&gt;0 </condition>
                      <sequence name="SequenceManageCustomerOrder">
                        <assign name="TransformManageCustomerOrderATTIPProvABCS">
                          <bpelx:annotation>
                            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                          </bpelx:annotation>
                          <copy>
                            <from>ora:doXSLTransformForDoc("../Transformations/TransformManageCustomerOrderInput.xsl", $inputVariable.payload)</from>
                            <to variable="InvokeManageCustomerOrderATTIPProvInputVariable" part="payload"/>
                          </copy>
                        </assign>
                        <scope name="Scope2638">
                          <sequence>
                            <invoke name="InvokeManageCustomerOrderATTIPProvABCS" bpelx:invokeAsDetail="no"
                                    partnerLink="ManageCustomerOrderATTIPProvABCS"
                                    portType="ns94:ManageCustomerOrderATTIPProvABCS" operation="process"
                                    inputVariable="InvokeManageCustomerOrderATTIPProvInputVariable"
                                    outputVariable="InvokeManageCustomerOrderATTIPProvOutputVariable"/>
                            <if name="IfManageCustomerOrderATTIPSuccess">
                              <condition>$InvokeManageCustomerOrderATTIPProvOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE='100'</condition>
                              <empty name="EmptySuccess"/>
                              <else>
                                <sequence name="Sequence47">
                                  <assign name="AssignFaultHandler">
                                    <copy>
                                      <from>$InvokeManageCustomerOrderATTIPProvOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
                                    </copy>
                                    <copy>
                                      <from>$InvokeManageCustomerOrderATTIPProvOutputVariable.payload/ns90:pReqRes/ns62:RETURN_MESSAGE</from>
                                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
                                    </copy>
                                  </assign>
                                  <invoke name="InvokeFaultHandler" bpelx:invokeAsDetail="no"
                                          partnerLink="FaultHandlerABCS" portType="ns2:FaultHandlerABCS"
                                          operation="HandleFault" inputVariable="HandleFaultInputVariable"
                                          outputVariable="HandleFaultOutputVariable"/>
                                </sequence>
                              </else>
                            </if>
                          </sequence>
                        </scope>
                      </sequence>
                      <else>
                        <documentation>
                          <![CDATA[not_tt_accntng_srvc_or_tt_prepaid_markt]]>
                        </documentation>
                        <empty name="EmptyNoManageCustomerOrderCall"/>
                      </else>
                    </if>
                  </else>
                </if>
              </sequence>
            </scope>
            <scope name="ScopeSDWAN">
              <if name="If_SDWAN">
                <documentation>
                  <![CDATA[if: meservice tt_sdwan_subs_id > 0 and tt_ley ACTION_REASON_CODE = 'REAL_SALE' and ORDER_ITEM_STATUS = 'SUCCESS']]>
                </documentation>
                <condition>(count($ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME ="tt_sdwan_subs_id"]/ns73:PRODUCT_CHAR_VALUE ) &gt; 0 and $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_meservice"]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME ="tt_sdwan_subs_id"]/ns73:PRODUCT_CHAR_VALUE != "EMPTY_VALUE") and $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "tt_ley"]/ns64:REASON_CODE = "REAL_SALE" and $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:ORDER_ITEM_STATUS = "SUCCESS"</condition>
                <sequence name="Sequence54">
                  <assign name="AssignCWOperationsEBF">
                    <copy>
                      <from>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeCWOperationsEBFInputVariable.payload</to>
                    </copy>
                  </assign>
                  <invoke name="InvokeCWOperationsEBF" partnerLink="CWOperationsEBF"
                          portType="ns98:CWOperationsEBF" operation="BundleChange"
                          inputVariable="InvokeCWOperationsEBFInputVariable" bpelx:invokeAsDetail="no"/>
                </sequence>
                <else>
                  <empty name="EmptyContinue"/>
                </else>
              </if>
            </scope>
            <scope name="ScopeCR2581">
              <sequence>
                <if name="If_CR2581">
                  <documentation>
                    <![CDATA[2581_OFF]]>
                  </documentation>
                  <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2581','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                  <sequence name="SequenceCR2581_OFF">
                    <empty name="EmptyContinue"/>
                  </sequence>
                  <else>
                    <documentation>
                      <![CDATA[ON]]>
                    </documentation>
                    <scope name="Scope2635">
                      <sequence name="SequenceCR2581_ON">
                        <if name="If_ProvisionControl">
                          <documentation>
                            <![CDATA[ProvisionSuccesful]]>
                          </documentation>
                          <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE = '100'</condition>
                          <if name="If43">
                            <documentation>
                              <![CDATA[if MOBIL_REF_SRVC]]>
                            </documentation>
                            <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "MOBIL_REF_SRVC"]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST[ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME ="IS_EXT"]/ns73:PRODUCT_CHAR_VALUE = "REQUIRED"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE != "EMPTY_VALUE"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE !=""]) &gt; 0</condition>
                            <sequence name="ScopeCampaignOperationsEBF">
                              <assign name="TransformCampaignOperationsEBFInput">
                                <bpelx:annotation>
                                  <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                </bpelx:annotation>
                                <copy>
                                  <from>ora:doXSLTransformForDoc("../Transformations/TransformCampaignOperationsEBFInput.xsl", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                                  <to variable="InvokeCampaignOperationsEBFInputVariable" part="payload"/>
                                </copy>
                              </assign>
                              <invoke name="InvokeCampaignOperationsEBF" bpelx:invokeAsDetail="no"
                                      partnerLink="CampaignOperationsEBF" portType="ns44:CampaignOperationsEBF"
                                      operation="process" inputVariable="InvokeCampaignOperationsEBFInputVariable"/>
                              <if name="CR_283686_is_OFF">
                                <documentation>
                                  <![CDATA[OFF]]>
                                </documentation>
                                <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','283686','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                                <empty name="CR_283686_OFF"/>
                                <else>
                                  <documentation>
                                    <![CDATA[ON]]>
                                  </documentation>
                                  <if name="if_CR_283686">
                                    <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "MOBIL_REF_SRVC"]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST[ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME ="IS_EXT"]/ns73:PRODUCT_CHAR_VALUE = "REQUIRED"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE != "EMPTY_VALUE"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE !=""]) &gt; 0</condition>
                                    <receive name="ReceiveCampaignOperationsEBF" partnerLink="CampaignOperationsEBF"
                                               portType="ns44:CampaignOperationsEBFCallback" operation="processResponse"
                                               variable="ReceiveCampaignOperationsEBFInputVariable"/>
                                    <else>
                                      <empty name="Continiue"/>
                                    </else>
                                  </if>
                                </else>
                              </if>
                            </sequence>
                            <else>
                              <documentation>
                                <![CDATA[NO]]>
                              </documentation>
                              <empty name="EmptyContinue"/>
                            </else>
                          </if>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <sequence name="SequenceContinue">
                              <empty name="EmptyContinue"/>
                            </sequence>
                          </else>
                        </if>
                      </sequence>
                    </scope>
                  </else>
                </if>
              </sequence>
            </scope>
            <scope name="ScopeCR283686">
              <if name="If_CR_STATUS_283686_ON">
                <documentation>
                  <![CDATA[OFF]]>
                </documentation>
                <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','283686','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                <empty name="CR_283686_OFF"/>
                <else>
                  <documentation>
                    <![CDATA[ON]]>
                  </documentation>
                  <if name="IfSuccessFromRecieve">
                    <documentation>
                      <![CDATA[SUCCESS]]>
                    </documentation>
                    <condition>$ReceiveCampaignOperationsEBFInputVariable.payload/ns63:pReqRes/ns62:RETURN_CODE = 100</condition>
                    <if name="If_Provision_Successfull">
                      <documentation>
                        <![CDATA[SUCCESS]]>
                      </documentation>
                      <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE = '100'</condition>
                      <if name="If_MOBIL_REF_SRVC">
                        <documentation>
                          <![CDATA[EXIST]]>
                        </documentation>
                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "MOBIL_REF_SRVC"]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST[ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME ="IS_EXT"]/ns73:PRODUCT_CHAR_VALUE = "REQUIRED"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE != "EMPTY_VALUE"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE !=""]) &gt; 0</condition>
                        <sequence name="Sequence">
                          <assign name="TransformCampaignOperationsEBFInput">
                            <bpelx:annotation>
                              <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                            </bpelx:annotation>
                            <copy>
                              <from>ora:doXSLTransformForDoc("../Transformations/TransformCampaignOperationsEBFInput2.xsl", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                              <to variable="InvokeCampaignOperationsEBFInputVariable" part="payload"/>
                            </copy>
                          </assign>
                          <invoke name="InvokeCampaignOperationsEBF" bpelx:invokeAsDetail="no"
                                  partnerLink="CampaignOperationsEBF" portType="ns44:CampaignOperationsEBF"
                                  operation="process" inputVariable="InvokeCampaignOperationsEBFInputVariable"/>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[NOT_EXIST]]>
                          </documentation>
                          <empty name="Continiue"/>
                        </else>
                      </if>
                      <else>
                        <documentation>
                          <![CDATA[NOT_SUCCESS]]>
                        </documentation>
                        <empty name="Continiue"/>
                      </else>
                    </if>
                    <else>
                      <documentation>
                        <![CDATA[NOT_SUCCESS]]>
                      </documentation>
                      <empty name="Continiue"/>
                    </else>
                  </if>
                </else>
              </if>
            </scope>
            <scope name="ScopeSFA">
              <faultHandlers>
                <catch faultName="bpws:selectionFailure"><sequence name="Sequence" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy>
            <from>'112'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy>
            <from>"Selection failure!"</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence></catch>
                <catchAll><sequence name="Sequence"
                                    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         <copy ignoreMissingFromData="yes">
            <from>'111'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy>
         <copy ignoreMissingFromData="yes">
            <from>'Unable to access CR_STATUS table!'</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy>
      </assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence></catchAll>
              </faultHandlers>
              <if name="If47">
                <documentation>
                  <![CDATA[Cr_Status =2840 is OFF]]>
                </documentation>
                <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2840','STATUS','jdbc/CustomSOADataSource') = 'OFF' </condition>
                <empty name="Empty"/>
                <else>
                  <documentation>
                    <![CDATA[ON]]>
                  </documentation>
                  <sequence name="Sequence30">
                    <if name="If55">
                      <documentation>
                        <![CDATA[ProvisionSuccessfull]]>
                      </documentation>
                      <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE = '100'</condition>
                      <sequence name="Sequence32">
                        <if name="If48">
                          <documentation>
                            <![CDATA[If : Not Equal call Deactivated IND and Activated ORG Create]]>
                          </documentation>
                          <condition> ($inputVariable.payload/ns63:ChangeOrder/ns64:CUSTOMER/ns65:CUSTOMER_KEY/ns65:CUSTOMER_IDENTIFIER_ID[ns65:IDENTIFIER_TYPE = "TCKNO" or ns65:IDENTIFIER_TYPE = "PSPTNO" or ns65:IDENTIFIER_TYPE = "VKNO"] and $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "MRKTNG_CUST_TP_IND"] != $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "MRKTNG_CUST_TP_ORG"])    or   ($inputVariable.payload/ns63:ChangeOrder/ns64:CUSTOMER/ns65:CUSTOMER_KEY/ns65:CUSTOMER_IDENTIFIER_ID[ns65:IDENTIFIER_TYPE = "TCKNO"] and  ((count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_dthservis"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_dthservis"]) &gt; 0 ) or  (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_leyservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_leyservice"]) &gt; 0 ) or  (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_meservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_meservice"]) &gt; 0 ) or  (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_iptvservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_iptvservice"]) &gt; 0 ) or  (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) &gt; 0 ) or (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) &gt; 0 ) or  (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_ley"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_ley"]) &gt; 0 )))</condition>
                          <sequence name="Sequence31">
                            <assign name="TransformProcessExternalCustomerCreateInput">
                              <bpelx:annotation>
                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:doXSLTransformForDoc("../Transformations/TransformProcessExternalCustomerCreateInput.xsl", $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload)</from>
                                <to variable="InvokeProcessExternalCustomerInputVariable" part="payload"/>
                              </copy>
                            </assign>
                            <invoke name="InvokeProcessExternalCustomer" bpelx:invokeAsDetail="no"
                                    partnerLink="ProcessExternalCustomerOperationsEBF"
                                    portType="ns50:ProcessExternalCustomerOperationsEBF"
                                    operation="processProcessSalesOrder"
                                    inputVariable="InvokeProcessExternalCustomerInputVariable"/>
                          </sequence>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <empty name="Empty"/>
                          </else>
                        </if><if name="If49" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         
      <![CDATA[If : Equal call IND and ORG Update]]></documentation>
      <condition>($inputVariable.payload/ns63:ChangeOrder/ns64:CUSTOMER/ns65:CUSTOMER_KEY/ns65:CUSTOMER_IDENTIFIER_ID[ns65:IDENTIFIER_TYPE = "TCKNO" or ns65:IDENTIFIER_TYPE = "PSPTNO" or ns65:IDENTIFIER_TYPE = "VKNO"] and $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "MRKTNG_CUST_TP"]/ns73:PRODUCT_CHAR_VALUE_NAME != $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "MRKTNG_CUST_TP"]/ns73:PRODUCT_CHAR_VALUE_NAME) or ($inputVariable.payload/ns63:ChangeOrder/ns64:CUSTOMER/ns65:CUSTOMER_KEY/ns65:CUSTOMER_IDENTIFIER_ID[ns65:IDENTIFIER_TYPE = "VKNO"] and count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_dthservis" or ns74:PROVISION_SERVICE_CODE = "tt_thkservice" or ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice" or ns74:PROVISION_SERVICE_CODE = "tt_meservice" or ns74:PROVISION_SERVICE_CODE = "tt_leyservice" or ns74:PROVISION_SERVICE_CODE = "tt_ley" or ns74:PROVISION_SERVICE_CODE = "tt_iptvservice" or ns74:NETWORK_SERVICE_CODE = "ADSL"]) and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_dthservis" or ns74:PROVISION_SERVICE_CODE = "tt_thkservice" or ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice" or ns74:PROVISION_SERVICE_CODE = "tt_meservice" or ns74:PROVISION_SERVICE_CODE = "tt_leyservice" or ns74:PROVISION_SERVICE_CODE = "tt_ley" or ns74:PROVISION_SERVICE_CODE = "tt_iptvservice" or ns74:NETWORK_SERVICE_CODE = "ADSL"]))</condition>
      <sequence name="Sequence33">
         <assign name="TransformProcessExternalCustomerUpdateInput">
            <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
               <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
            </bpelx:annotation>
            <copy>
               <from>ora:doXSLTransformForDoc("../Transformations/TransformationProcessExternalCustomerUpdateInput.xsl", $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload)</from>
               <to variable="InvokeProcessExternalCustomerUpdateInputVariable" part="payload"/>
            </copy>
         </assign>
         <invoke name="InvokeProcessExternalCustomerUpdate"
                 partnerLink="ProcessExternalCustomerOperationsEBF" portType="ns50:ProcessExternalCustomerOperationsEBF"
                 operation="processProcessChangeOrder" inputVariable="InvokeProcessExternalCustomerUpdateInputVariable"
                 xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
      </sequence>
      <else>
         <documentation>
            <![CDATA[NO]]>
         </documentation>
         <empty name="Empty"/>
      </else>
   </if><if name="If50" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         
      <![CDATA[If : Not Equal call Deactivated ORG and Activated IND Cancel]]></documentation>
      <condition>($inputVariable.payload/ns63:ChangeOrder/ns64:CUSTOMER/ns65:CUSTOMER_KEY/ns65:CUSTOMER_IDENTIFIER_ID[ns65:IDENTIFIER_TYPE = "TCKNO" or ns65:IDENTIFIER_TYPE = "PSPTNO" or ns65:IDENTIFIER_TYPE = "VKNO"] and $inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "MRKTNG_CUST_TP_ORG"] != $inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST/ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "MRKTNG_CUST_TP_IND"]) or  ($inputVariable.payload/ns63:ChangeOrder/ns64:CUSTOMER/ns65:CUSTOMER_KEY/ns65:CUSTOMER_IDENTIFIER_ID[ns65:IDENTIFIER_TYPE = "TCKNO"] and ((count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_dthservis"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_dthservis"]) &gt; 0 ) or (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_leyservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_leyservice"]) &gt; 0 ) or (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_meservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_meservice"]) &gt; 0 ) or (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_iptvservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_iptvservice"]) &gt; 0 ) or (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_thkservice"]) &gt; 0 ) or (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_singlethkservice"]) &gt; 0 ) or (count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_ley"]) = '0' and count($inputVariable.payload/ns63:ChangeOrder/ns64:ACTIVATED_ORDERS/ns64:SERVICE[ns74:PROVISION_SERVICE_CODE = "tt_ley"]) &gt; 0 )))</condition>
      <sequence name="Sequence34">
         <assign name="TransformProcessExternalCustomerDeleteInput">
            <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
               <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
            </bpelx:annotation>
            <copy>
               <from>ora:doXSLTransformForDoc("../Transformations/TransformProcessExternalCustomerDeleteInput.xsl", $ReceiveFulfillmentEBS_VASCallback_InputVariable.payload)</from>
               <to variable="InvokeProcessExternalCustomerDeleteInputVariable" part="payload"/>
            </copy>
         </assign>
         <invoke name="InvokeProcessExternalCustomerDelete" partnerLink="ProcessExternalCustomerOperationsEBF"
                 portType="ns50:ProcessExternalCustomerOperationsEBF" operation="processProcessCancelOrder"
                 inputVariable="InvokeProcessExternalCustomerDeleteInputVariable"
                 xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
      </sequence>
      <else>
         <documentation>
            <![CDATA[NO]]>
         </documentation>
         <empty name="Empty"/>
      </else>
   </if></sequence>
                      <else>
                        <documentation>
                          <![CDATA[NO]]>
                        </documentation>
                        <empty name="Empty"/>
                      </else>
                    </if>
                  </sequence>
                </else>
              </if>
            </scope>
            <scope name="ScopeCR2630">
              <if name="If_CR2581">
                <documentation>
                  <![CDATA[2630_OFF]]>
                </documentation>
                <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2630','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                <sequence name="SequenceCR2630_OFF">
                  <empty name="EmptyContinue"/>
                </sequence>
                <else>
                  <documentation>
                    <![CDATA[ON]]>
                  </documentation>
                  <scope name="ScopeCR2630_ON">
                    <sequence name="SequenceCR2630_ON">
                      <if name="If_ProvisionControl">
                        <documentation>
                          <![CDATA[ProvisionSuccesful]]>
                        </documentation>
                        <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE = '100'</condition>
                        <if name="If43">
                          <documentation>
                            <![CDATA[if MOBIL_REF_SRVC]]>
                          </documentation>
                          <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "MOBIL_REF_SRVC"]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST[ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "IS_EXT"]/ns73:PRODUCT_CHAR_VALUE = "NOT_REQUIRED"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE != "EMPTY_VALUE"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE != ""][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "SMS_STATU"]/ns73:PRODUCT_CHAR_VALUE = "E"]) &gt; 0</condition>
                          <sequence name="ScopeCampaignOperationsEBF">
                            <assign name="TransformCampaignOperationsEBFInput">
                              <bpelx:annotation>
                                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:doXSLTransformForDoc("../Transformations/TransformCampaignOperationsEBFForModel1Input.xsl", $ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload)</from>
                                <to variable="InvokeCampaignOperationsEBFInputVariable" part="payload"/>
                              </copy>
                            </assign>
                            <invoke name="InvokeCampaignOperationsEBF" bpelx:invokeAsDetail="no"
                                    partnerLink="CampaignOperationsEBF" portType="ns44:CampaignOperationsEBF"
                                    operation="process" inputVariable="InvokeCampaignOperationsEBFInputVariable"/>
                          </sequence>
                          <else>
                            <documentation>
                              <![CDATA[NO]]>
                            </documentation>
                            <empty name="EmptyContinue"/>
                          </else>
                        </if>
                        <else>
                          <documentation>
                            <![CDATA[NO]]>
                          </documentation>
                          <sequence name="SequenceContinue">
                            <empty name="EmptyContinue"/>
                          </sequence>
                        </else>
                      </if>
                    </sequence>
                  </scope>
                </else>
              </if>
            </scope><scope name="ScopeCR2949" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <sequence name="SequenceCR2949">
                <if name="If44">
         <documentation>
            
         <![CDATA[CR2949 is OFF]]></documentation>
         <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2949','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
         <sequence name="SequenceCR2949_OFF">
            <empty name="EmptyContinue"/>
         </sequence>
         <else>
            
         <documentation>
                      <![CDATA[ON]]>
                    </documentation><sequence name="SequenceCR2630_ON" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <if name="If45">
                     <documentation>
                        
                     <![CDATA[if Provision is successful]]></documentation>
                     <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE = '100'</condition>
                     <if name="If43">
                        <documentation>
                           <![CDATA[if MOBIL_REF_SRVC]]>
                        </documentation>
                        <condition>count($inputVariable.payload/ns63:ChangeOrder/ns64:DEACTIVATED_ORDERS[ns64:SERVICE/ns74:PROVISION_SERVICE_CODE = "MOBIL_REF_SRVC"]/ns64:PRODUCT/ns73:PRODUCT_CHAR_VALUE_LIST[ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "IS_EXT"]/ns73:PRODUCT_CHAR_VALUE = "PREPAID_REQUIRED"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE != "EMPTY_VALUE"][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "REF_GSM"]/ns73:PRODUCT_CHAR_VALUE != ""][ns73:PRODUCT_CHAR_VALUE[ns73:PRODUCT_CHAR_NAME = "SMS_STATU"]/ns73:PRODUCT_CHAR_VALUE = "E"]) &gt; 0</condition>
                        <sequence name="SequencePrepaidCampaignOperationsEBF">
                           <assign name="TransformPrepaidCampaignOperationsEBFInput">
                              <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                 <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                 <from>ora:doXSLTransformForDoc("../Transformations/TransformPrepaidCampaignOperationsEBFInput.xsl", $inputVariable.payload)</from>
                                 <to variable="InvokePrepaidCampaignOperationsEBFInputVariable" part="payload"/>
                              </copy>
                           </assign>
                           <invoke name="InvokePrepaidCampaignOperationsEBF"
                                   partnerLink="PrepaidCampaignOperationsEBF"
                                   portType="ns48:PrepaidCampaignOperationsEBF"
                                   operation="process" inputVariable="InvokePrepaidCampaignOperationsEBFInputVariable"
                                   xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                        </sequence>
                        <else>
                           <documentation>
                              <![CDATA[NO]]>
                           </documentation>
                           <empty name="EmptyContinue"/>
                        </else>
                     </if>
                     <else>
                        <documentation>
                           <![CDATA[NO]]>
                        </documentation>
                        <sequence name="SequenceContinue">
                           <empty name="EmptyContinue"/>
                        </sequence>
                     </else>
                  </if>
               </sequence></else>
      </if>
              </sequence></scope><scope name="ScopeCHATBOT"
                                        xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <sequence name="SequenceCHATBOT"><if name="If55">
         <documentation>
            
         <![CDATA[TYS OFF-267621]]></documentation>
         <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','267621','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
         <sequence name="SequenceTYS_OFF_267621_OFF">
            <empty name="EmptyContinue"/>
         </sequence>
         <else>
            
         <documentation>
                      <![CDATA[ON]]>
                    </documentation><sequence name="SequenceCR267621_ON" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <if name="If57">
                     <documentation>
                        
                     <![CDATA[If : ChannelName = 'CHATBOT']]></documentation>
                     <condition>$inputVariable.payload/ns63:RequestInfo/ns62:CHANNEL_NAME = 'CHATBOT'</condition>
                     
                     <sequence name="Sequence36">
                          <assign name="TransformTransactionCallbackInput">
                              <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                 <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                 <from>ora:doXSLTransformForDoc("../Transformations/TransformTransactionCallbackInput.xsl", $inputVariable.payload)</from>
                                 <to variable="InvokeTransactionCallbackInputVariable" part="payload"/>
                              </copy>
                           </assign>
                          <invoke name="InvokeTransactionCallback" partnerLink="TransactionCallbackCHATBOTProvABCS"
                                  portType="ns54:TransactionCallbackCHATBOTProvABCS" operation="process"
                                  inputVariable="InvokeTransactionCallbackInputVariable"
                                  xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"
                                  outputVariable="InvokeTransactionCallbackOutputVariable"/>
                          <if name="If56">
                        <documentation>
                           <![CDATA[if MOBIL_REF_SRVC]]>
                        </documentation>
                        <condition>$InvokeTransactionCallbackOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE = '100'</condition>
                        
                        <empty name="EmptySuccess"/><else>
                           <documentation>
                              <![CDATA[NO]]>
                           </documentation>
                           
                        <sequence name="Sequence37" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="AssignFaultHandler">
         
         
      <copy ignoreMissingFromData="yes">
            <from>$InvokeTransactionCallbackOutputVariable.payload/ns90:pReqRes/ns62:RETURN_CODE</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
         </copy><copy ignoreMissingFromData="yes">
            <from>$InvokeTransactionCallbackOutputVariable.payload/ns90:pReqRes/ns62:RETURN_MESSAGE</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
         </copy></assign>
      <invoke name="InvokeHandleFault" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
              portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
              outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
   </sequence></else>
                     </if>
                        </sequence><else>
                        <documentation>
                           <![CDATA[NO]]>
                        </documentation>
                        
                     <empty name="Not_Chatbot"/></else>
                  </if>
               </sequence></else>
      </if></sequence></scope><scope name="ScopeCBOX"
                                     xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <sequence><if name="If52">
         <documentation>
            
         <![CDATA[TYS OFF-269302]]></documentation>
         <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','269302','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
         
         <empty name="EmptyContinue"/><else>
            
         <documentation><![CDATA[ON]]></documentation><if name="If53"
                                                          xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                     <documentation>
                        
                     <![CDATA[If Success]]></documentation>
                     <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE = 100</condition>
                     
                     <sequence>
                        <if name="If56">
                        <documentation>
                           
                        <![CDATA[If CBOX]]></documentation>
                        <condition>$inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "tt_ext_domain"]/ns64:OrderItemCharValue = 'CBOX' and string-length($inputVariable.payload/ns63:ChangeOrder/ns64:OrderChar[ns64:OrderItemCharName = "tt_ext_orderid"]/ns64:OrderItemCharValue) &gt; 0</condition>
                        
                        <sequence name="Sequence35">
                            <assign name="TransformNotifyCampaignOrderStatusInput">
                              <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                 <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                 <from>ora:doXSLTransformForDoc("../Transformations/TransformNotifyCampaignOrderStatusInput.xsl", $inputVariable.payload)</from>
                                 <to variable="InvokeNotifyCampaignOrderStatusEBFInputVariable" part="payload"/>
                              </copy>
                           </assign>
                            <invoke name="InvokeNotifyCampaignOrderStatusEBF" partnerLink="NotifyCampaignOrderStatusCBOXEBF"
                                    portType="ns53:NotifyCampaignOrderStatusCBOXEBF" operation="process"
                                    inputVariable="InvokeNotifyCampaignOrderStatusEBFInputVariable"
                                    xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                          </sequence><else>
                           <documentation>
                              <![CDATA[NO]]>
                           </documentation>
                           
                        <empty name="EmptyContinue"/></else>
                     </if></sequence><else>
                        <documentation>
                           <![CDATA[NO]]>
                        </documentation>
                        
                     <empty name="EmptyContinue"/></else>
                  </if></else>
      </if></sequence></scope><scope name="ScopeCR2321" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <sequence name="SequenceCR2321"><if name="If36">
         <documentation>
            
         <![CDATA[CrStatus (2321) = OFF]]></documentation>
         <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','2321','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
         
         <empty name="EmptyContinue"/><else>
            
         <documentation><![CDATA[ON]]></documentation><scope name="ScopeAveaCampaign"><if name="If37"
                                                                                  xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                     <documentation>
                        
                     <![CDATA[OffTheAveaCampaigns]]></documentation>
                     <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE = 100</condition>
                     
                     <sequence name="SequenceAveaCampaign">
                          <assign name="TransformUpsellInsertInput">
                              <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                 <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                 <from>ora:doXSLTransformForDoc("../Transformations/TransformUpsellInsertInput.xsl", $inputVariable.payload)</from>
                                 <to variable="UpsellInsertPAYFLEXInputVariable" part="payload"/>
                              </copy>
                           </assign>
                          <invoke name="InvokeUpsellInsertPAYFLEX" partnerLink="UpsellInsertPAYFLEXProvABCS"
                                  portType="ns59:UpsellInsertPAYFLEXProvABCS" operation="process"
                                  inputVariable="UpsellInsertPAYFLEXInputVariable"
                                  xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
                                  outputVariable="UpsellInsertPAYFLEXOutputVariable" bpelx:invokeAsDetail="no"/></sequence><else>
                        <documentation>
                           <![CDATA[NO]]>
                        </documentation>
                        
                     <empty name="EmptyContinue"/></else>
                  </if></scope></else>
      </if></sequence></scope>
            <if name="If_success">
              <documentation>
                <![CDATA[ProvisionSuccesful]]>
              </documentation>
              <condition>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE = '100'</condition>
              <scope name="ScopeClaimsBPM">
                <sequence>
                  <assign name="AssignSendChangeOrderToBPM">
                    <copy ignoreMissingFromData="yes">
                      <from>$ReceiveFulfillmentEBS_ProvisionCallback_InputVariable.payload</from>
                      <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeSendChangeOrderToBPMInputVariable.payload</to>
                    </copy>
                  </assign>
                  <invoke name="InvokeSendChangeOrderToBPM" bpelx:invokeAsDetail="no"
                          partnerLink="ProcessClaimsBPMProvABCS" portType="ns18:ProcessClaimsBPMProvABCS"
                          operation="SendChangeOrder" inputVariable="InvokeSendChangeOrderToBPMInputVariable"
                          outputVariable="InvokeSendChangeOrderToBPMOutputVariable"/>
                </sequence>
              </scope>
              <else>
                <documentation>
                  <![CDATA[NO]]>
                </documentation>
                <empty name="Empty_Claims"/>
              </else>
            </if>
          </sequence>
          <else>
            <documentation>
              <![CDATA[NO]]>
            </documentation><sequence name="SequenceShipmentFaulted"
                                      xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <if name="If_ItemsToResumeAtBillingExist">
         <documentation>
            <![CDATA[if: Count of Items To Resume At Billing > 0]]>
         </documentation>
         <condition>count($InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:ProductKey/ns73:PRODUCT_ID) &gt; 0</condition>
         <sequence name="SequenceInvokeProductFCBSForResume">
            <assign name="AssignDeactivationProductsStatusActive">
               <copy ignoreMissingFromData="yes">
                  <from>dvm:lookupValue("oramds:/apps/datamodel/DVM/FCBSProductStatusCodes.dvm","ParamName","Active","ParamValue","A")</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:ProductStatus</to>
               </copy>
               <copy>
                  <from>'PCHANGE_RESUME'</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_REASON_CODE</to>
               </copy>
               <copy>
                  <from>'46'</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_INTERACTION_TYPE_ID</to>
               </copy>
            </assign>
            <assign name="AssignActionDate">
               <copy ignoreMissingFromData="yes">
                  <from>translate($inputVariable.payload/ns63:RequestInfo/ns62:ACTION_DATE,'-','T')</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
               </copy>
               <copy ignoreMissingFromData="yes">
                  <from>translate($actionDateVar,'/','-')</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
               </copy>
               <copy ignoreMissingFromData="yes">
                  <from>xp20:add-dayTimeDuration-to-dateTime($actionDateVar,'PT1S')</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
               </copy>
               <copy ignoreMissingFromData="yes">
                  <from>translate(translate($actionDateVar,'-','/'),'T','-')</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
               </copy>
               <copy ignoreMissingFromData="yes">
                  <from>substring-before($actionDateVar,'+')</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$actionDateVar</to>
               </copy>
               <copy ignoreMissingFromData="yes">
                  <from>string($actionDateVar)</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeUpdateProductStatusFCBSInputVariable.payload/ns73:RequestInfo/ns62:ACTION_DATE</to>
               </copy>
            </assign>
            <invoke name="InvokeResumeDeactivationProductsAtBilling" bpelx:invokeAsDetail="no"
                    partnerLink="ProductFCBSProvABCS" portType="ns3:ProductFCBSProvABCS" operation="UpdateProductStatus"
                    inputVariable="InvokeUpdateProductStatusFCBSInputVariable"
                    outputVariable="InvokeUpdateProductStatusFCBSOutputVariable"
                    xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
            <scope name="ScopeUpdateProductStatusMTSForResume_Provision_2">
               <sequence name="SequenceUpdateProductStatusMTSForResume_Shipment">
                  <if name="If_276994_CR_Status_Control">
                     <documentation>
                        <![CDATA[if 276994 OFF]]>
                     </documentation>
                     <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','276994','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
                     <empty name="EmptyContinue"/>
                     <else>
                        <documentation>
                           <![CDATA[ON]]>
                        </documentation>
                        <if name="If_ACTION_REASON_CODE_Control">
                           <documentation>
                              <![CDATA[if ACTION_REASON_CODE = PCHANGE_RESUME]]>
                           </documentation><condition>$InvokeUpdateProductStatusFCBSOutputVariable.payload/ns73:RequestInfo/ns62:ACTION_REASON_CODE = "PCHANGE_RESUME"</condition>
                           <sequence name="SequenceInvokeUpdateProductStatusMTS">
                              <assign name="Transform_UpdateProductStatusMTSForResumeInput">
                                 <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                                 </bpelx:annotation>
                                 <copy>
                                    <from>ora:doXSLTransformForDoc("../Transformations/Transform_UpdateProductStatusMTSForResumeInput.xsl", $InvokeUpdateProductStatusFCBSInputVariable.payload)</from>
                                    <to variable="InvokeUpdateProductStatusMTSInputVariable" part="payload"/>
                                 </copy>
                              </assign>
                              <invoke name="InvokeUpdateProductStatusMTS" bpelx:invokeAsDetail="no"
                                      partnerLink="UpdateProductStatusMTSProvABCS"
                                      portType="ns57:UpdateProductStatusMTSProvABCS" operation="process"
                                      inputVariable="InvokeUpdateProductStatusMTSInputVariable"
                                      outputVariable="InvokeUpdateProductStatusMTSOutputVariable"
                                      xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                           </sequence>
                           <else>
                              <documentation>
                                 <![CDATA[NO]]>
                              </documentation>
                              <empty name="EmptyContinue"/>
                           </else>
                        </if>
                     </else>
                  </if>
               </sequence>
            </scope>
         </sequence>
         <else>
            <documentation>
               <![CDATA[NO]]>
            </documentation>
            <empty name="EmptyNoProductToResume"/>
         </else>
      </if>
      <scope name="ScopeUpdateBundleChangeOrder_2">
         <sequence name="Sequence_7">
            <assign name="Assign_UpdateBundle">
               <copy ignoreMissingFromData="yes">
                  <from>$ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable.payload</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable.payload</to>
               </copy>
            </assign>
            <invoke name="InvokeBundleChangeEBS_UpdateBundleChange" bpelx:invokeAsDetail="no"
                    partnerLink="UpdateBundleChangeProductMTSProvABCS"
                    portType="ns17:UpdateBundleChangeProductMTSProvABCS" operation="process"
                    inputVariable="InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable"
                    outputVariable="InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable"
                    xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/><if name="IfSuccess"
                                                                                xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         <![CDATA[Success]]>
      </documentation>
      <condition>$InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE="100"</condition>
      <empty name="EmptySuccess"/>
      <else>
         <sequence name="SequenceFault">
            <assign name="AssignFaultHandler">
               <copy>
                  <from>$InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
               </copy>
               <copy>
                  <from>$InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
               </copy>
            </assign>
            <invoke name="InvokeFaultHandler" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
                    portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
                    outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
         </sequence>
      </else>
   </if></sequence>
      </scope>
      <scope name="ScopeCR1718">
         <faultHandlers>
            <catchAll>
               <empty name="DoNothing"/>
            </catchAll>
         </faultHandlers>
         <if name="If_CR1718">
            <documentation>
               <![CDATA[CR1718 = OFF]]>
            </documentation>
            <condition>oraext:lookup-table('CR_STATUS','CR_NUMBER','1718','STATUS','jdbc/CustomSOADataSource') = 'OFF'</condition>
            <sequence name="SequenceSendSms">
               <assign name="TransformSendSmsInput">
                  <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                     <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                     <from>ora:doXSLTransformForDoc("../Transformations/SendSmsInput.xsl", $ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable.payload)</from>
                     <to variable="InvokeSendSmsInputVariable" part="payload"/>
                  </copy>
               </assign>
               <invoke name="InvokeSendSms" bpelx:invokeAsDetail="no" partnerLink="SendSMSSMMProvEBF"
                       portType="ns21:SendSMSSMMProvEBF" operation="SendSMS" inputVariable="InvokeSendSmsInputVariable"
                       xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
            </sequence>
            <else>
               <documentation>
                  <![CDATA[ON]]>
               </documentation>
               <sequence name="SequenceInsertCrmMessage"
                         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <assign name="TransformInsertCrmMessageInput">
         <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
         </bpelx:annotation>
         <copy>
            <from>ora:doXSLTransformForDoc("../Transformations/TransformInsertCrmMessageInput.xsl", $ReceiveShipmentOrderEBS_ShipmentCallback_InputVariable.payload)</from>
            <to variable="InvokeInsertCrmMessageInputVariable" part="payload"/>
         </copy>
      </assign>
      <invoke name="InvokeInsertCrmMessage" partnerLink="InsertCrmMessageSMMProvEBF"
              portType="ns31:InsertCrmMessageSMMProvEBF" operation="process"
              inputVariable="InvokeInsertCrmMessageInputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
              bpelx:invokeAsDetail="no" outputVariable="InvokeInsertCrmMessageOutputVariable"/>
   </sequence>
            </else>
         </if>
      </scope>
   </sequence></else>
        </if>
      </sequence>
      <else>
        <documentation>
          <![CDATA[NO]]>
        </documentation>
        <sequence name="SequenceCancelled">
          <if name="If_TivibuTicariTimeout">
            <documentation>
              <![CDATA[TivibuTicariTimeout = true()]]>
            </documentation>
            <condition>$TivibuTicariTimeout = true()</condition>
            <empty name="DoNothing"/>
            <else>
              <documentation>
                <![CDATA[NO]]>
              </documentation>
              <sequence name="SequenceInsertCrmMessage">
                <assign name="TransformInsertCrmMessageCancelFromMTSInput">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:doXSLTransformForDoc("../Transformations/TransformInsertCrmMessageCancelFromMTSInput.xsl", $inputVariable.payload)</from>
                    <to variable="InvokeInsertCrmMessageAsyncInputVariable" part="payload"/>
                  </copy>
                </assign>
                <invoke name="InvokeInsertCrmMessage" bpelx:invokeAsDetail="no"
                        partnerLink="InsertCrmMessageAsyncSMMProvEBF" portType="ns40:InsertCrmMessageAsyncSMMProvEBF"
                        operation="process" inputVariable="InvokeInsertCrmMessageAsyncInputVariable"/>
              </sequence>
            </else>
          </if>
          <sequence name="SequenceAdjustInvoiceCancelled">
            <assign name="TransformAdjustInvoiceInput">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
              </bpelx:annotation>
              <copy>
                <from>ora:doXSLTransformForDoc("../Transformations/TransformAdjustInvoiceInput.xsl", $inputVariable.payload)</from>
                <to variable="InvokeAdjustInvoiceInputVariable" part="payload"/>
              </copy>
            </assign>
            <assign name="AssignTTSCancelled">
              <copy>
                <from>"0"</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:faturaDetayDizi/ns89:item/ns89:deger</to>
              </copy>
              <copy>
                <from>"1"</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:tutarDuzeltmeyleKapat</to>
              </copy>
              <copy>
                <from>"1"</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeAdjustInvoiceInputVariable.payload/ns89:ftdSebebi</to>
              </copy>
            </assign>
            <invoke name="InvokeAdjustInvoice" bpelx:invokeAsDetail="no" partnerLink="AdjustInvoiceTTOProvABCS"
                    portType="ns37:AdjustInvoiceTTOProvABCS" operation="process"
                    inputVariable="InvokeAdjustInvoiceInputVariable"
                    outputVariable="InvokeAdjustInvoiceOutputVariable"/>
          </sequence>
          <sequence name="SequenceUpdateBundleChangeProduct">
            <assign name="AssignUpdateBundleChangeProduct">
              <copy ignoreMissingFromData="yes">
                <from>$inputVariable.payload</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable.payload</to>
              </copy>
              <copy>
                <from>"10302"</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_CODE</to>
              </copy>
              <copy>
                <from>"CANCELLED"</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable.payload/ns63:RequestInfo/ns62:RETURN_MESSAGE</to>
              </copy>
            </assign>
            <invoke name="InvokeUpdateBundleChangeProduct" bpelx:invokeAsDetail="no"
                    partnerLink="UpdateBundleChangeProductMTSProvABCS"
                    portType="ns17:UpdateBundleChangeProductMTSProvABCS" operation="process"
                    inputVariable="InvokeBundleChangeEBS_UpdateBundleChangeOrder_InputVariable"
                    outputVariable="InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable"/><if name="IfSuccess"
                                                                                                       xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         <![CDATA[Success]]>
      </documentation>
      <condition>$InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE="100"</condition>
      <empty name="EmptySuccess"/>
      <else>
         <sequence name="SequenceFault">
            <assign name="AssignFaultHandler">
               <copy>
                  <from>$InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_CODE</to>
               </copy>
               <copy>
                  <from>$InvokeBundleChangeEBS_UpdateBundleChangeOrder_OutputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</from>
                  <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$HandleFaultInputVariable.payload/ns63:RequestResponseType/ns62:RETURN_MESSAGE</to>
               </copy>
            </assign>
            <invoke name="InvokeFaultHandler" bpelx:invokeAsDetail="no" partnerLink="FaultHandlerABCS"
                    portType="ns2:FaultHandlerABCS" operation="HandleFault" inputVariable="HandleFaultInputVariable"
                    outputVariable="HandleFaultOutputVariable" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
         </sequence>
      </else>
   </if></sequence>
        </sequence>
      </else>
    </if>
  </sequence>
</process>